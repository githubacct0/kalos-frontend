// source: timesheet_classcode.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.TimesheetClassCode', null, global);
goog.exportSymbol('proto.TimesheetClassCodeList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TimesheetClassCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TimesheetClassCode.repeatedFields_, null);
};
goog.inherits(proto.TimesheetClassCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TimesheetClassCode.displayName = 'proto.TimesheetClassCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TimesheetClassCodeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TimesheetClassCodeList.repeatedFields_, null);
};
goog.inherits(proto.TimesheetClassCodeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TimesheetClassCodeList.displayName = 'proto.TimesheetClassCodeList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TimesheetClassCode.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TimesheetClassCode.prototype.toObject = function(opt_includeInstance) {
  return proto.TimesheetClassCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TimesheetClassCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimesheetClassCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    billable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    classcodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    classcodeQbId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    classcodeQbName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TimesheetClassCode}
 */
proto.TimesheetClassCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TimesheetClassCode;
  return proto.TimesheetClassCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TimesheetClassCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TimesheetClassCode}
 */
proto.TimesheetClassCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBillable(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClasscodeId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClasscodeQbId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClasscodeQbName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TimesheetClassCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TimesheetClassCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TimesheetClassCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimesheetClassCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBillable();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getClasscodeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getClasscodeQbId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getClasscodeQbName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.TimesheetClassCode.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.TimesheetClassCode.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool billable = 3;
 * @return {boolean}
 */
proto.TimesheetClassCode.prototype.getBillable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setBillable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 classcode_id = 4;
 * @return {number}
 */
proto.TimesheetClassCode.prototype.getClasscodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setClasscodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 classcode_qb_id = 5;
 * @return {number}
 */
proto.TimesheetClassCode.prototype.getClasscodeQbId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setClasscodeQbId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string classcode_qb_name = 6;
 * @return {string}
 */
proto.TimesheetClassCode.prototype.getClasscodeQbName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setClasscodeQbName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string field_mask = 7;
 * @return {!Array<string>}
 */
proto.TimesheetClassCode.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 page_number = 8;
 * @return {number}
 */
proto.TimesheetClassCode.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool is_active = 9;
 * @return {boolean}
 */
proto.TimesheetClassCode.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.TimesheetClassCode} returns this
 */
proto.TimesheetClassCode.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TimesheetClassCodeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TimesheetClassCodeList.prototype.toObject = function(opt_includeInstance) {
  return proto.TimesheetClassCodeList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TimesheetClassCodeList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimesheetClassCodeList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.TimesheetClassCode.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TimesheetClassCodeList}
 */
proto.TimesheetClassCodeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TimesheetClassCodeList;
  return proto.TimesheetClassCodeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TimesheetClassCodeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TimesheetClassCodeList}
 */
proto.TimesheetClassCodeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.TimesheetClassCode;
      reader.readMessage(value,proto.TimesheetClassCode.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TimesheetClassCodeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TimesheetClassCodeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TimesheetClassCodeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimesheetClassCodeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.TimesheetClassCode.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated TimesheetClassCode results = 1;
 * @return {!Array<!proto.TimesheetClassCode>}
 */
proto.TimesheetClassCodeList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.TimesheetClassCode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TimesheetClassCode, 1));
};


/**
 * @param {!Array<!proto.TimesheetClassCode>} value
 * @return {!proto.TimesheetClassCodeList} returns this
*/
proto.TimesheetClassCodeList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.TimesheetClassCode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TimesheetClassCode}
 */
proto.TimesheetClassCodeList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.TimesheetClassCode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.TimesheetClassCodeList} returns this
 */
proto.TimesheetClassCodeList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.TimesheetClassCodeList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.TimesheetClassCodeList} returns this
 */
proto.TimesheetClassCodeList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto);
