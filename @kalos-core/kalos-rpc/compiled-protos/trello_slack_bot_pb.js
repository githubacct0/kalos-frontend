// source: trello_slack_bot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_api_httpbody_pb = require('./google/api/httpbody_pb.js');
goog.object.extend(proto, google_api_httpbody_pb);
var google_rpc_error_details_pb = require('./google/rpc/error_details_pb.js');
goog.object.extend(proto, google_rpc_error_details_pb);
goog.exportSymbol('proto.HelpRequest', null, global);
goog.exportSymbol('proto.MessageBox', null, global);
goog.exportSymbol('proto.Request', null, global);
goog.exportSymbol('proto.Section', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.HelpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.HelpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.HelpRequest.displayName = 'proto.HelpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Request.displayName = 'proto.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MessageBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MessageBox.repeatedFields_, null);
};
goog.inherits(proto.MessageBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MessageBox.displayName = 'proto.MessageBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Section = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Section, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Section.displayName = 'proto.Section';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.HelpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.HelpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.HelpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.HelpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rawBody: (f = msg.getRawBody()) && google_api_httpbody_pb.HttpBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.HelpRequest}
 */
proto.HelpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.HelpRequest;
  return proto.HelpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.HelpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.HelpRequest}
 */
proto.HelpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_api_httpbody_pb.HttpBody;
      reader.readMessage(value,google_api_httpbody_pb.HttpBody.deserializeBinaryFromReader);
      msg.setRawBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.HelpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.HelpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.HelpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.HelpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRawBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_api_httpbody_pb.HttpBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.api.HttpBody raw_body = 1;
 * @return {?proto.google.api.HttpBody}
 */
proto.HelpRequest.prototype.getRawBody = function() {
  return /** @type{?proto.google.api.HttpBody} */ (
    jspb.Message.getWrapperField(this, google_api_httpbody_pb.HttpBody, 1));
};


/**
 * @param {?proto.google.api.HttpBody|undefined} value
 * @return {!proto.HelpRequest} returns this
*/
proto.HelpRequest.prototype.setRawBody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.HelpRequest} returns this
 */
proto.HelpRequest.prototype.clearRawBody = function() {
  return this.setRawBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.HelpRequest.prototype.hasRawBody = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, ""),
    teamId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    teamDomain: jspb.Message.getFieldWithDefault(msg, 4, ""),
    enterpriseId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    channelName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    command: jspb.Message.getFieldWithDefault(msg, 10, ""),
    text: jspb.Message.getFieldWithDefault(msg, 11, ""),
    responseUrl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    triggerId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    apiAppId: jspb.Message.getFieldWithDefault(msg, 14, ""),
    body: (f = msg.getBody()) && google_api_httpbody_pb.HttpBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Request}
 */
proto.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Request;
  return proto.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Request}
 */
proto.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamDomain(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnterpriseId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseUrl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiAppId(value);
      break;
    case 15:
      var value = new google_api_httpbody_pb.HttpBody;
      reader.readMessage(value,google_api_httpbody_pb.HttpBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTeamId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTeamDomain();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEnterpriseId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getResponseUrl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTriggerId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getApiAppId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_api_httpbody_pb.HttpBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.Request.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.Request.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string team_id = 3;
 * @return {string}
 */
proto.Request.prototype.getTeamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string team_domain = 4;
 * @return {string}
 */
proto.Request.prototype.getTeamDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setTeamDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string enterprise_id = 5;
 * @return {string}
 */
proto.Request.prototype.getEnterpriseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setEnterpriseId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string channel_id = 6;
 * @return {string}
 */
proto.Request.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string channel_name = 7;
 * @return {string}
 */
proto.Request.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setChannelName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_id = 8;
 * @return {string}
 */
proto.Request.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string user_name = 9;
 * @return {string}
 */
proto.Request.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string command = 10;
 * @return {string}
 */
proto.Request.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string text = 11;
 * @return {string}
 */
proto.Request.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string response_url = 12;
 * @return {string}
 */
proto.Request.prototype.getResponseUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setResponseUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string trigger_id = 13;
 * @return {string}
 */
proto.Request.prototype.getTriggerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setTriggerId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string api_app_id = 14;
 * @return {string}
 */
proto.Request.prototype.getApiAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setApiAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional google.api.HttpBody body = 15;
 * @return {?proto.google.api.HttpBody}
 */
proto.Request.prototype.getBody = function() {
  return /** @type{?proto.google.api.HttpBody} */ (
    jspb.Message.getWrapperField(this, google_api_httpbody_pb.HttpBody, 15));
};


/**
 * @param {?proto.google.api.HttpBody|undefined} value
 * @return {!proto.Request} returns this
*/
proto.Request.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Request.prototype.hasBody = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MessageBox.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MessageBox.prototype.toObject = function(opt_includeInstance) {
  return proto.MessageBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MessageBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MessageBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sectionsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MessageBox}
 */
proto.MessageBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MessageBox;
  return proto.MessageBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MessageBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MessageBox}
 */
proto.MessageBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MessageBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MessageBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MessageBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MessageBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.MessageBox.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageBox} returns this
 */
proto.MessageBox.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.MessageBox.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageBox} returns this
 */
proto.MessageBox.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string sections = 3;
 * @return {!Array<string>}
 */
proto.MessageBox.prototype.getSectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.MessageBox} returns this
 */
proto.MessageBox.prototype.setSectionsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.MessageBox} returns this
 */
proto.MessageBox.prototype.addSections = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MessageBox} returns this
 */
proto.MessageBox.prototype.clearSectionsList = function() {
  return this.setSectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Section.prototype.toObject = function(opt_includeInstance) {
  return proto.Section.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Section} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Section.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, ""),
    teamId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    teamDomain: jspb.Message.getFieldWithDefault(msg, 4, ""),
    enterpriseId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    channelName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    command: jspb.Message.getFieldWithDefault(msg, 10, ""),
    responseUrl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    triggerId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    apiAppId: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Section}
 */
proto.Section.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Section;
  return proto.Section.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Section} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Section}
 */
proto.Section.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamDomain(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnterpriseId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseUrl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiAppId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Section.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Section.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Section} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Section.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTeamId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTeamDomain();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEnterpriseId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getResponseUrl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTriggerId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getApiAppId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.Section.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.Section.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string team_id = 3;
 * @return {string}
 */
proto.Section.prototype.getTeamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string team_domain = 4;
 * @return {string}
 */
proto.Section.prototype.getTeamDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setTeamDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string enterprise_id = 5;
 * @return {string}
 */
proto.Section.prototype.getEnterpriseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setEnterpriseId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string channel_id = 6;
 * @return {string}
 */
proto.Section.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string channel_name = 7;
 * @return {string}
 */
proto.Section.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setChannelName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_id = 8;
 * @return {string}
 */
proto.Section.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string user_name = 9;
 * @return {string}
 */
proto.Section.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string command = 10;
 * @return {string}
 */
proto.Section.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string response_url = 12;
 * @return {string}
 */
proto.Section.prototype.getResponseUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setResponseUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string trigger_id = 13;
 * @return {string}
 */
proto.Section.prototype.getTriggerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setTriggerId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string api_app_id = 14;
 * @return {string}
 */
proto.Section.prototype.getApiAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Section} returns this
 */
proto.Section.prototype.setApiAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


goog.object.extend(exports, proto);
