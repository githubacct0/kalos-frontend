// source: user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var services_rendered_pb = require('./services_rendered_pb.js');
goog.object.extend(proto, services_rendered_pb);
var property_pb = require('./property_pb.js');
goog.object.extend(proto, property_pb);
var timesheet_department_pb = require('./timesheet_department_pb.js');
goog.object.extend(proto, timesheet_department_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.CardData', null, global);
goog.exportSymbol('proto.CardDataList', null, global);
goog.exportSymbol('proto.Permission', null, global);
goog.exportSymbol('proto.PermissionGroup', null, global);
goog.exportSymbol('proto.PermissionGroupList', null, global);
goog.exportSymbol('proto.PermissionGroupUser', null, global);
goog.exportSymbol('proto.PermissionGroupUserList', null, global);
goog.exportSymbol('proto.User', null, global);
goog.exportSymbol('proto.UserList', null, global);
goog.exportSymbol('proto.UserPermissionGroupReq', null, global);
goog.exportSymbol('proto.Vehicle', null, global);
goog.exportSymbol('proto.VehicleList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.User.repeatedFields_, null);
};
goog.inherits(proto.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.User.displayName = 'proto.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UserList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.UserList.repeatedFields_, null);
};
goog.inherits(proto.UserList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UserList.displayName = 'proto.UserList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CardData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CardData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CardData.displayName = 'proto.CardData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CardDataList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CardDataList.repeatedFields_, null);
};
goog.inherits(proto.CardDataList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CardDataList.displayName = 'proto.CardDataList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Permission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Permission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Permission.displayName = 'proto.Permission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PermissionGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PermissionGroup.repeatedFields_, null);
};
goog.inherits(proto.PermissionGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PermissionGroup.displayName = 'proto.PermissionGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PermissionGroupList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PermissionGroupList.repeatedFields_, null);
};
goog.inherits(proto.PermissionGroupList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PermissionGroupList.displayName = 'proto.PermissionGroupList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UserPermissionGroupReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UserPermissionGroupReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UserPermissionGroupReq.displayName = 'proto.UserPermissionGroupReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PermissionGroupUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PermissionGroupUser.repeatedFields_, null);
};
goog.inherits(proto.PermissionGroupUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PermissionGroupUser.displayName = 'proto.PermissionGroupUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PermissionGroupUserList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PermissionGroupUserList.repeatedFields_, null);
};
goog.inherits(proto.PermissionGroupUserList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PermissionGroupUserList.displayName = 'proto.PermissionGroupUserList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Vehicle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Vehicle.repeatedFields_, null);
};
goog.inherits(proto.Vehicle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Vehicle.displayName = 'proto.Vehicle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VehicleList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VehicleList.repeatedFields_, null);
};
goog.inherits(proto.VehicleList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VehicleList.displayName = 'proto.VehicleList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.User.repeatedFields_ = [68,59,71,74];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.User.prototype.toObject = function(opt_includeInstance) {
  return proto.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    city: jspb.Message.getFieldWithDefault(msg, 5, ""),
    state: jspb.Message.getFieldWithDefault(msg, 6, ""),
    zip: jspb.Message.getFieldWithDefault(msg, 7, ""),
    address: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    altphone: jspb.Message.getFieldWithDefault(msg, 10, ""),
    cellphone: jspb.Message.getFieldWithDefault(msg, 11, ""),
    fax: jspb.Message.getFieldWithDefault(msg, 12, ""),
    email: jspb.Message.getFieldWithDefault(msg, 13, ""),
    altEmail: jspb.Message.getFieldWithDefault(msg, 14, ""),
    phoneEmail: jspb.Message.getFieldWithDefault(msg, 15, ""),
    preferredContact: jspb.Message.getFieldWithDefault(msg, 16, ""),
    receiveemail: jspb.Message.getFieldWithDefault(msg, 17, 0),
    dateCreated: jspb.Message.getFieldWithDefault(msg, 18, ""),
    lastLogin: jspb.Message.getFieldWithDefault(msg, 19, ""),
    annualHoursPto: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    bonusHoursPto: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    isActive: jspb.Message.getFieldWithDefault(msg, 23, 0),
    isSu: jspb.Message.getFieldWithDefault(msg, 24, 0),
    isAdmin: jspb.Message.getFieldWithDefault(msg, 25, 0),
    isOfficeStaff: jspb.Message.getFieldWithDefault(msg, 26, 0),
    officeGroup: jspb.Message.getFieldWithDefault(msg, 27, 0),
    isHvacTech: jspb.Message.getFieldWithDefault(msg, 28, 0),
    techAssist: jspb.Message.getFieldWithDefault(msg, 29, 0),
    calendarPref: jspb.Message.getFieldWithDefault(msg, 30, ""),
    multiProperty: jspb.Message.getFieldWithDefault(msg, 31, 0),
    isEmployee: jspb.Message.getFieldWithDefault(msg, 32, 0),
    employeeFunctionId: jspb.Message.getFieldWithDefault(msg, 33, 0),
    employeeDepartmentId: jspb.Message.getFieldWithDefault(msg, 34, 0),
    login: jspb.Message.getFieldWithDefault(msg, 35, ""),
    pwd: jspb.Message.getFieldWithDefault(msg, 36, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 37, ""),
    intNotes: jspb.Message.getFieldWithDefault(msg, 38, ""),
    notification: jspb.Message.getFieldWithDefault(msg, 39, ""),
    billingTerms: jspb.Message.getFieldWithDefault(msg, 40, ""),
    rebate: jspb.Message.getFieldWithDefault(msg, 41, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 42, 0),
    managedBy: jspb.Message.getFieldWithDefault(msg, 43, 0),
    currentStatus: jspb.Message.getFieldWithDefault(msg, 44, ""),
    currentStatusJobNumber: jspb.Message.getFieldWithDefault(msg, 45, ""),
    currentStatusTimestamp: jspb.Message.getFieldWithDefault(msg, 46, ""),
    empTitle: jspb.Message.getFieldWithDefault(msg, 47, ""),
    ext: jspb.Message.getFieldWithDefault(msg, 48, ""),
    image: jspb.Message.getFieldWithDefault(msg, 49, ""),
    serviceCalls: jspb.Message.getFieldWithDefault(msg, 50, 0),
    showBilling: jspb.Message.getFieldWithDefault(msg, 51, 0),
    paidServiceCallStatus: jspb.Message.getFieldWithDefault(msg, 52, 0),
    isColorMute: jspb.Message.getFieldWithDefault(msg, 53, 0),
    serviceCallRefresh: jspb.Message.getFieldWithDefault(msg, 54, 0),
    toolFund: jspb.Message.getFloatingPointFieldWithDefault(msg, 55, 0.0),
    spiffFund: jspb.Message.getFloatingPointFieldWithDefault(msg, 56, 0.0),
    geolocationLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 57, 0.0),
    geolocationLng: jspb.Message.getFloatingPointFieldWithDefault(msg, 58, 0.0),
    timesheetAdministration: jspb.Message.getBooleanFieldWithDefault(msg, 67, false),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    property_pb.Property.toObject, includeInstance),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 59)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 60, 0),
    orderBy: jspb.Message.getFieldWithDefault(msg, 61, ""),
    orderDir: jspb.Message.getFieldWithDefault(msg, 62, ""),
    servicesRendered: (f = msg.getServicesRendered()) && services_rendered_pb.ServicesRendered.toObject(includeInstance, f),
    property: (f = msg.getProperty()) && property_pb.Property.toObject(includeInstance, f),
    withProperties: jspb.Message.getBooleanFieldWithDefault(msg, 69, false),
    overrideLimit: jspb.Message.getBooleanFieldWithDefault(msg, 70, false),
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    proto.Permission.toObject, includeInstance),
    hireDate: jspb.Message.getFieldWithDefault(msg, 72, ""),
    recommendedBy: jspb.Message.getFieldWithDefault(msg, 73, ""),
    permissionGroupsList: jspb.Message.toObjectList(msg.getPermissionGroupsList(),
    proto.PermissionGroup.toObject, includeInstance),
    departmentString: jspb.Message.getFieldWithDefault(msg, 75, ""),
    department: (f = msg.getDepartment()) && timesheet_department_pb.TimesheetDepartment.toObject(includeInstance, f),
    userIdList: jspb.Message.getFieldWithDefault(msg, 77, ""),
    departmentList: jspb.Message.getFieldWithDefault(msg, 78, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.User}
 */
proto.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.User;
  return proto.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.User}
 */
proto.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setZip(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAltphone(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCellphone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFax(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAltEmail(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneEmail(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredContact(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceiveemail(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateCreated(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastLogin(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAnnualHoursPto(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBonusHoursPto(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsActive(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsSu(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsAdmin(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsOfficeStaff(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOfficeGroup(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsHvacTech(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTechAssist(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setCalendarPref(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMultiProperty(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsEmployee(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmployeeFunctionId(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmployeeDepartmentId(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntNotes(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotification(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setBillingTerms(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRebate(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscount(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManagedBy(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentStatus(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentStatusJobNumber(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentStatusTimestamp(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmpTitle(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setExt(value);
      break;
    case 49:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServiceCalls(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShowBilling(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaidServiceCallStatus(value);
      break;
    case 53:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsColorMute(value);
      break;
    case 54:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServiceCallRefresh(value);
      break;
    case 55:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setToolFund(value);
      break;
    case 56:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpiffFund(value);
      break;
    case 57:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGeolocationLat(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGeolocationLng(value);
      break;
    case 67:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTimesheetAdministration(value);
      break;
    case 68:
      var value = new property_pb.Property;
      reader.readMessage(value,property_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 59:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 62:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderDir(value);
      break;
    case 63:
      var value = new services_rendered_pb.ServicesRendered;
      reader.readMessage(value,services_rendered_pb.ServicesRendered.deserializeBinaryFromReader);
      msg.setServicesRendered(value);
      break;
    case 66:
      var value = new property_pb.Property;
      reader.readMessage(value,property_pb.Property.deserializeBinaryFromReader);
      msg.setProperty(value);
      break;
    case 69:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithProperties(value);
      break;
    case 70:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverrideLimit(value);
      break;
    case 71:
      var value = new proto.Permission;
      reader.readMessage(value,proto.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    case 72:
      var value = /** @type {string} */ (reader.readString());
      msg.setHireDate(value);
      break;
    case 73:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecommendedBy(value);
      break;
    case 74:
      var value = new proto.PermissionGroup;
      reader.readMessage(value,proto.PermissionGroup.deserializeBinaryFromReader);
      msg.addPermissionGroups(value);
      break;
    case 75:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentString(value);
      break;
    case 76:
      var value = new timesheet_department_pb.TimesheetDepartment;
      reader.readMessage(value,timesheet_department_pb.TimesheetDepartment.deserializeBinaryFromReader);
      msg.setDepartment(value);
      break;
    case 77:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserIdList(value);
      break;
    case 78:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getZip();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAltphone();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCellphone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFax();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAltEmail();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPhoneEmail();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getPreferredContact();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getReceiveemail();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getDateCreated();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLastLogin();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getAnnualHoursPto();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getBonusHoursPto();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getIsActive();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getIsSu();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getIsAdmin();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getIsOfficeStaff();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getOfficeGroup();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getIsHvacTech();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getTechAssist();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getCalendarPref();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getMultiProperty();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
  f = message.getIsEmployee();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getEmployeeFunctionId();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getEmployeeDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      34,
      f
    );
  }
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getPwd();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getIntNotes();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getNotification();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getBillingTerms();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getRebate();
  if (f !== 0) {
    writer.writeInt32(
      41,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(
      42,
      f
    );
  }
  f = message.getManagedBy();
  if (f !== 0) {
    writer.writeInt32(
      43,
      f
    );
  }
  f = message.getCurrentStatus();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getCurrentStatusJobNumber();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getCurrentStatusTimestamp();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getEmpTitle();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getExt();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      49,
      f
    );
  }
  f = message.getServiceCalls();
  if (f !== 0) {
    writer.writeInt32(
      50,
      f
    );
  }
  f = message.getShowBilling();
  if (f !== 0) {
    writer.writeInt32(
      51,
      f
    );
  }
  f = message.getPaidServiceCallStatus();
  if (f !== 0) {
    writer.writeInt32(
      52,
      f
    );
  }
  f = message.getIsColorMute();
  if (f !== 0) {
    writer.writeInt32(
      53,
      f
    );
  }
  f = message.getServiceCallRefresh();
  if (f !== 0) {
    writer.writeInt32(
      54,
      f
    );
  }
  f = message.getToolFund();
  if (f !== 0.0) {
    writer.writeDouble(
      55,
      f
    );
  }
  f = message.getSpiffFund();
  if (f !== 0.0) {
    writer.writeDouble(
      56,
      f
    );
  }
  f = message.getGeolocationLat();
  if (f !== 0.0) {
    writer.writeDouble(
      57,
      f
    );
  }
  f = message.getGeolocationLng();
  if (f !== 0.0) {
    writer.writeDouble(
      58,
      f
    );
  }
  f = message.getTimesheetAdministration();
  if (f) {
    writer.writeBool(
      67,
      f
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      68,
      f,
      property_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      59,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      60,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      61,
      f
    );
  }
  f = message.getOrderDir();
  if (f.length > 0) {
    writer.writeString(
      62,
      f
    );
  }
  f = message.getServicesRendered();
  if (f != null) {
    writer.writeMessage(
      63,
      f,
      services_rendered_pb.ServicesRendered.serializeBinaryToWriter
    );
  }
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      66,
      f,
      property_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getWithProperties();
  if (f) {
    writer.writeBool(
      69,
      f
    );
  }
  f = message.getOverrideLimit();
  if (f) {
    writer.writeBool(
      70,
      f
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      71,
      f,
      proto.Permission.serializeBinaryToWriter
    );
  }
  f = message.getHireDate();
  if (f.length > 0) {
    writer.writeString(
      72,
      f
    );
  }
  f = message.getRecommendedBy();
  if (f.length > 0) {
    writer.writeString(
      73,
      f
    );
  }
  f = message.getPermissionGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      74,
      f,
      proto.PermissionGroup.serializeBinaryToWriter
    );
  }
  f = message.getDepartmentString();
  if (f.length > 0) {
    writer.writeString(
      75,
      f
    );
  }
  f = message.getDepartment();
  if (f != null) {
    writer.writeMessage(
      76,
      f,
      timesheet_department_pb.TimesheetDepartment.serializeBinaryToWriter
    );
  }
  f = message.getUserIdList();
  if (f.length > 0) {
    writer.writeString(
      77,
      f
    );
  }
  f = message.getDepartmentList();
  if (f.length > 0) {
    writer.writeString(
      78,
      f
    );
  }
};


/**
 * optional int32 iD = 1;
 * @return {number}
 */
proto.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string firstname = 2;
 * @return {string}
 */
proto.User.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string lastname = 3;
 * @return {string}
 */
proto.User.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string businessname = 4;
 * @return {string}
 */
proto.User.prototype.getBusinessname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setBusinessname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string city = 5;
 * @return {string}
 */
proto.User.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string state = 6;
 * @return {string}
 */
proto.User.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string zip = 7;
 * @return {string}
 */
proto.User.prototype.getZip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setZip = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string address = 8;
 * @return {string}
 */
proto.User.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string phone = 9;
 * @return {string}
 */
proto.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string altphone = 10;
 * @return {string}
 */
proto.User.prototype.getAltphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setAltphone = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string cellphone = 11;
 * @return {string}
 */
proto.User.prototype.getCellphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setCellphone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string fax = 12;
 * @return {string}
 */
proto.User.prototype.getFax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setFax = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string email = 13;
 * @return {string}
 */
proto.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string alt_email = 14;
 * @return {string}
 */
proto.User.prototype.getAltEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setAltEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string phone_email = 15;
 * @return {string}
 */
proto.User.prototype.getPhoneEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setPhoneEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string preferred_contact = 16;
 * @return {string}
 */
proto.User.prototype.getPreferredContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setPreferredContact = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int32 receiveemail = 17;
 * @return {number}
 */
proto.User.prototype.getReceiveemail = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setReceiveemail = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string date_created = 18;
 * @return {string}
 */
proto.User.prototype.getDateCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setDateCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string last_login = 19;
 * @return {string}
 */
proto.User.prototype.getLastLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setLastLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional double annual_hours_pto = 21;
 * @return {number}
 */
proto.User.prototype.getAnnualHoursPto = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setAnnualHoursPto = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional double bonus_hours_pto = 22;
 * @return {number}
 */
proto.User.prototype.getBonusHoursPto = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setBonusHoursPto = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional int32 is_active = 23;
 * @return {number}
 */
proto.User.prototype.getIsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 is_SU = 24;
 * @return {number}
 */
proto.User.prototype.getIsSu = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsSu = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int32 is_admin = 25;
 * @return {number}
 */
proto.User.prototype.getIsAdmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsAdmin = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 is_office_staff = 26;
 * @return {number}
 */
proto.User.prototype.getIsOfficeStaff = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsOfficeStaff = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int32 office_group = 27;
 * @return {number}
 */
proto.User.prototype.getOfficeGroup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setOfficeGroup = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int32 is_hvac_tech = 28;
 * @return {number}
 */
proto.User.prototype.getIsHvacTech = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsHvacTech = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int32 tech_assist = 29;
 * @return {number}
 */
proto.User.prototype.getTechAssist = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setTechAssist = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional string calendar_pref = 30;
 * @return {string}
 */
proto.User.prototype.getCalendarPref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setCalendarPref = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional int32 multi_property = 31;
 * @return {number}
 */
proto.User.prototype.getMultiProperty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setMultiProperty = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional int32 is_employee = 32;
 * @return {number}
 */
proto.User.prototype.getIsEmployee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsEmployee = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int32 employee_function_iD = 33;
 * @return {number}
 */
proto.User.prototype.getEmployeeFunctionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setEmployeeFunctionId = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int32 employee_department_iD = 34;
 * @return {number}
 */
proto.User.prototype.getEmployeeDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setEmployeeDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional string login = 35;
 * @return {string}
 */
proto.User.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string pwd = 36;
 * @return {string}
 */
proto.User.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setPwd = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string notes = 37;
 * @return {string}
 */
proto.User.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string int_notes = 38;
 * @return {string}
 */
proto.User.prototype.getIntNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIntNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string notification = 39;
 * @return {string}
 */
proto.User.prototype.getNotification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setNotification = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string billing_terms = 40;
 * @return {string}
 */
proto.User.prototype.getBillingTerms = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setBillingTerms = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional int32 rebate = 41;
 * @return {number}
 */
proto.User.prototype.getRebate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setRebate = function(value) {
  return jspb.Message.setProto3IntField(this, 41, value);
};


/**
 * optional int32 discount = 42;
 * @return {number}
 */
proto.User.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3IntField(this, 42, value);
};


/**
 * optional int32 managed_by = 43;
 * @return {number}
 */
proto.User.prototype.getManagedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setManagedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 43, value);
};


/**
 * optional string current_status = 44;
 * @return {string}
 */
proto.User.prototype.getCurrentStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setCurrentStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string current_status_job_number = 45;
 * @return {string}
 */
proto.User.prototype.getCurrentStatusJobNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setCurrentStatusJobNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional string current_status_timestamp = 46;
 * @return {string}
 */
proto.User.prototype.getCurrentStatusTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setCurrentStatusTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string emp_title = 47;
 * @return {string}
 */
proto.User.prototype.getEmpTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setEmpTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional string ext = 48;
 * @return {string}
 */
proto.User.prototype.getExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setExt = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional string image = 49;
 * @return {string}
 */
proto.User.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 49, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 49, value);
};


/**
 * optional int32 service_calls = 50;
 * @return {number}
 */
proto.User.prototype.getServiceCalls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setServiceCalls = function(value) {
  return jspb.Message.setProto3IntField(this, 50, value);
};


/**
 * optional int32 show_billing = 51;
 * @return {number}
 */
proto.User.prototype.getShowBilling = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 51, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setShowBilling = function(value) {
  return jspb.Message.setProto3IntField(this, 51, value);
};


/**
 * optional int32 paid_service_call_status = 52;
 * @return {number}
 */
proto.User.prototype.getPaidServiceCallStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setPaidServiceCallStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 52, value);
};


/**
 * optional int32 is_color_mute = 53;
 * @return {number}
 */
proto.User.prototype.getIsColorMute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 53, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setIsColorMute = function(value) {
  return jspb.Message.setProto3IntField(this, 53, value);
};


/**
 * optional int32 service_call_refresh = 54;
 * @return {number}
 */
proto.User.prototype.getServiceCallRefresh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 54, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setServiceCallRefresh = function(value) {
  return jspb.Message.setProto3IntField(this, 54, value);
};


/**
 * optional double tool_fund = 55;
 * @return {number}
 */
proto.User.prototype.getToolFund = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 55, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setToolFund = function(value) {
  return jspb.Message.setProto3FloatField(this, 55, value);
};


/**
 * optional double spiff_fund = 56;
 * @return {number}
 */
proto.User.prototype.getSpiffFund = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 56, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setSpiffFund = function(value) {
  return jspb.Message.setProto3FloatField(this, 56, value);
};


/**
 * optional double geolocation_lat = 57;
 * @return {number}
 */
proto.User.prototype.getGeolocationLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 57, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setGeolocationLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 57, value);
};


/**
 * optional double geolocation_lng = 58;
 * @return {number}
 */
proto.User.prototype.getGeolocationLng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 58, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setGeolocationLng = function(value) {
  return jspb.Message.setProto3FloatField(this, 58, value);
};


/**
 * optional bool timesheet_administration = 67;
 * @return {boolean}
 */
proto.User.prototype.getTimesheetAdministration = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 67, false));
};


/**
 * @param {boolean} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setTimesheetAdministration = function(value) {
  return jspb.Message.setProto3BooleanField(this, 67, value);
};


/**
 * repeated Property properties = 68;
 * @return {!Array<!proto.Property>}
 */
proto.User.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, property_pb.Property, 68));
};


/**
 * @param {!Array<!proto.Property>} value
 * @return {!proto.User} returns this
*/
proto.User.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 68, value);
};


/**
 * @param {!proto.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Property}
 */
proto.User.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 68, opt_value, proto.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * repeated string field_mask = 59;
 * @return {!Array<string>}
 */
proto.User.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 59));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 59, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.User} returns this
 */
proto.User.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 59, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 page_number = 60;
 * @return {number}
 */
proto.User.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 60, value);
};


/**
 * optional string order_by = 61;
 * @return {string}
 */
proto.User.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 61, value);
};


/**
 * optional string order_dir = 62;
 * @return {string}
 */
proto.User.prototype.getOrderDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setOrderDir = function(value) {
  return jspb.Message.setProto3StringField(this, 62, value);
};


/**
 * optional ServicesRendered services_rendered = 63;
 * @return {?proto.ServicesRendered}
 */
proto.User.prototype.getServicesRendered = function() {
  return /** @type{?proto.ServicesRendered} */ (
    jspb.Message.getWrapperField(this, services_rendered_pb.ServicesRendered, 63));
};


/**
 * @param {?proto.ServicesRendered|undefined} value
 * @return {!proto.User} returns this
*/
proto.User.prototype.setServicesRendered = function(value) {
  return jspb.Message.setWrapperField(this, 63, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearServicesRendered = function() {
  return this.setServicesRendered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.User.prototype.hasServicesRendered = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional Property property = 66;
 * @return {?proto.Property}
 */
proto.User.prototype.getProperty = function() {
  return /** @type{?proto.Property} */ (
    jspb.Message.getWrapperField(this, property_pb.Property, 66));
};


/**
 * @param {?proto.Property|undefined} value
 * @return {!proto.User} returns this
*/
proto.User.prototype.setProperty = function(value) {
  return jspb.Message.setWrapperField(this, 66, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearProperty = function() {
  return this.setProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.User.prototype.hasProperty = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional bool with_properties = 69;
 * @return {boolean}
 */
proto.User.prototype.getWithProperties = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 69, false));
};


/**
 * @param {boolean} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setWithProperties = function(value) {
  return jspb.Message.setProto3BooleanField(this, 69, value);
};


/**
 * optional bool override_limit = 70;
 * @return {boolean}
 */
proto.User.prototype.getOverrideLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 70, false));
};


/**
 * @param {boolean} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setOverrideLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 70, value);
};


/**
 * repeated Permission permissions = 71;
 * @return {!Array<!proto.Permission>}
 */
proto.User.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Permission, 71));
};


/**
 * @param {!Array<!proto.Permission>} value
 * @return {!proto.User} returns this
*/
proto.User.prototype.setPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 71, value);
};


/**
 * @param {!proto.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Permission}
 */
proto.User.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 71, opt_value, proto.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};


/**
 * optional string hire_date = 72;
 * @return {string}
 */
proto.User.prototype.getHireDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 72, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setHireDate = function(value) {
  return jspb.Message.setProto3StringField(this, 72, value);
};


/**
 * optional string recommended_by = 73;
 * @return {string}
 */
proto.User.prototype.getRecommendedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 73, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setRecommendedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 73, value);
};


/**
 * repeated PermissionGroup permission_groups = 74;
 * @return {!Array<!proto.PermissionGroup>}
 */
proto.User.prototype.getPermissionGroupsList = function() {
  return /** @type{!Array<!proto.PermissionGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PermissionGroup, 74));
};


/**
 * @param {!Array<!proto.PermissionGroup>} value
 * @return {!proto.User} returns this
*/
proto.User.prototype.setPermissionGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 74, value);
};


/**
 * @param {!proto.PermissionGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PermissionGroup}
 */
proto.User.prototype.addPermissionGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 74, opt_value, proto.PermissionGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearPermissionGroupsList = function() {
  return this.setPermissionGroupsList([]);
};


/**
 * optional string department_string = 75;
 * @return {string}
 */
proto.User.prototype.getDepartmentString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 75, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setDepartmentString = function(value) {
  return jspb.Message.setProto3StringField(this, 75, value);
};


/**
 * optional TimesheetDepartment department = 76;
 * @return {?proto.TimesheetDepartment}
 */
proto.User.prototype.getDepartment = function() {
  return /** @type{?proto.TimesheetDepartment} */ (
    jspb.Message.getWrapperField(this, timesheet_department_pb.TimesheetDepartment, 76));
};


/**
 * @param {?proto.TimesheetDepartment|undefined} value
 * @return {!proto.User} returns this
*/
proto.User.prototype.setDepartment = function(value) {
  return jspb.Message.setWrapperField(this, 76, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.User} returns this
 */
proto.User.prototype.clearDepartment = function() {
  return this.setDepartment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.User.prototype.hasDepartment = function() {
  return jspb.Message.getField(this, 76) != null;
};


/**
 * optional string user_id_list = 77;
 * @return {string}
 */
proto.User.prototype.getUserIdList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 77, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setUserIdList = function(value) {
  return jspb.Message.setProto3StringField(this, 77, value);
};


/**
 * optional string department_list = 78;
 * @return {string}
 */
proto.User.prototype.getDepartmentList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 78, ""));
};


/**
 * @param {string} value
 * @return {!proto.User} returns this
 */
proto.User.prototype.setDepartmentList = function(value) {
  return jspb.Message.setProto3StringField(this, 78, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.UserList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UserList.prototype.toObject = function(opt_includeInstance) {
  return proto.UserList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UserList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UserList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.User.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UserList}
 */
proto.UserList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UserList;
  return proto.UserList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UserList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UserList}
 */
proto.UserList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.User;
      reader.readMessage(value,proto.User.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UserList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UserList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UserList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UserList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.User.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated User results = 1;
 * @return {!Array<!proto.User>}
 */
proto.UserList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.User, 1));
};


/**
 * @param {!Array<!proto.User>} value
 * @return {!proto.UserList} returns this
*/
proto.UserList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.User}
 */
proto.UserList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UserList} returns this
 */
proto.UserList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.UserList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.UserList} returns this
 */
proto.UserList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CardData.prototype.toObject = function(opt_includeInstance) {
  return proto.CardData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CardData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CardData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    departmentId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    account: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    withDepartment: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    departmentData: (f = msg.getDepartmentData()) && timesheet_department_pb.TimesheetDepartment.toObject(includeInstance, f),
    withUser: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    user: (f = msg.getUser()) && proto.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CardData}
 */
proto.CardData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CardData;
  return proto.CardData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CardData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CardData}
 */
proto.CardData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithDepartment(value);
      break;
    case 9:
      var value = new timesheet_department_pb.TimesheetDepartment;
      reader.readMessage(value,timesheet_department_pb.TimesheetDepartment.deserializeBinaryFromReader);
      msg.setDepartmentData(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithUser(value);
      break;
    case 11:
      var value = new proto.User;
      reader.readMessage(value,proto.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CardData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CardData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CardData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CardData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCardNumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountNumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getWithDepartment();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDepartmentData();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      timesheet_department_pb.TimesheetDepartment.serializeBinaryToWriter
    );
  }
  f = message.getWithUser();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.CardData.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 department_id = 2;
 * @return {number}
 */
proto.CardData.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 card_number = 3;
 * @return {number}
 */
proto.CardData.prototype.getCardNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string account = 4;
 * @return {string}
 */
proto.CardData.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 account_number = 5;
 * @return {number}
 */
proto.CardData.prototype.getAccountNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setAccountNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.CardData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.CardData.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool with_department = 8;
 * @return {boolean}
 */
proto.CardData.prototype.getWithDepartment = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setWithDepartment = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional TimesheetDepartment department_data = 9;
 * @return {?proto.TimesheetDepartment}
 */
proto.CardData.prototype.getDepartmentData = function() {
  return /** @type{?proto.TimesheetDepartment} */ (
    jspb.Message.getWrapperField(this, timesheet_department_pb.TimesheetDepartment, 9));
};


/**
 * @param {?proto.TimesheetDepartment|undefined} value
 * @return {!proto.CardData} returns this
*/
proto.CardData.prototype.setDepartmentData = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.clearDepartmentData = function() {
  return this.setDepartmentData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CardData.prototype.hasDepartmentData = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool with_user = 10;
 * @return {boolean}
 */
proto.CardData.prototype.getWithUser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.setWithUser = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional User user = 11;
 * @return {?proto.User}
 */
proto.CardData.prototype.getUser = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, proto.User, 11));
};


/**
 * @param {?proto.User|undefined} value
 * @return {!proto.CardData} returns this
*/
proto.CardData.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CardData} returns this
 */
proto.CardData.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CardData.prototype.hasUser = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CardDataList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CardDataList.prototype.toObject = function(opt_includeInstance) {
  return proto.CardDataList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CardDataList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CardDataList.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.CardData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CardDataList}
 */
proto.CardDataList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CardDataList;
  return proto.CardDataList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CardDataList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CardDataList}
 */
proto.CardDataList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CardData;
      reader.readMessage(value,proto.CardData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CardDataList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CardDataList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CardDataList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CardDataList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CardData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CardData data = 1;
 * @return {!Array<!proto.CardData>}
 */
proto.CardDataList.prototype.getDataList = function() {
  return /** @type{!Array<!proto.CardData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CardData, 1));
};


/**
 * @param {!Array<!proto.CardData>} value
 * @return {!proto.CardDataList} returns this
*/
proto.CardDataList.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CardData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CardData}
 */
proto.CardDataList.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CardData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CardDataList} returns this
 */
proto.CardDataList.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Permission.prototype.toObject = function(opt_includeInstance) {
  return proto.Permission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Permission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Permission.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    action: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resource: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Permission}
 */
proto.Permission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Permission;
  return proto.Permission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Permission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Permission}
 */
proto.Permission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Permission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Permission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Permission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Permission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResource();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Permission.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Permission.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string action = 3;
 * @return {string}
 */
proto.Permission.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string resource = 4;
 * @return {string}
 */
proto.Permission.prototype.getResource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.setResource = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PermissionGroup.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PermissionGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.PermissionGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PermissionGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filterData: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PermissionGroup}
 */
proto.PermissionGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PermissionGroup;
  return proto.PermissionGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PermissionGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PermissionGroup}
 */
proto.PermissionGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterData(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PermissionGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PermissionGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PermissionGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilterData();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.PermissionGroup.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.PermissionGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.PermissionGroup.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.PermissionGroup.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string filter_data = 5;
 * @return {string}
 */
proto.PermissionGroup.prototype.getFilterData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setFilterData = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.PermissionGroup.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated string field_mask = 7;
 * @return {!Array<string>}
 */
proto.PermissionGroup.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PermissionGroup} returns this
 */
proto.PermissionGroup.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PermissionGroupList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PermissionGroupList.prototype.toObject = function(opt_includeInstance) {
  return proto.PermissionGroupList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PermissionGroupList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroupList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.PermissionGroup.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PermissionGroupList}
 */
proto.PermissionGroupList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PermissionGroupList;
  return proto.PermissionGroupList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PermissionGroupList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PermissionGroupList}
 */
proto.PermissionGroupList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PermissionGroup;
      reader.readMessage(value,proto.PermissionGroup.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PermissionGroupList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PermissionGroupList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PermissionGroupList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroupList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PermissionGroup.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated PermissionGroup results = 1;
 * @return {!Array<!proto.PermissionGroup>}
 */
proto.PermissionGroupList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.PermissionGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PermissionGroup, 1));
};


/**
 * @param {!Array<!proto.PermissionGroup>} value
 * @return {!proto.PermissionGroupList} returns this
*/
proto.PermissionGroupList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PermissionGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PermissionGroup}
 */
proto.PermissionGroupList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PermissionGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PermissionGroupList} returns this
 */
proto.PermissionGroupList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.PermissionGroupList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PermissionGroupList} returns this
 */
proto.PermissionGroupList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UserPermissionGroupReq.prototype.toObject = function(opt_includeInstance) {
  return proto.UserPermissionGroupReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UserPermissionGroupReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UserPermissionGroupReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    permissionGroupId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    permissionGroupName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UserPermissionGroupReq}
 */
proto.UserPermissionGroupReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UserPermissionGroupReq;
  return proto.UserPermissionGroupReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UserPermissionGroupReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UserPermissionGroupReq}
 */
proto.UserPermissionGroupReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPermissionGroupId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermissionGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UserPermissionGroupReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UserPermissionGroupReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UserPermissionGroupReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UserPermissionGroupReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPermissionGroupId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPermissionGroupName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.UserPermissionGroupReq.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.UserPermissionGroupReq} returns this
 */
proto.UserPermissionGroupReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 permission_group_id = 2;
 * @return {number}
 */
proto.UserPermissionGroupReq.prototype.getPermissionGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.UserPermissionGroupReq} returns this
 */
proto.UserPermissionGroupReq.prototype.setPermissionGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string permission_group_name = 3;
 * @return {string}
 */
proto.UserPermissionGroupReq.prototype.getPermissionGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.UserPermissionGroupReq} returns this
 */
proto.UserPermissionGroupReq.prototype.setPermissionGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PermissionGroupUser.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PermissionGroupUser.prototype.toObject = function(opt_includeInstance) {
  return proto.PermissionGroupUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PermissionGroupUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroupUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissionGroupUserId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    permissionGroupId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    permissionGroupName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    permissionGroupDescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    permissionGroupType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    filterData: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    userFirstname: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userLastname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    notEqualsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PermissionGroupUser}
 */
proto.PermissionGroupUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PermissionGroupUser;
  return proto.PermissionGroupUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PermissionGroupUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PermissionGroupUser}
 */
proto.PermissionGroupUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPermissionGroupUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPermissionGroupId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermissionGroupName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermissionGroupDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermissionGroupType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterData(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserFirstname(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserLastname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotEquals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PermissionGroupUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PermissionGroupUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PermissionGroupUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroupUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissionGroupUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPermissionGroupId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPermissionGroupName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPermissionGroupDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPermissionGroupType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFilterData();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getUserFirstname();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserLastname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getNotEqualsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * optional int32 permission_group_user_id = 1;
 * @return {number}
 */
proto.PermissionGroupUser.prototype.getPermissionGroupUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setPermissionGroupUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 permission_group_id = 2;
 * @return {number}
 */
proto.PermissionGroupUser.prototype.getPermissionGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setPermissionGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string permission_group_name = 3;
 * @return {string}
 */
proto.PermissionGroupUser.prototype.getPermissionGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setPermissionGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string permission_group_description = 4;
 * @return {string}
 */
proto.PermissionGroupUser.prototype.getPermissionGroupDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setPermissionGroupDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string permission_group_type = 5;
 * @return {string}
 */
proto.PermissionGroupUser.prototype.getPermissionGroupType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setPermissionGroupType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string filter_data = 6;
 * @return {string}
 */
proto.PermissionGroupUser.prototype.getFilterData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setFilterData = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 user_id = 7;
 * @return {number}
 */
proto.PermissionGroupUser.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string user_firstname = 8;
 * @return {string}
 */
proto.PermissionGroupUser.prototype.getUserFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setUserFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string user_lastname = 9;
 * @return {string}
 */
proto.PermissionGroupUser.prototype.getUserLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setUserLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string field_mask = 10;
 * @return {!Array<string>}
 */
proto.PermissionGroupUser.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * repeated string not_equals = 11;
 * @return {!Array<string>}
 */
proto.PermissionGroupUser.prototype.getNotEqualsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.setNotEqualsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.addNotEquals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PermissionGroupUser} returns this
 */
proto.PermissionGroupUser.prototype.clearNotEqualsList = function() {
  return this.setNotEqualsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PermissionGroupUserList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PermissionGroupUserList.prototype.toObject = function(opt_includeInstance) {
  return proto.PermissionGroupUserList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PermissionGroupUserList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroupUserList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.PermissionGroupUser.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PermissionGroupUserList}
 */
proto.PermissionGroupUserList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PermissionGroupUserList;
  return proto.PermissionGroupUserList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PermissionGroupUserList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PermissionGroupUserList}
 */
proto.PermissionGroupUserList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PermissionGroupUser;
      reader.readMessage(value,proto.PermissionGroupUser.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PermissionGroupUserList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PermissionGroupUserList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PermissionGroupUserList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PermissionGroupUserList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PermissionGroupUser.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated PermissionGroupUser results = 1;
 * @return {!Array<!proto.PermissionGroupUser>}
 */
proto.PermissionGroupUserList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.PermissionGroupUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PermissionGroupUser, 1));
};


/**
 * @param {!Array<!proto.PermissionGroupUser>} value
 * @return {!proto.PermissionGroupUserList} returns this
*/
proto.PermissionGroupUserList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PermissionGroupUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PermissionGroupUser}
 */
proto.PermissionGroupUserList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PermissionGroupUser, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PermissionGroupUserList} returns this
 */
proto.PermissionGroupUserList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.PermissionGroupUserList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PermissionGroupUserList} returns this
 */
proto.PermissionGroupUserList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Vehicle.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Vehicle.prototype.toObject = function(opt_includeInstance) {
  return proto.Vehicle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Vehicle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Vehicle.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ownerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    departmentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    make: jspb.Message.getFieldWithDefault(msg, 4, ""),
    model: jspb.Message.getFieldWithDefault(msg, 5, ""),
    year: jspb.Message.getFieldWithDefault(msg, 6, ""),
    engine: jspb.Message.getFieldWithDefault(msg, 7, ""),
    identificationNumber: jspb.Message.getFieldWithDefault(msg, 8, ""),
    photoName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    gpsTrackingId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isActive: jspb.Message.getFieldWithDefault(msg, 11, 0),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Vehicle}
 */
proto.Vehicle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Vehicle;
  return proto.Vehicle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Vehicle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Vehicle}
 */
proto.Vehicle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOwnerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMake(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEngine(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentificationNumber(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpsTrackingId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsActive(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Vehicle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Vehicle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Vehicle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Vehicle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOwnerId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMake();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEngine();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhotoName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getGpsTrackingId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsActive();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Vehicle.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 owner_id = 2;
 * @return {number}
 */
proto.Vehicle.prototype.getOwnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 department_id = 3;
 * @return {number}
 */
proto.Vehicle.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string make = 4;
 * @return {string}
 */
proto.Vehicle.prototype.getMake = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setMake = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string model = 5;
 * @return {string}
 */
proto.Vehicle.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string year = 6;
 * @return {string}
 */
proto.Vehicle.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setYear = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string engine = 7;
 * @return {string}
 */
proto.Vehicle.prototype.getEngine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setEngine = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string identification_number = 8;
 * @return {string}
 */
proto.Vehicle.prototype.getIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string photo_name = 9;
 * @return {string}
 */
proto.Vehicle.prototype.getPhotoName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setPhotoName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string gps_tracking_id = 10;
 * @return {string}
 */
proto.Vehicle.prototype.getGpsTrackingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setGpsTrackingId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 is_active = 11;
 * @return {number}
 */
proto.Vehicle.prototype.getIsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * repeated string field_mask = 12;
 * @return {!Array<string>}
 */
proto.Vehicle.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 page_number = 13;
 * @return {number}
 */
proto.Vehicle.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.Vehicle} returns this
 */
proto.Vehicle.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VehicleList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VehicleList.prototype.toObject = function(opt_includeInstance) {
  return proto.VehicleList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VehicleList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VehicleList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Vehicle.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VehicleList}
 */
proto.VehicleList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VehicleList;
  return proto.VehicleList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VehicleList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VehicleList}
 */
proto.VehicleList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Vehicle;
      reader.readMessage(value,proto.Vehicle.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VehicleList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VehicleList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VehicleList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VehicleList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Vehicle.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated Vehicle results = 1;
 * @return {!Array<!proto.Vehicle>}
 */
proto.VehicleList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Vehicle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Vehicle, 1));
};


/**
 * @param {!Array<!proto.Vehicle>} value
 * @return {!proto.VehicleList} returns this
*/
proto.VehicleList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Vehicle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Vehicle}
 */
proto.VehicleList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Vehicle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VehicleList} returns this
 */
proto.VehicleList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.VehicleList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.VehicleList} returns this
 */
proto.VehicleList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto);
