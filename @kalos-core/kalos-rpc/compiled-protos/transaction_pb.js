// source: transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var transaction_document_pb = require('./transaction_document_pb.js');
goog.object.extend(proto, transaction_document_pb);
var transaction_activity_pb = require('./transaction_activity_pb.js');
goog.object.extend(proto, transaction_activity_pb);
var transaction_account_pb = require('./transaction_account_pb.js');
goog.object.extend(proto, transaction_account_pb);
goog.exportSymbol('proto.RecordPageReq', null, global);
goog.exportSymbol('proto.Transaction', null, global);
goog.exportSymbol('proto.TransactionList', null, global);
goog.exportSymbol('proto.TxnDepartment', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Transaction.repeatedFields_, null);
};
goog.inherits(proto.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Transaction.displayName = 'proto.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TransactionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TransactionList.repeatedFields_, null);
};
goog.inherits(proto.TransactionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TransactionList.displayName = 'proto.TransactionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordPageReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordPageReq.repeatedFields_, null);
};
goog.inherits(proto.RecordPageReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RecordPageReq.displayName = 'proto.RecordPageReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TxnDepartment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TxnDepartment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TxnDepartment.displayName = 'proto.TxnDepartment';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Transaction.repeatedFields_ = [16,17,19,31];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    jobId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    departmentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ownerId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    vendor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    costCenterId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 9, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isActive: jspb.Message.getFieldWithDefault(msg, 11, 0),
    statusId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    status: jspb.Message.getFieldWithDefault(msg, 13, ""),
    ownerName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    cardUsed: jspb.Message.getFieldWithDefault(msg, 15, ""),
    documentsList: jspb.Message.toObjectList(msg.getDocumentsList(),
    transaction_document_pb.TransactionDocument.toObject, includeInstance),
    activityLogList: jspb.Message.toObjectList(msg.getActivityLogList(),
    transaction_activity_pb.TransactionActivity.toObject, includeInstance),
    pageNumber: jspb.Message.getFieldWithDefault(msg, 18, 0),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    department: (f = msg.getDepartment()) && proto.TxnDepartment.toObject(includeInstance, f),
    costCenter: (f = msg.getCostCenter()) && transaction_account_pb.TransactionAccount.toObject(includeInstance, f),
    orderBy: jspb.Message.getFieldWithDefault(msg, 22, ""),
    orderDir: jspb.Message.getFieldWithDefault(msg, 23, ""),
    isAudited: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    isRecorded: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    searchPhrase: jspb.Message.getFieldWithDefault(msg, 26, ""),
    artificalId: jspb.Message.getFieldWithDefault(msg, 27, ""),
    departmentString: jspb.Message.getFieldWithDefault(msg, 28, ""),
    costCenterString: jspb.Message.getFieldWithDefault(msg, 29, ""),
    activityLogString: jspb.Message.getFieldWithDefault(msg, 30, ""),
    notEqualsList: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
    departmentIdList: jspb.Message.getFieldWithDefault(msg, 32, ""),
    vendorCategory: jspb.Message.getFieldWithDefault(msg, 33, ""),
    withoutLimit: jspb.Message.getBooleanFieldWithDefault(msg, 34, false),
    assignedEmployeeId: jspb.Message.getFieldWithDefault(msg, 35, 0),
    assignedEmployeeName: jspb.Message.getFieldWithDefault(msg, 36, ""),
    orderNumber: jspb.Message.getFieldWithDefault(msg, 37, ""),
    isBillingRecorded: jspb.Message.getBooleanFieldWithDefault(msg, 38, false),
    invoiceNumber: jspb.Message.getFieldWithDefault(msg, 39, ""),
    stateTaxApplied: jspb.Message.getBooleanFieldWithDefault(msg, 40, false),
    vendorId: jspb.Message.getFieldWithDefault(msg, 41, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Transaction}
 */
proto.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Transaction;
  return proto.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Transaction}
 */
proto.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOwnerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCostCenterId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsActive(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatusId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUsed(value);
      break;
    case 16:
      var value = new transaction_document_pb.TransactionDocument;
      reader.readMessage(value,transaction_document_pb.TransactionDocument.deserializeBinaryFromReader);
      msg.addDocuments(value);
      break;
    case 17:
      var value = new transaction_activity_pb.TransactionActivity;
      reader.readMessage(value,transaction_activity_pb.TransactionActivity.deserializeBinaryFromReader);
      msg.addActivityLog(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 20:
      var value = new proto.TxnDepartment;
      reader.readMessage(value,proto.TxnDepartment.deserializeBinaryFromReader);
      msg.setDepartment(value);
      break;
    case 21:
      var value = new transaction_account_pb.TransactionAccount;
      reader.readMessage(value,transaction_account_pb.TransactionAccount.deserializeBinaryFromReader);
      msg.setCostCenter(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderDir(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAudited(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRecorded(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchPhrase(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtificalId(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentString(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostCenterString(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivityLogString(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotEquals(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentIdList(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorCategory(value);
      break;
    case 34:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithoutLimit(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssignedEmployeeId(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignedEmployeeName(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderNumber(value);
      break;
    case 38:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBillingRecorded(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoiceNumber(value);
      break;
    case 40:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStateTaxApplied(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVendorId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getJobId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOwnerId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getVendor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCostCenterId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsActive();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getStatusId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getOwnerName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCardUsed();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      transaction_document_pb.TransactionDocument.serializeBinaryToWriter
    );
  }
  f = message.getActivityLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      transaction_activity_pb.TransactionActivity.serializeBinaryToWriter
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
  f = message.getDepartment();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.TxnDepartment.serializeBinaryToWriter
    );
  }
  f = message.getCostCenter();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      transaction_account_pb.TransactionAccount.serializeBinaryToWriter
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getOrderDir();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getIsAudited();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getIsRecorded();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getSearchPhrase();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getArtificalId();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getDepartmentString();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getCostCenterString();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getActivityLogString();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getNotEqualsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      31,
      f
    );
  }
  f = message.getDepartmentIdList();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getVendorCategory();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getWithoutLimit();
  if (f) {
    writer.writeBool(
      34,
      f
    );
  }
  f = message.getAssignedEmployeeId();
  if (f !== 0) {
    writer.writeInt32(
      35,
      f
    );
  }
  f = message.getAssignedEmployeeName();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getOrderNumber();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getIsBillingRecorded();
  if (f) {
    writer.writeBool(
      38,
      f
    );
  }
  f = message.getInvoiceNumber();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getStateTaxApplied();
  if (f) {
    writer.writeBool(
      40,
      f
    );
  }
  f = message.getVendorId();
  if (f !== 0) {
    writer.writeInt32(
      41,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Transaction.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 job_id = 2;
 * @return {number}
 */
proto.Transaction.prototype.getJobId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setJobId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 department_id = 3;
 * @return {number}
 */
proto.Transaction.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 owner_id = 4;
 * @return {number}
 */
proto.Transaction.prototype.getOwnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string vendor = 5;
 * @return {string}
 */
proto.Transaction.prototype.getVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setVendor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 cost_center_id = 6;
 * @return {number}
 */
proto.Transaction.prototype.getCostCenterId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setCostCenterId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.Transaction.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double amount = 8;
 * @return {number}
 */
proto.Transaction.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string timestamp = 9;
 * @return {string}
 */
proto.Transaction.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string notes = 10;
 * @return {string}
 */
proto.Transaction.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 is_active = 11;
 * @return {number}
 */
proto.Transaction.prototype.getIsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 status_id = 12;
 * @return {number}
 */
proto.Transaction.prototype.getStatusId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setStatusId = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string status = 13;
 * @return {string}
 */
proto.Transaction.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string owner_name = 14;
 * @return {string}
 */
proto.Transaction.prototype.getOwnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setOwnerName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string card_used = 15;
 * @return {string}
 */
proto.Transaction.prototype.getCardUsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setCardUsed = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * repeated TransactionDocument documents = 16;
 * @return {!Array<!proto.TransactionDocument>}
 */
proto.Transaction.prototype.getDocumentsList = function() {
  return /** @type{!Array<!proto.TransactionDocument>} */ (
    jspb.Message.getRepeatedWrapperField(this, transaction_document_pb.TransactionDocument, 16));
};


/**
 * @param {!Array<!proto.TransactionDocument>} value
 * @return {!proto.Transaction} returns this
*/
proto.Transaction.prototype.setDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.TransactionDocument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TransactionDocument}
 */
proto.Transaction.prototype.addDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.TransactionDocument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * repeated TransactionActivity activity_log = 17;
 * @return {!Array<!proto.TransactionActivity>}
 */
proto.Transaction.prototype.getActivityLogList = function() {
  return /** @type{!Array<!proto.TransactionActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, transaction_activity_pb.TransactionActivity, 17));
};


/**
 * @param {!Array<!proto.TransactionActivity>} value
 * @return {!proto.Transaction} returns this
*/
proto.Transaction.prototype.setActivityLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.TransactionActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TransactionActivity}
 */
proto.Transaction.prototype.addActivityLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.TransactionActivity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.clearActivityLogList = function() {
  return this.setActivityLogList([]);
};


/**
 * optional int32 page_number = 18;
 * @return {number}
 */
proto.Transaction.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * repeated string field_mask = 19;
 * @return {!Array<string>}
 */
proto.Transaction.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional TxnDepartment department = 20;
 * @return {?proto.TxnDepartment}
 */
proto.Transaction.prototype.getDepartment = function() {
  return /** @type{?proto.TxnDepartment} */ (
    jspb.Message.getWrapperField(this, proto.TxnDepartment, 20));
};


/**
 * @param {?proto.TxnDepartment|undefined} value
 * @return {!proto.Transaction} returns this
*/
proto.Transaction.prototype.setDepartment = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.clearDepartment = function() {
  return this.setDepartment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Transaction.prototype.hasDepartment = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional TransactionAccount cost_center = 21;
 * @return {?proto.TransactionAccount}
 */
proto.Transaction.prototype.getCostCenter = function() {
  return /** @type{?proto.TransactionAccount} */ (
    jspb.Message.getWrapperField(this, transaction_account_pb.TransactionAccount, 21));
};


/**
 * @param {?proto.TransactionAccount|undefined} value
 * @return {!proto.Transaction} returns this
*/
proto.Transaction.prototype.setCostCenter = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.clearCostCenter = function() {
  return this.setCostCenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Transaction.prototype.hasCostCenter = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string order_by = 22;
 * @return {string}
 */
proto.Transaction.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string order_dir = 23;
 * @return {string}
 */
proto.Transaction.prototype.getOrderDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setOrderDir = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool is_audited = 24;
 * @return {boolean}
 */
proto.Transaction.prototype.getIsAudited = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setIsAudited = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool is_recorded = 25;
 * @return {boolean}
 */
proto.Transaction.prototype.getIsRecorded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setIsRecorded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional string search_phrase = 26;
 * @return {string}
 */
proto.Transaction.prototype.getSearchPhrase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setSearchPhrase = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string artifical_id = 27;
 * @return {string}
 */
proto.Transaction.prototype.getArtificalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setArtificalId = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string department_string = 28;
 * @return {string}
 */
proto.Transaction.prototype.getDepartmentString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setDepartmentString = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string cost_center_string = 29;
 * @return {string}
 */
proto.Transaction.prototype.getCostCenterString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setCostCenterString = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string activity_log_string = 30;
 * @return {string}
 */
proto.Transaction.prototype.getActivityLogString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setActivityLogString = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * repeated string not_equals = 31;
 * @return {!Array<string>}
 */
proto.Transaction.prototype.getNotEqualsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setNotEqualsList = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.addNotEquals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.clearNotEqualsList = function() {
  return this.setNotEqualsList([]);
};


/**
 * optional string department_id_list = 32;
 * @return {string}
 */
proto.Transaction.prototype.getDepartmentIdList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setDepartmentIdList = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string vendor_category = 33;
 * @return {string}
 */
proto.Transaction.prototype.getVendorCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setVendorCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional bool without_limit = 34;
 * @return {boolean}
 */
proto.Transaction.prototype.getWithoutLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 34, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setWithoutLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 34, value);
};


/**
 * optional int32 assigned_employee_id = 35;
 * @return {number}
 */
proto.Transaction.prototype.getAssignedEmployeeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setAssignedEmployeeId = function(value) {
  return jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional string assigned_employee_name = 36;
 * @return {string}
 */
proto.Transaction.prototype.getAssignedEmployeeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setAssignedEmployeeName = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string order_number = 37;
 * @return {string}
 */
proto.Transaction.prototype.getOrderNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setOrderNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional bool is_billing_recorded = 38;
 * @return {boolean}
 */
proto.Transaction.prototype.getIsBillingRecorded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 38, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setIsBillingRecorded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 38, value);
};


/**
 * optional string invoice_number = 39;
 * @return {string}
 */
proto.Transaction.prototype.getInvoiceNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setInvoiceNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional bool state_tax_applied = 40;
 * @return {boolean}
 */
proto.Transaction.prototype.getStateTaxApplied = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 40, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setStateTaxApplied = function(value) {
  return jspb.Message.setProto3BooleanField(this, 40, value);
};


/**
 * optional int32 vendor_id = 41;
 * @return {number}
 */
proto.Transaction.prototype.getVendorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.Transaction} returns this
 */
proto.Transaction.prototype.setVendorId = function(value) {
  return jspb.Message.setProto3IntField(this, 41, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TransactionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TransactionList.prototype.toObject = function(opt_includeInstance) {
  return proto.TransactionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TransactionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TransactionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Transaction.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TransactionList}
 */
proto.TransactionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TransactionList;
  return proto.TransactionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TransactionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TransactionList}
 */
proto.TransactionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Transaction;
      reader.readMessage(value,proto.Transaction.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TransactionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TransactionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TransactionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TransactionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated Transaction results = 1;
 * @return {!Array<!proto.Transaction>}
 */
proto.TransactionList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Transaction, 1));
};


/**
 * @param {!Array<!proto.Transaction>} value
 * @return {!proto.TransactionList} returns this
*/
proto.TransactionList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Transaction}
 */
proto.TransactionList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.TransactionList} returns this
 */
proto.TransactionList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.TransactionList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.TransactionList} returns this
 */
proto.TransactionList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordPageReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordPageReq.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordPageReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordPageReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecordPageReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    requestData: (f = msg.getRequestData()) && proto.Transaction.toObject(includeInstance, f),
    adminId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordPageReq}
 */
proto.RecordPageReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordPageReq;
  return proto.RecordPageReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordPageReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordPageReq}
 */
proto.RecordPageReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTransactionIds(values[i]);
      }
      break;
    case 2:
      var value = new proto.Transaction;
      reader.readMessage(value,proto.Transaction.deserializeBinaryFromReader);
      msg.setRequestData(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdminId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordPageReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecordPageReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecordPageReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecordPageReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getRequestData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getAdminId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated int32 transaction_ids = 1;
 * @return {!Array<number>}
 */
proto.RecordPageReq.prototype.getTransactionIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.RecordPageReq} returns this
 */
proto.RecordPageReq.prototype.setTransactionIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.RecordPageReq} returns this
 */
proto.RecordPageReq.prototype.addTransactionIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.RecordPageReq} returns this
 */
proto.RecordPageReq.prototype.clearTransactionIdsList = function() {
  return this.setTransactionIdsList([]);
};


/**
 * optional Transaction request_data = 2;
 * @return {?proto.Transaction}
 */
proto.RecordPageReq.prototype.getRequestData = function() {
  return /** @type{?proto.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.Transaction, 2));
};


/**
 * @param {?proto.Transaction|undefined} value
 * @return {!proto.RecordPageReq} returns this
*/
proto.RecordPageReq.prototype.setRequestData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.RecordPageReq} returns this
 */
proto.RecordPageReq.prototype.clearRequestData = function() {
  return this.setRequestData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RecordPageReq.prototype.hasRequestData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 admin_id = 3;
 * @return {number}
 */
proto.RecordPageReq.prototype.getAdminId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.RecordPageReq} returns this
 */
proto.RecordPageReq.prototype.setAdminId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TxnDepartment.prototype.toObject = function(opt_includeInstance) {
  return proto.TxnDepartment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TxnDepartment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TxnDepartment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    managerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    classification: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TxnDepartment}
 */
proto.TxnDepartment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TxnDepartment;
  return proto.TxnDepartment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TxnDepartment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TxnDepartment}
 */
proto.TxnDepartment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManagerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TxnDepartment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TxnDepartment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TxnDepartment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TxnDepartment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getManagerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getClassification();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.TxnDepartment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.TxnDepartment} returns this
 */
proto.TxnDepartment.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.TxnDepartment.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.TxnDepartment} returns this
 */
proto.TxnDepartment.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 manager_id = 3;
 * @return {number}
 */
proto.TxnDepartment.prototype.getManagerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.TxnDepartment} returns this
 */
proto.TxnDepartment.prototype.setManagerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string classification = 4;
 * @return {string}
 */
proto.TxnDepartment.prototype.getClassification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.TxnDepartment} returns this
 */
proto.TxnDepartment.prototype.setClassification = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto);
