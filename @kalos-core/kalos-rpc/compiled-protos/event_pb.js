// source: event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var user_pb = require('./user_pb.js');
goog.object.extend(proto, user_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var property_pb = require('./property_pb.js');
goog.object.extend(proto, property_pb);
var timeoff_request_pb = require('./timeoff_request_pb.js');
goog.object.extend(proto, timeoff_request_pb);
var task_pb = require('./task_pb.js');
goog.object.extend(proto, task_pb);
var transaction_pb = require('./transaction_pb.js');
goog.object.extend(proto, transaction_pb);
var transaction_account_pb = require('./transaction_account_pb.js');
goog.object.extend(proto, transaction_account_pb);
var timesheet_department_pb = require('./timesheet_department_pb.js');
goog.object.extend(proto, timesheet_department_pb);
var timesheet_line_pb = require('./timesheet_line_pb.js');
goog.object.extend(proto, timesheet_line_pb);
var perdiem_pb = require('./perdiem_pb.js');
goog.object.extend(proto, perdiem_pb);
goog.exportSymbol('proto.CalendarData', null, global);
goog.exportSymbol('proto.CalendarDay', null, global);
goog.exportSymbol('proto.CostReportData', null, global);
goog.exportSymbol('proto.CostReportInfo', null, global);
goog.exportSymbol('proto.CostReportInfoList', null, global);
goog.exportSymbol('proto.CostReportReq', null, global);
goog.exportSymbol('proto.Event', null, global);
goog.exportSymbol('proto.EventList', null, global);
goog.exportSymbol('proto.Quotable', null, global);
goog.exportSymbol('proto.QuotableList', null, global);
goog.exportSymbol('proto.QuotableRead', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Event.repeatedFields_, null);
};
goog.inherits(proto.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Event.displayName = 'proto.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EventList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EventList.repeatedFields_, null);
};
goog.inherits(proto.EventList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EventList.displayName = 'proto.EventList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CalendarDay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CalendarDay.repeatedFields_, null);
};
goog.inherits(proto.CalendarDay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CalendarDay.displayName = 'proto.CalendarDay';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CalendarData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CalendarData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CalendarData.displayName = 'proto.CalendarData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Quotable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Quotable.repeatedFields_, null);
};
goog.inherits(proto.Quotable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Quotable.displayName = 'proto.Quotable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.QuotableRead = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.QuotableRead.repeatedFields_, null);
};
goog.inherits(proto.QuotableRead, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.QuotableRead.displayName = 'proto.QuotableRead';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.QuotableList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.QuotableList.repeatedFields_, null);
};
goog.inherits(proto.QuotableList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.QuotableList.displayName = 'proto.QuotableList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostReportData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostReportData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostReportData.displayName = 'proto.CostReportData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostReportReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostReportReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostReportReq.displayName = 'proto.CostReportReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostReportInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CostReportInfo.repeatedFields_, null);
};
goog.inherits(proto.CostReportInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostReportInfo.displayName = 'proto.CostReportInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostReportInfoList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CostReportInfoList.repeatedFields_, null);
};
goog.inherits(proto.CostReportInfoList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostReportInfoList.displayName = 'proto.CostReportInfoList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Event.repeatedFields_ = [82,89,86,88,91];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dateStarted: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateEnded: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timeStarted: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timeEnded: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isAllDay: jspb.Message.getFieldWithDefault(msg, 8, 0),
    repeatType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    color: jspb.Message.getFieldWithDefault(msg, 10, ""),
    dateUpdated: jspb.Message.getFieldWithDefault(msg, 11, ""),
    dateCreated: jspb.Message.getFieldWithDefault(msg, 12, ""),
    propertyId: jspb.Message.getFieldWithDefault(msg, 13, 0),
    contractId: jspb.Message.getFieldWithDefault(msg, 14, 0),
    contractNumber: jspb.Message.getFieldWithDefault(msg, 15, ""),
    logJobNumber: jspb.Message.getFieldWithDefault(msg, 16, ""),
    logJobStatus: jspb.Message.getFieldWithDefault(msg, 17, ""),
    logPo: jspb.Message.getFieldWithDefault(msg, 18, ""),
    logNotes: jspb.Message.getFieldWithDefault(msg, 19, ""),
    logTechnicianAssigned: jspb.Message.getFieldWithDefault(msg, 20, ""),
    logDateCompleted: jspb.Message.getFieldWithDefault(msg, 21, ""),
    logMaterialsUsed: jspb.Message.getFieldWithDefault(msg, 22, ""),
    logServiceRendered: jspb.Message.getFieldWithDefault(msg, 23, ""),
    logTechNotes: jspb.Message.getFieldWithDefault(msg, 24, ""),
    logBillingDate: jspb.Message.getFieldWithDefault(msg, 25, ""),
    logAmountCharged: jspb.Message.getFieldWithDefault(msg, 26, ""),
    logPaymentType: jspb.Message.getFieldWithDefault(msg, 27, ""),
    logPaymentStatus: jspb.Message.getFieldWithDefault(msg, 28, ""),
    logTimeIn: jspb.Message.getFieldWithDefault(msg, 29, ""),
    logTimeOut: jspb.Message.getFieldWithDefault(msg, 30, ""),
    logType: jspb.Message.getFieldWithDefault(msg, 31, ""),
    logContractNotes: jspb.Message.getFieldWithDefault(msg, 32, ""),
    invoiceServiceItem: jspb.Message.getFieldWithDefault(msg, 33, ""),
    tstatType: jspb.Message.getFieldWithDefault(msg, 34, ""),
    tstatBrand: jspb.Message.getFieldWithDefault(msg, 35, ""),
    compressorAmps: jspb.Message.getFieldWithDefault(msg, 36, ""),
    condensingFanAmps: jspb.Message.getFieldWithDefault(msg, 37, ""),
    suctionPressure: jspb.Message.getFieldWithDefault(msg, 38, ""),
    headPressure: jspb.Message.getFieldWithDefault(msg, 39, ""),
    returnTemperature: jspb.Message.getFieldWithDefault(msg, 40, ""),
    supplyTemperature: jspb.Message.getFieldWithDefault(msg, 41, ""),
    subcool: jspb.Message.getFieldWithDefault(msg, 42, ""),
    superheat: jspb.Message.getFieldWithDefault(msg, 43, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 44, ""),
    services: jspb.Message.getFieldWithDefault(msg, 45, ""),
    servicesperformedrow1: jspb.Message.getFieldWithDefault(msg, 46, ""),
    totalamountrow1: jspb.Message.getFieldWithDefault(msg, 47, ""),
    servicesperformedrow2: jspb.Message.getFieldWithDefault(msg, 48, ""),
    totalamountrow2: jspb.Message.getFieldWithDefault(msg, 49, ""),
    servicesperformedrow3: jspb.Message.getFieldWithDefault(msg, 50, ""),
    totalamountrow3: jspb.Message.getFieldWithDefault(msg, 51, ""),
    servicesperformedrow4: jspb.Message.getFieldWithDefault(msg, 52, ""),
    totalamountrow4: jspb.Message.getFieldWithDefault(msg, 53, ""),
    discount: jspb.Message.getFieldWithDefault(msg, 54, ""),
    discountcost: jspb.Message.getFieldWithDefault(msg, 55, ""),
    logNotification: jspb.Message.getFieldWithDefault(msg, 56, ""),
    diagnosticQuoted: jspb.Message.getFieldWithDefault(msg, 57, 0),
    amountQuoted: jspb.Message.getFieldWithDefault(msg, 58, ""),
    propertyBilling: jspb.Message.getFieldWithDefault(msg, 59, 0),
    isCallback: jspb.Message.getFieldWithDefault(msg, 60, 0),
    logVersion: jspb.Message.getFieldWithDefault(msg, 61, 0),
    jobTypeId: jspb.Message.getFieldWithDefault(msg, 62, 0),
    jobSubtypeId: jspb.Message.getFieldWithDefault(msg, 63, 0),
    callbackOriginalId: jspb.Message.getFieldWithDefault(msg, 64, 0),
    callbackDisposition: jspb.Message.getFieldWithDefault(msg, 65, 0),
    callbackComments: jspb.Message.getFieldWithDefault(msg, 66, ""),
    callbackTechnician: jspb.Message.getFieldWithDefault(msg, 67, 0),
    callbackApprovalTimestamp: jspb.Message.getFieldWithDefault(msg, 68, ""),
    callbackCommentBy: jspb.Message.getFieldWithDefault(msg, 69, 0),
    documentId: jspb.Message.getFieldWithDefault(msg, 70, 0),
    materialUsed: jspb.Message.getFieldWithDefault(msg, 71, ""),
    materialTotal: jspb.Message.getFloatingPointFieldWithDefault(msg, 72, 0.0),
    isActive: jspb.Message.getFieldWithDefault(msg, 73, 0),
    parentId: jspb.Message.getFieldWithDefault(msg, 74, 0),
    isLmpc: jspb.Message.getFieldWithDefault(msg, 75, 0),
    highPriority: jspb.Message.getFieldWithDefault(msg, 76, 0),
    isResidential: jspb.Message.getFieldWithDefault(msg, 77, 0),
    jobType: jspb.Message.getFieldWithDefault(msg, 78, ""),
    jobSubtype: jspb.Message.getFieldWithDefault(msg, 79, ""),
    customer: (f = msg.getCustomer()) && user_pb.User.toObject(includeInstance, f),
    property: (f = msg.getProperty()) && property_pb.Property.toObject(includeInstance, f),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 82)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 83, 0),
    orderBy: jspb.Message.getFieldWithDefault(msg, 84, ""),
    orderDir: jspb.Message.getFieldWithDefault(msg, 85, ""),
    dateTargetList: (f = jspb.Message.getRepeatedField(msg, 89)) == null ? undefined : f,
    dateRangeList: (f = jspb.Message.getRepeatedField(msg, 86)) == null ? undefined : f,
    countOnly: jspb.Message.getBooleanFieldWithDefault(msg, 87, false),
    quoteDataList: jspb.Message.toObjectList(msg.getQuoteDataList(),
    proto.Quotable.toObject, includeInstance),
    departmentId: jspb.Message.getFieldWithDefault(msg, 90, 0),
    notEqualsList: (f = jspb.Message.getRepeatedField(msg, 91)) == null ? undefined : f,
    withoutLimit: jspb.Message.getBooleanFieldWithDefault(msg, 92, false),
    isGeneratedInvoice: jspb.Message.getBooleanFieldWithDefault(msg, 93, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Event}
 */
proto.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Event;
  return proto.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Event}
 */
proto.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateStarted(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateEnded(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeStarted(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeEnded(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsAllDay(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRepeatType(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateUpdated(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateCreated(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropertyId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContractId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractNumber(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogJobNumber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogJobStatus(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogPo(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogNotes(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogTechnicianAssigned(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogDateCompleted(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogMaterialsUsed(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogServiceRendered(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogTechNotes(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogBillingDate(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogAmountCharged(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogPaymentType(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogPaymentStatus(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogTimeIn(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogTimeOut(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogType(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogContractNotes(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoiceServiceItem(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setTstatType(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setTstatBrand(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompressorAmps(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondensingFanAmps(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuctionPressure(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadPressure(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnTemperature(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplyTemperature(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubcool(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuperheat(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setServices(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicesperformedrow1(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalamountrow1(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicesperformedrow2(value);
      break;
    case 49:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalamountrow2(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicesperformedrow3(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalamountrow3(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicesperformedrow4(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalamountrow4(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscount(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountcost(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogNotification(value);
      break;
    case 57:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiagnosticQuoted(value);
      break;
    case 58:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmountQuoted(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropertyBilling(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsCallback(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogVersion(value);
      break;
    case 62:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobTypeId(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobSubtypeId(value);
      break;
    case 64:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCallbackOriginalId(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCallbackDisposition(value);
      break;
    case 66:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallbackComments(value);
      break;
    case 67:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCallbackTechnician(value);
      break;
    case 68:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallbackApprovalTimestamp(value);
      break;
    case 69:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCallbackCommentBy(value);
      break;
    case 70:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentId(value);
      break;
    case 71:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialUsed(value);
      break;
    case 72:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaterialTotal(value);
      break;
    case 73:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsActive(value);
      break;
    case 74:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParentId(value);
      break;
    case 75:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsLmpc(value);
      break;
    case 76:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHighPriority(value);
      break;
    case 77:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsResidential(value);
      break;
    case 78:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobType(value);
      break;
    case 79:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobSubtype(value);
      break;
    case 80:
      var value = new user_pb.User;
      reader.readMessage(value,user_pb.User.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 81:
      var value = new property_pb.Property;
      reader.readMessage(value,property_pb.Property.deserializeBinaryFromReader);
      msg.setProperty(value);
      break;
    case 82:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 83:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 84:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 85:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderDir(value);
      break;
    case 89:
      var value = /** @type {string} */ (reader.readString());
      msg.addDateTarget(value);
      break;
    case 86:
      var value = /** @type {string} */ (reader.readString());
      msg.addDateRange(value);
      break;
    case 87:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCountOnly(value);
      break;
    case 88:
      var value = new proto.Quotable;
      reader.readMessage(value,proto.Quotable.deserializeBinaryFromReader);
      msg.addQuoteData(value);
      break;
    case 90:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 91:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotEquals(value);
      break;
    case 92:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithoutLimit(value);
      break;
    case 93:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGeneratedInvoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDateStarted();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateEnded();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimeStarted();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimeEnded();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsAllDay();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getRepeatType();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDateUpdated();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDateCreated();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPropertyId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getContractId();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getContractNumber();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLogJobNumber();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLogJobStatus();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLogPo();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLogNotes();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getLogTechnicianAssigned();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getLogDateCompleted();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLogMaterialsUsed();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getLogServiceRendered();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLogTechNotes();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getLogBillingDate();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLogAmountCharged();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getLogPaymentType();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getLogPaymentStatus();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getLogTimeIn();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getLogTimeOut();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getLogType();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getLogContractNotes();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getInvoiceServiceItem();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getTstatType();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getTstatBrand();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getCompressorAmps();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getCondensingFanAmps();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getSuctionPressure();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getHeadPressure();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getReturnTemperature();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getSupplyTemperature();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getSubcool();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getSuperheat();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getServices();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getServicesperformedrow1();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getTotalamountrow1();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getServicesperformedrow2();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getTotalamountrow2();
  if (f.length > 0) {
    writer.writeString(
      49,
      f
    );
  }
  f = message.getServicesperformedrow3();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getTotalamountrow3();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getServicesperformedrow4();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getTotalamountrow4();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getDiscount();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
  f = message.getDiscountcost();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
  f = message.getLogNotification();
  if (f.length > 0) {
    writer.writeString(
      56,
      f
    );
  }
  f = message.getDiagnosticQuoted();
  if (f !== 0) {
    writer.writeInt32(
      57,
      f
    );
  }
  f = message.getAmountQuoted();
  if (f.length > 0) {
    writer.writeString(
      58,
      f
    );
  }
  f = message.getPropertyBilling();
  if (f !== 0) {
    writer.writeInt32(
      59,
      f
    );
  }
  f = message.getIsCallback();
  if (f !== 0) {
    writer.writeInt32(
      60,
      f
    );
  }
  f = message.getLogVersion();
  if (f !== 0) {
    writer.writeInt32(
      61,
      f
    );
  }
  f = message.getJobTypeId();
  if (f !== 0) {
    writer.writeInt32(
      62,
      f
    );
  }
  f = message.getJobSubtypeId();
  if (f !== 0) {
    writer.writeInt32(
      63,
      f
    );
  }
  f = message.getCallbackOriginalId();
  if (f !== 0) {
    writer.writeInt32(
      64,
      f
    );
  }
  f = message.getCallbackDisposition();
  if (f !== 0) {
    writer.writeInt32(
      65,
      f
    );
  }
  f = message.getCallbackComments();
  if (f.length > 0) {
    writer.writeString(
      66,
      f
    );
  }
  f = message.getCallbackTechnician();
  if (f !== 0) {
    writer.writeInt32(
      67,
      f
    );
  }
  f = message.getCallbackApprovalTimestamp();
  if (f.length > 0) {
    writer.writeString(
      68,
      f
    );
  }
  f = message.getCallbackCommentBy();
  if (f !== 0) {
    writer.writeInt32(
      69,
      f
    );
  }
  f = message.getDocumentId();
  if (f !== 0) {
    writer.writeInt32(
      70,
      f
    );
  }
  f = message.getMaterialUsed();
  if (f.length > 0) {
    writer.writeString(
      71,
      f
    );
  }
  f = message.getMaterialTotal();
  if (f !== 0.0) {
    writer.writeDouble(
      72,
      f
    );
  }
  f = message.getIsActive();
  if (f !== 0) {
    writer.writeInt32(
      73,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt32(
      74,
      f
    );
  }
  f = message.getIsLmpc();
  if (f !== 0) {
    writer.writeInt32(
      75,
      f
    );
  }
  f = message.getHighPriority();
  if (f !== 0) {
    writer.writeInt32(
      76,
      f
    );
  }
  f = message.getIsResidential();
  if (f !== 0) {
    writer.writeInt32(
      77,
      f
    );
  }
  f = message.getJobType();
  if (f.length > 0) {
    writer.writeString(
      78,
      f
    );
  }
  f = message.getJobSubtype();
  if (f.length > 0) {
    writer.writeString(
      79,
      f
    );
  }
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      80,
      f,
      user_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      81,
      f,
      property_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      82,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      83,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      84,
      f
    );
  }
  f = message.getOrderDir();
  if (f.length > 0) {
    writer.writeString(
      85,
      f
    );
  }
  f = message.getDateTargetList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      89,
      f
    );
  }
  f = message.getDateRangeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      86,
      f
    );
  }
  f = message.getCountOnly();
  if (f) {
    writer.writeBool(
      87,
      f
    );
  }
  f = message.getQuoteDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      88,
      f,
      proto.Quotable.serializeBinaryToWriter
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      90,
      f
    );
  }
  f = message.getNotEqualsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      91,
      f
    );
  }
  f = message.getWithoutLimit();
  if (f) {
    writer.writeBool(
      92,
      f
    );
  }
  f = message.getIsGeneratedInvoice();
  if (f) {
    writer.writeBool(
      93,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Event.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Event.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.Event.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string date_started = 4;
 * @return {string}
 */
proto.Event.prototype.getDateStarted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDateStarted = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date_ended = 5;
 * @return {string}
 */
proto.Event.prototype.getDateEnded = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDateEnded = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string time_started = 6;
 * @return {string}
 */
proto.Event.prototype.getTimeStarted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTimeStarted = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string time_ended = 7;
 * @return {string}
 */
proto.Event.prototype.getTimeEnded = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTimeEnded = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 is_all_day = 8;
 * @return {number}
 */
proto.Event.prototype.getIsAllDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setIsAllDay = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 repeat_type = 9;
 * @return {number}
 */
proto.Event.prototype.getRepeatType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setRepeatType = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string color = 10;
 * @return {string}
 */
proto.Event.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string date_updated = 11;
 * @return {string}
 */
proto.Event.prototype.getDateUpdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDateUpdated = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string date_created = 12;
 * @return {string}
 */
proto.Event.prototype.getDateCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDateCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int32 property_id = 13;
 * @return {number}
 */
proto.Event.prototype.getPropertyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setPropertyId = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 contract_id = 14;
 * @return {number}
 */
proto.Event.prototype.getContractId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setContractId = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string contract_number = 15;
 * @return {string}
 */
proto.Event.prototype.getContractNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setContractNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string log_job_number = 16;
 * @return {string}
 */
proto.Event.prototype.getLogJobNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogJobNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string log_job_status = 17;
 * @return {string}
 */
proto.Event.prototype.getLogJobStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogJobStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string log_po = 18;
 * @return {string}
 */
proto.Event.prototype.getLogPo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogPo = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string log_notes = 19;
 * @return {string}
 */
proto.Event.prototype.getLogNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string log_technician_assigned = 20;
 * @return {string}
 */
proto.Event.prototype.getLogTechnicianAssigned = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogTechnicianAssigned = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string log_date_completed = 21;
 * @return {string}
 */
proto.Event.prototype.getLogDateCompleted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogDateCompleted = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string log_materials_used = 22;
 * @return {string}
 */
proto.Event.prototype.getLogMaterialsUsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogMaterialsUsed = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string log_service_rendered = 23;
 * @return {string}
 */
proto.Event.prototype.getLogServiceRendered = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogServiceRendered = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string log_tech_notes = 24;
 * @return {string}
 */
proto.Event.prototype.getLogTechNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogTechNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string log_billing_date = 25;
 * @return {string}
 */
proto.Event.prototype.getLogBillingDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogBillingDate = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string log_amount_charged = 26;
 * @return {string}
 */
proto.Event.prototype.getLogAmountCharged = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogAmountCharged = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string log_payment_type = 27;
 * @return {string}
 */
proto.Event.prototype.getLogPaymentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogPaymentType = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string log_payment_status = 28;
 * @return {string}
 */
proto.Event.prototype.getLogPaymentStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogPaymentStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string log_time_in = 29;
 * @return {string}
 */
proto.Event.prototype.getLogTimeIn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogTimeIn = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string log_time_out = 30;
 * @return {string}
 */
proto.Event.prototype.getLogTimeOut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogTimeOut = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string log_type = 31;
 * @return {string}
 */
proto.Event.prototype.getLogType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogType = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string log_contract_notes = 32;
 * @return {string}
 */
proto.Event.prototype.getLogContractNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogContractNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string invoice_service_item = 33;
 * @return {string}
 */
proto.Event.prototype.getInvoiceServiceItem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setInvoiceServiceItem = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string tstat_type = 34;
 * @return {string}
 */
proto.Event.prototype.getTstatType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTstatType = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string tstat_brand = 35;
 * @return {string}
 */
proto.Event.prototype.getTstatBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTstatBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string compressor_amps = 36;
 * @return {string}
 */
proto.Event.prototype.getCompressorAmps = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCompressorAmps = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string condensing_fan_amps = 37;
 * @return {string}
 */
proto.Event.prototype.getCondensingFanAmps = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCondensingFanAmps = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string suction_pressure = 38;
 * @return {string}
 */
proto.Event.prototype.getSuctionPressure = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setSuctionPressure = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string head_pressure = 39;
 * @return {string}
 */
proto.Event.prototype.getHeadPressure = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setHeadPressure = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string return_temperature = 40;
 * @return {string}
 */
proto.Event.prototype.getReturnTemperature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setReturnTemperature = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string supply_temperature = 41;
 * @return {string}
 */
proto.Event.prototype.getSupplyTemperature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setSupplyTemperature = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string subcool = 42;
 * @return {string}
 */
proto.Event.prototype.getSubcool = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setSubcool = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string superheat = 43;
 * @return {string}
 */
proto.Event.prototype.getSuperheat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setSuperheat = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string notes = 44;
 * @return {string}
 */
proto.Event.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string services = 45;
 * @return {string}
 */
proto.Event.prototype.getServices = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setServices = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional string servicesperformedrow1 = 46;
 * @return {string}
 */
proto.Event.prototype.getServicesperformedrow1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setServicesperformedrow1 = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string totalamountrow1 = 47;
 * @return {string}
 */
proto.Event.prototype.getTotalamountrow1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTotalamountrow1 = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional string servicesperformedrow2 = 48;
 * @return {string}
 */
proto.Event.prototype.getServicesperformedrow2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setServicesperformedrow2 = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional string totalamountrow2 = 49;
 * @return {string}
 */
proto.Event.prototype.getTotalamountrow2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 49, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTotalamountrow2 = function(value) {
  return jspb.Message.setProto3StringField(this, 49, value);
};


/**
 * optional string servicesperformedrow3 = 50;
 * @return {string}
 */
proto.Event.prototype.getServicesperformedrow3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setServicesperformedrow3 = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string totalamountrow3 = 51;
 * @return {string}
 */
proto.Event.prototype.getTotalamountrow3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTotalamountrow3 = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string servicesperformedrow4 = 52;
 * @return {string}
 */
proto.Event.prototype.getServicesperformedrow4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setServicesperformedrow4 = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * optional string totalamountrow4 = 53;
 * @return {string}
 */
proto.Event.prototype.getTotalamountrow4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setTotalamountrow4 = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * optional string discount = 54;
 * @return {string}
 */
proto.Event.prototype.getDiscount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};


/**
 * optional string discountcost = 55;
 * @return {string}
 */
proto.Event.prototype.getDiscountcost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDiscountcost = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};


/**
 * optional string log_notification = 56;
 * @return {string}
 */
proto.Event.prototype.getLogNotification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogNotification = function(value) {
  return jspb.Message.setProto3StringField(this, 56, value);
};


/**
 * optional int32 diagnostic_quoted = 57;
 * @return {number}
 */
proto.Event.prototype.getDiagnosticQuoted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 57, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDiagnosticQuoted = function(value) {
  return jspb.Message.setProto3IntField(this, 57, value);
};


/**
 * optional string amount_quoted = 58;
 * @return {string}
 */
proto.Event.prototype.getAmountQuoted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 58, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setAmountQuoted = function(value) {
  return jspb.Message.setProto3StringField(this, 58, value);
};


/**
 * optional int32 property_billing = 59;
 * @return {number}
 */
proto.Event.prototype.getPropertyBilling = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 59, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setPropertyBilling = function(value) {
  return jspb.Message.setProto3IntField(this, 59, value);
};


/**
 * optional int32 is_callback = 60;
 * @return {number}
 */
proto.Event.prototype.getIsCallback = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setIsCallback = function(value) {
  return jspb.Message.setProto3IntField(this, 60, value);
};


/**
 * optional int32 log_version = 61;
 * @return {number}
 */
proto.Event.prototype.getLogVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setLogVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 61, value);
};


/**
 * optional int32 job_type_id = 62;
 * @return {number}
 */
proto.Event.prototype.getJobTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 62, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setJobTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 62, value);
};


/**
 * optional int32 job_subtype_id = 63;
 * @return {number}
 */
proto.Event.prototype.getJobSubtypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 63, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setJobSubtypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 63, value);
};


/**
 * optional int32 callback_original_id = 64;
 * @return {number}
 */
proto.Event.prototype.getCallbackOriginalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 64, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCallbackOriginalId = function(value) {
  return jspb.Message.setProto3IntField(this, 64, value);
};


/**
 * optional int32 callback_disposition = 65;
 * @return {number}
 */
proto.Event.prototype.getCallbackDisposition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCallbackDisposition = function(value) {
  return jspb.Message.setProto3IntField(this, 65, value);
};


/**
 * optional string callback_comments = 66;
 * @return {string}
 */
proto.Event.prototype.getCallbackComments = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 66, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCallbackComments = function(value) {
  return jspb.Message.setProto3StringField(this, 66, value);
};


/**
 * optional int32 callback_technician = 67;
 * @return {number}
 */
proto.Event.prototype.getCallbackTechnician = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 67, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCallbackTechnician = function(value) {
  return jspb.Message.setProto3IntField(this, 67, value);
};


/**
 * optional string callback_approval_timestamp = 68;
 * @return {string}
 */
proto.Event.prototype.getCallbackApprovalTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 68, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCallbackApprovalTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 68, value);
};


/**
 * optional int32 callback_comment_by = 69;
 * @return {number}
 */
proto.Event.prototype.getCallbackCommentBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 69, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCallbackCommentBy = function(value) {
  return jspb.Message.setProto3IntField(this, 69, value);
};


/**
 * optional int32 document_id = 70;
 * @return {number}
 */
proto.Event.prototype.getDocumentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 70, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDocumentId = function(value) {
  return jspb.Message.setProto3IntField(this, 70, value);
};


/**
 * optional string material_used = 71;
 * @return {string}
 */
proto.Event.prototype.getMaterialUsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 71, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setMaterialUsed = function(value) {
  return jspb.Message.setProto3StringField(this, 71, value);
};


/**
 * optional double material_total = 72;
 * @return {number}
 */
proto.Event.prototype.getMaterialTotal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 72, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setMaterialTotal = function(value) {
  return jspb.Message.setProto3FloatField(this, 72, value);
};


/**
 * optional int32 is_active = 73;
 * @return {number}
 */
proto.Event.prototype.getIsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 73, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 73, value);
};


/**
 * optional int32 parent_id = 74;
 * @return {number}
 */
proto.Event.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 74, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setParentId = function(value) {
  return jspb.Message.setProto3IntField(this, 74, value);
};


/**
 * optional int32 is_lmpc = 75;
 * @return {number}
 */
proto.Event.prototype.getIsLmpc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 75, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setIsLmpc = function(value) {
  return jspb.Message.setProto3IntField(this, 75, value);
};


/**
 * optional int32 high_priority = 76;
 * @return {number}
 */
proto.Event.prototype.getHighPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 76, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setHighPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 76, value);
};


/**
 * optional int32 is_residential = 77;
 * @return {number}
 */
proto.Event.prototype.getIsResidential = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 77, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setIsResidential = function(value) {
  return jspb.Message.setProto3IntField(this, 77, value);
};


/**
 * optional string job_type = 78;
 * @return {string}
 */
proto.Event.prototype.getJobType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 78, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setJobType = function(value) {
  return jspb.Message.setProto3StringField(this, 78, value);
};


/**
 * optional string job_subtype = 79;
 * @return {string}
 */
proto.Event.prototype.getJobSubtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 79, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setJobSubtype = function(value) {
  return jspb.Message.setProto3StringField(this, 79, value);
};


/**
 * optional User customer = 80;
 * @return {?proto.User}
 */
proto.Event.prototype.getCustomer = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, user_pb.User, 80));
};


/**
 * @param {?proto.User|undefined} value
 * @return {!proto.Event} returns this
*/
proto.Event.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 80, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Event.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional Property property = 81;
 * @return {?proto.Property}
 */
proto.Event.prototype.getProperty = function() {
  return /** @type{?proto.Property} */ (
    jspb.Message.getWrapperField(this, property_pb.Property, 81));
};


/**
 * @param {?proto.Property|undefined} value
 * @return {!proto.Event} returns this
*/
proto.Event.prototype.setProperty = function(value) {
  return jspb.Message.setWrapperField(this, 81, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearProperty = function() {
  return this.setProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Event.prototype.hasProperty = function() {
  return jspb.Message.getField(this, 81) != null;
};


/**
 * repeated string field_mask = 82;
 * @return {!Array<string>}
 */
proto.Event.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 82));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 82, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 82, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 page_number = 83;
 * @return {number}
 */
proto.Event.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 83, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 83, value);
};


/**
 * optional string order_by = 84;
 * @return {string}
 */
proto.Event.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 84, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 84, value);
};


/**
 * optional string order_dir = 85;
 * @return {string}
 */
proto.Event.prototype.getOrderDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 85, ""));
};


/**
 * @param {string} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setOrderDir = function(value) {
  return jspb.Message.setProto3StringField(this, 85, value);
};


/**
 * repeated string date_target = 89;
 * @return {!Array<string>}
 */
proto.Event.prototype.getDateTargetList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 89));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDateTargetList = function(value) {
  return jspb.Message.setField(this, 89, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.addDateTarget = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 89, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearDateTargetList = function() {
  return this.setDateTargetList([]);
};


/**
 * repeated string date_range = 86;
 * @return {!Array<string>}
 */
proto.Event.prototype.getDateRangeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 86));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDateRangeList = function(value) {
  return jspb.Message.setField(this, 86, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.addDateRange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 86, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearDateRangeList = function() {
  return this.setDateRangeList([]);
};


/**
 * optional bool count_only = 87;
 * @return {boolean}
 */
proto.Event.prototype.getCountOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 87, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setCountOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 87, value);
};


/**
 * repeated Quotable quote_data = 88;
 * @return {!Array<!proto.Quotable>}
 */
proto.Event.prototype.getQuoteDataList = function() {
  return /** @type{!Array<!proto.Quotable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Quotable, 88));
};


/**
 * @param {!Array<!proto.Quotable>} value
 * @return {!proto.Event} returns this
*/
proto.Event.prototype.setQuoteDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 88, value);
};


/**
 * @param {!proto.Quotable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Quotable}
 */
proto.Event.prototype.addQuoteData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 88, opt_value, proto.Quotable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearQuoteDataList = function() {
  return this.setQuoteDataList([]);
};


/**
 * optional int32 department_id = 90;
 * @return {number}
 */
proto.Event.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 90, 0));
};


/**
 * @param {number} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 90, value);
};


/**
 * repeated string not_equals = 91;
 * @return {!Array<string>}
 */
proto.Event.prototype.getNotEqualsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 91));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setNotEqualsList = function(value) {
  return jspb.Message.setField(this, 91, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.addNotEquals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 91, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.clearNotEqualsList = function() {
  return this.setNotEqualsList([]);
};


/**
 * optional bool without_limit = 92;
 * @return {boolean}
 */
proto.Event.prototype.getWithoutLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 92, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setWithoutLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 92, value);
};


/**
 * optional bool is_generated_invoice = 93;
 * @return {boolean}
 */
proto.Event.prototype.getIsGeneratedInvoice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 93, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Event} returns this
 */
proto.Event.prototype.setIsGeneratedInvoice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 93, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EventList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EventList.prototype.toObject = function(opt_includeInstance) {
  return proto.EventList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EventList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EventList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Event.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EventList}
 */
proto.EventList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EventList;
  return proto.EventList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EventList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EventList}
 */
proto.EventList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Event;
      reader.readMessage(value,proto.Event.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EventList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EventList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EventList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EventList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Event.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated Event results = 1;
 * @return {!Array<!proto.Event>}
 */
proto.EventList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Event, 1));
};


/**
 * @param {!Array<!proto.Event>} value
 * @return {!proto.EventList} returns this
*/
proto.EventList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Event}
 */
proto.EventList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EventList} returns this
 */
proto.EventList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.EventList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.EventList} returns this
 */
proto.EventList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CalendarDay.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CalendarDay.prototype.toObject = function(opt_includeInstance) {
  return proto.CalendarDay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CalendarDay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CalendarDay.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceCallsList: jspb.Message.toObjectList(msg.getServiceCallsList(),
    proto.Event.toObject, includeInstance),
    completedServiceCallsList: jspb.Message.toObjectList(msg.getCompletedServiceCallsList(),
    proto.Event.toObject, includeInstance),
    remindersList: jspb.Message.toObjectList(msg.getRemindersList(),
    proto.Event.toObject, includeInstance),
    timeoffRequestsList: jspb.Message.toObjectList(msg.getTimeoffRequestsList(),
    timeoff_request_pb.TimeoffRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CalendarDay}
 */
proto.CalendarDay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CalendarDay;
  return proto.CalendarDay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CalendarDay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CalendarDay}
 */
proto.CalendarDay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Event;
      reader.readMessage(value,proto.Event.deserializeBinaryFromReader);
      msg.addServiceCalls(value);
      break;
    case 2:
      var value = new proto.Event;
      reader.readMessage(value,proto.Event.deserializeBinaryFromReader);
      msg.addCompletedServiceCalls(value);
      break;
    case 3:
      var value = new proto.Event;
      reader.readMessage(value,proto.Event.deserializeBinaryFromReader);
      msg.addReminders(value);
      break;
    case 4:
      var value = new timeoff_request_pb.TimeoffRequest;
      reader.readMessage(value,timeoff_request_pb.TimeoffRequest.deserializeBinaryFromReader);
      msg.addTimeoffRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CalendarDay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CalendarDay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CalendarDay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CalendarDay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceCallsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Event.serializeBinaryToWriter
    );
  }
  f = message.getCompletedServiceCallsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Event.serializeBinaryToWriter
    );
  }
  f = message.getRemindersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.Event.serializeBinaryToWriter
    );
  }
  f = message.getTimeoffRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      timeoff_request_pb.TimeoffRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event service_calls = 1;
 * @return {!Array<!proto.Event>}
 */
proto.CalendarDay.prototype.getServiceCallsList = function() {
  return /** @type{!Array<!proto.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Event, 1));
};


/**
 * @param {!Array<!proto.Event>} value
 * @return {!proto.CalendarDay} returns this
*/
proto.CalendarDay.prototype.setServiceCallsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Event}
 */
proto.CalendarDay.prototype.addServiceCalls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CalendarDay} returns this
 */
proto.CalendarDay.prototype.clearServiceCallsList = function() {
  return this.setServiceCallsList([]);
};


/**
 * repeated Event completed_service_calls = 2;
 * @return {!Array<!proto.Event>}
 */
proto.CalendarDay.prototype.getCompletedServiceCallsList = function() {
  return /** @type{!Array<!proto.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Event, 2));
};


/**
 * @param {!Array<!proto.Event>} value
 * @return {!proto.CalendarDay} returns this
*/
proto.CalendarDay.prototype.setCompletedServiceCallsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Event}
 */
proto.CalendarDay.prototype.addCompletedServiceCalls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CalendarDay} returns this
 */
proto.CalendarDay.prototype.clearCompletedServiceCallsList = function() {
  return this.setCompletedServiceCallsList([]);
};


/**
 * repeated Event reminders = 3;
 * @return {!Array<!proto.Event>}
 */
proto.CalendarDay.prototype.getRemindersList = function() {
  return /** @type{!Array<!proto.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Event, 3));
};


/**
 * @param {!Array<!proto.Event>} value
 * @return {!proto.CalendarDay} returns this
*/
proto.CalendarDay.prototype.setRemindersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Event}
 */
proto.CalendarDay.prototype.addReminders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CalendarDay} returns this
 */
proto.CalendarDay.prototype.clearRemindersList = function() {
  return this.setRemindersList([]);
};


/**
 * repeated TimeoffRequest timeoff_requests = 4;
 * @return {!Array<!proto.TimeoffRequest>}
 */
proto.CalendarDay.prototype.getTimeoffRequestsList = function() {
  return /** @type{!Array<!proto.TimeoffRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, timeoff_request_pb.TimeoffRequest, 4));
};


/**
 * @param {!Array<!proto.TimeoffRequest>} value
 * @return {!proto.CalendarDay} returns this
*/
proto.CalendarDay.prototype.setTimeoffRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.TimeoffRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TimeoffRequest}
 */
proto.CalendarDay.prototype.addTimeoffRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.TimeoffRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CalendarDay} returns this
 */
proto.CalendarDay.prototype.clearTimeoffRequestsList = function() {
  return this.setTimeoffRequestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CalendarData.prototype.toObject = function(opt_includeInstance) {
  return proto.CalendarData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CalendarData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CalendarData.toObject = function(includeInstance, msg) {
  var f, obj = {
    datesMap: (f = msg.getDatesMap()) ? f.toObject(includeInstance, proto.CalendarDay.toObject) : [],
    customersMap: (f = msg.getCustomersMap()) ? f.toObject(includeInstance, undefined) : [],
    zipCodesMap: (f = msg.getZipCodesMap()) ? f.toObject(includeInstance, undefined) : [],
    statesMap: (f = msg.getStatesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CalendarData}
 */
proto.CalendarData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CalendarData;
  return proto.CalendarData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CalendarData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CalendarData}
 */
proto.CalendarData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.CalendarDay.deserializeBinaryFromReader, "", new proto.CalendarDay());
         });
      break;
    case 2:
      var value = msg.getCustomersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    case 3:
      var value = msg.getZipCodesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = msg.getStatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CalendarData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CalendarData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CalendarData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CalendarData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.CalendarDay.serializeBinaryToWriter);
  }
  f = message.getCustomersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getZipCodesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getStatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, CalendarDay> dates = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.CalendarDay>}
 */
proto.CalendarData.prototype.getDatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.CalendarDay>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.CalendarDay));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.CalendarData} returns this
 */
proto.CalendarData.prototype.clearDatesMap = function() {
  this.getDatesMap().clear();
  return this;};


/**
 * map<int32, string> customers = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.CalendarData.prototype.getCustomersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.CalendarData} returns this
 */
proto.CalendarData.prototype.clearCustomersMap = function() {
  this.getCustomersMap().clear();
  return this;};


/**
 * map<string, string> zip_codes = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.CalendarData.prototype.getZipCodesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.CalendarData} returns this
 */
proto.CalendarData.prototype.clearZipCodesMap = function() {
  this.getZipCodesMap().clear();
  return this;};


/**
 * map<string, string> states = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.CalendarData.prototype.getStatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.CalendarData} returns this
 */
proto.CalendarData.prototype.clearStatesMap = function() {
  this.getStatesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Quotable.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Quotable.prototype.toObject = function(opt_includeInstance) {
  return proto.Quotable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Quotable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Quotable.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quoteUsedId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    servicesRenderedId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    quoteLineId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    quotedPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    quantity: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    isBillable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isLmpc: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isFlatrate: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isComplex: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Quotable}
 */
proto.Quotable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Quotable;
  return proto.Quotable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Quotable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Quotable}
 */
proto.Quotable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuoteUsedId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServicesRenderedId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuoteLineId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotedPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBillable(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLmpc(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFlatrate(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsComplex(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Quotable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Quotable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Quotable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Quotable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQuoteUsedId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getServicesRenderedId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getQuoteLineId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getQuotedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getIsBillable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsLmpc();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsFlatrate();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsComplex();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Quotable.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 event_id = 2;
 * @return {number}
 */
proto.Quotable.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 quote_used_id = 3;
 * @return {number}
 */
proto.Quotable.prototype.getQuoteUsedId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setQuoteUsedId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 services_rendered_id = 4;
 * @return {number}
 */
proto.Quotable.prototype.getServicesRenderedId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setServicesRenderedId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 quote_line_id = 5;
 * @return {number}
 */
proto.Quotable.prototype.getQuoteLineId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setQuoteLineId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.Quotable.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double quoted_price = 7;
 * @return {number}
 */
proto.Quotable.prototype.getQuotedPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setQuotedPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double quantity = 8;
 * @return {number}
 */
proto.Quotable.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool is_billable = 9;
 * @return {boolean}
 */
proto.Quotable.prototype.getIsBillable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setIsBillable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_lmpc = 10;
 * @return {boolean}
 */
proto.Quotable.prototype.getIsLmpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setIsLmpc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_flatrate = 11;
 * @return {boolean}
 */
proto.Quotable.prototype.getIsFlatrate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setIsFlatrate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_complex = 12;
 * @return {boolean}
 */
proto.Quotable.prototype.getIsComplex = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setIsComplex = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_active = 13;
 * @return {boolean}
 */
proto.Quotable.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated string field_mask = 14;
 * @return {!Array<string>}
 */
proto.Quotable.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Quotable} returns this
 */
proto.Quotable.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.QuotableRead.repeatedFields_ = [14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.QuotableRead.prototype.toObject = function(opt_includeInstance) {
  return proto.QuotableRead.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.QuotableRead} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.QuotableRead.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quoteUsedId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    servicesRenderedId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    quoteLineId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    quotedPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    quantity: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    isBillable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isLmpc: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isFlatrate: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isComplex: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    notEqualsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 16, 0),
    orderBy: jspb.Message.getFieldWithDefault(msg, 17, ""),
    orderDir: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.QuotableRead}
 */
proto.QuotableRead.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.QuotableRead;
  return proto.QuotableRead.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.QuotableRead} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.QuotableRead}
 */
proto.QuotableRead.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuoteUsedId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServicesRenderedId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuoteLineId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotedPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBillable(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLmpc(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFlatrate(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsComplex(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotEquals(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderDir(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.QuotableRead.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.QuotableRead.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.QuotableRead} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.QuotableRead.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQuoteUsedId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getServicesRenderedId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getQuoteLineId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getQuotedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getIsBillable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsLmpc();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsFlatrate();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsComplex();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getNotEqualsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getOrderDir();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.QuotableRead.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 event_id = 2;
 * @return {number}
 */
proto.QuotableRead.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setEventId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 quote_used_id = 3;
 * @return {number}
 */
proto.QuotableRead.prototype.getQuoteUsedId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setQuoteUsedId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 services_rendered_id = 4;
 * @return {number}
 */
proto.QuotableRead.prototype.getServicesRenderedId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setServicesRenderedId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 quote_line_id = 5;
 * @return {number}
 */
proto.QuotableRead.prototype.getQuoteLineId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setQuoteLineId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.QuotableRead.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double quoted_price = 7;
 * @return {number}
 */
proto.QuotableRead.prototype.getQuotedPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setQuotedPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double quantity = 8;
 * @return {number}
 */
proto.QuotableRead.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool is_billable = 9;
 * @return {boolean}
 */
proto.QuotableRead.prototype.getIsBillable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setIsBillable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_lmpc = 10;
 * @return {boolean}
 */
proto.QuotableRead.prototype.getIsLmpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setIsLmpc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_flatrate = 11;
 * @return {boolean}
 */
proto.QuotableRead.prototype.getIsFlatrate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setIsFlatrate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_complex = 12;
 * @return {boolean}
 */
proto.QuotableRead.prototype.getIsComplex = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setIsComplex = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_active = 13;
 * @return {boolean}
 */
proto.QuotableRead.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated string field_mask = 14;
 * @return {!Array<string>}
 */
proto.QuotableRead.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * repeated string not_equals = 15;
 * @return {!Array<string>}
 */
proto.QuotableRead.prototype.getNotEqualsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setNotEqualsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.addNotEquals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.clearNotEqualsList = function() {
  return this.setNotEqualsList([]);
};


/**
 * optional int32 page_number = 16;
 * @return {number}
 */
proto.QuotableRead.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string order_by = 17;
 * @return {string}
 */
proto.QuotableRead.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string order_dir = 18;
 * @return {string}
 */
proto.QuotableRead.prototype.getOrderDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.QuotableRead} returns this
 */
proto.QuotableRead.prototype.setOrderDir = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.QuotableList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.QuotableList.prototype.toObject = function(opt_includeInstance) {
  return proto.QuotableList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.QuotableList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.QuotableList.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.Quotable.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.QuotableList}
 */
proto.QuotableList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.QuotableList;
  return proto.QuotableList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.QuotableList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.QuotableList}
 */
proto.QuotableList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Quotable;
      reader.readMessage(value,proto.Quotable.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.QuotableList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.QuotableList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.QuotableList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.QuotableList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Quotable.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * repeated Quotable data = 1;
 * @return {!Array<!proto.Quotable>}
 */
proto.QuotableList.prototype.getDataList = function() {
  return /** @type{!Array<!proto.Quotable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Quotable, 1));
};


/**
 * @param {!Array<!proto.Quotable>} value
 * @return {!proto.QuotableList} returns this
*/
proto.QuotableList.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Quotable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Quotable}
 */
proto.QuotableList.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Quotable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.QuotableList} returns this
 */
proto.QuotableList.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional int32 total_count = 19;
 * @return {number}
 */
proto.QuotableList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.QuotableList} returns this
 */
proto.QuotableList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostReportData.prototype.toObject = function(opt_includeInstance) {
  return proto.CostReportData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostReportData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportData.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionResults: (f = msg.getTransactionResults()) && transaction_pb.TransactionList.toObject(includeInstance, f),
    timesheetResults: (f = msg.getTimesheetResults()) && timesheet_line_pb.TimesheetLineList.toObject(includeInstance, f),
    perDiemResults: (f = msg.getPerDiemResults()) && perdiem_pb.PerDiemList.toObject(includeInstance, f),
    taskResults: (f = msg.getTaskResults()) && task_pb.TaskList.toObject(includeInstance, f),
    tripResults: (f = msg.getTripResults()) && perdiem_pb.TripList.toObject(includeInstance, f),
    eventResult: (f = msg.getEventResult()) && proto.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostReportData}
 */
proto.CostReportData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostReportData;
  return proto.CostReportData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostReportData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostReportData}
 */
proto.CostReportData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new transaction_pb.TransactionList;
      reader.readMessage(value,transaction_pb.TransactionList.deserializeBinaryFromReader);
      msg.setTransactionResults(value);
      break;
    case 2:
      var value = new timesheet_line_pb.TimesheetLineList;
      reader.readMessage(value,timesheet_line_pb.TimesheetLineList.deserializeBinaryFromReader);
      msg.setTimesheetResults(value);
      break;
    case 3:
      var value = new perdiem_pb.PerDiemList;
      reader.readMessage(value,perdiem_pb.PerDiemList.deserializeBinaryFromReader);
      msg.setPerDiemResults(value);
      break;
    case 4:
      var value = new task_pb.TaskList;
      reader.readMessage(value,task_pb.TaskList.deserializeBinaryFromReader);
      msg.setTaskResults(value);
      break;
    case 5:
      var value = new perdiem_pb.TripList;
      reader.readMessage(value,perdiem_pb.TripList.deserializeBinaryFromReader);
      msg.setTripResults(value);
      break;
    case 6:
      var value = new proto.Event;
      reader.readMessage(value,proto.Event.deserializeBinaryFromReader);
      msg.setEventResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostReportData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostReportData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostReportData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionResults();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      transaction_pb.TransactionList.serializeBinaryToWriter
    );
  }
  f = message.getTimesheetResults();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      timesheet_line_pb.TimesheetLineList.serializeBinaryToWriter
    );
  }
  f = message.getPerDiemResults();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      perdiem_pb.PerDiemList.serializeBinaryToWriter
    );
  }
  f = message.getTaskResults();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      task_pb.TaskList.serializeBinaryToWriter
    );
  }
  f = message.getTripResults();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      perdiem_pb.TripList.serializeBinaryToWriter
    );
  }
  f = message.getEventResult();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransactionList transaction_results = 1;
 * @return {?proto.TransactionList}
 */
proto.CostReportData.prototype.getTransactionResults = function() {
  return /** @type{?proto.TransactionList} */ (
    jspb.Message.getWrapperField(this, transaction_pb.TransactionList, 1));
};


/**
 * @param {?proto.TransactionList|undefined} value
 * @return {!proto.CostReportData} returns this
*/
proto.CostReportData.prototype.setTransactionResults = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportData} returns this
 */
proto.CostReportData.prototype.clearTransactionResults = function() {
  return this.setTransactionResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportData.prototype.hasTransactionResults = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TimesheetLineList timesheet_results = 2;
 * @return {?proto.TimesheetLineList}
 */
proto.CostReportData.prototype.getTimesheetResults = function() {
  return /** @type{?proto.TimesheetLineList} */ (
    jspb.Message.getWrapperField(this, timesheet_line_pb.TimesheetLineList, 2));
};


/**
 * @param {?proto.TimesheetLineList|undefined} value
 * @return {!proto.CostReportData} returns this
*/
proto.CostReportData.prototype.setTimesheetResults = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportData} returns this
 */
proto.CostReportData.prototype.clearTimesheetResults = function() {
  return this.setTimesheetResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportData.prototype.hasTimesheetResults = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PerDiemList per_diem_results = 3;
 * @return {?proto.PerDiemList}
 */
proto.CostReportData.prototype.getPerDiemResults = function() {
  return /** @type{?proto.PerDiemList} */ (
    jspb.Message.getWrapperField(this, perdiem_pb.PerDiemList, 3));
};


/**
 * @param {?proto.PerDiemList|undefined} value
 * @return {!proto.CostReportData} returns this
*/
proto.CostReportData.prototype.setPerDiemResults = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportData} returns this
 */
proto.CostReportData.prototype.clearPerDiemResults = function() {
  return this.setPerDiemResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportData.prototype.hasPerDiemResults = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TaskList task_results = 4;
 * @return {?proto.TaskList}
 */
proto.CostReportData.prototype.getTaskResults = function() {
  return /** @type{?proto.TaskList} */ (
    jspb.Message.getWrapperField(this, task_pb.TaskList, 4));
};


/**
 * @param {?proto.TaskList|undefined} value
 * @return {!proto.CostReportData} returns this
*/
proto.CostReportData.prototype.setTaskResults = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportData} returns this
 */
proto.CostReportData.prototype.clearTaskResults = function() {
  return this.setTaskResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportData.prototype.hasTaskResults = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TripList trip_results = 5;
 * @return {?proto.TripList}
 */
proto.CostReportData.prototype.getTripResults = function() {
  return /** @type{?proto.TripList} */ (
    jspb.Message.getWrapperField(this, perdiem_pb.TripList, 5));
};


/**
 * @param {?proto.TripList|undefined} value
 * @return {!proto.CostReportData} returns this
*/
proto.CostReportData.prototype.setTripResults = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportData} returns this
 */
proto.CostReportData.prototype.clearTripResults = function() {
  return this.setTripResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportData.prototype.hasTripResults = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Event event_result = 6;
 * @return {?proto.Event}
 */
proto.CostReportData.prototype.getEventResult = function() {
  return /** @type{?proto.Event} */ (
    jspb.Message.getWrapperField(this, proto.Event, 6));
};


/**
 * @param {?proto.Event|undefined} value
 * @return {!proto.CostReportData} returns this
*/
proto.CostReportData.prototype.setEventResult = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportData} returns this
 */
proto.CostReportData.prototype.clearEventResult = function() {
  return this.setEventResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportData.prototype.hasEventResult = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostReportReq.prototype.toObject = function(opt_includeInstance) {
  return proto.CostReportReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostReportReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    timesheetReq: (f = msg.getTimesheetReq()) && timesheet_line_pb.TimesheetLine.toObject(includeInstance, f),
    perdiemReq: (f = msg.getPerdiemReq()) && perdiem_pb.PerDiem.toObject(includeInstance, f),
    taskReq: (f = msg.getTaskReq()) && task_pb.Task.toObject(includeInstance, f),
    tripReq: (f = msg.getTripReq()) && perdiem_pb.Trip.toObject(includeInstance, f),
    transactionReq: (f = msg.getTransactionReq()) && transaction_pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostReportReq}
 */
proto.CostReportReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostReportReq;
  return proto.CostReportReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostReportReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostReportReq}
 */
proto.CostReportReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new timesheet_line_pb.TimesheetLine;
      reader.readMessage(value,timesheet_line_pb.TimesheetLine.deserializeBinaryFromReader);
      msg.setTimesheetReq(value);
      break;
    case 2:
      var value = new perdiem_pb.PerDiem;
      reader.readMessage(value,perdiem_pb.PerDiem.deserializeBinaryFromReader);
      msg.setPerdiemReq(value);
      break;
    case 3:
      var value = new task_pb.Task;
      reader.readMessage(value,task_pb.Task.deserializeBinaryFromReader);
      msg.setTaskReq(value);
      break;
    case 4:
      var value = new perdiem_pb.Trip;
      reader.readMessage(value,perdiem_pb.Trip.deserializeBinaryFromReader);
      msg.setTripReq(value);
      break;
    case 5:
      var value = new transaction_pb.Transaction;
      reader.readMessage(value,transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.setTransactionReq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostReportReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostReportReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostReportReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimesheetReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      timesheet_line_pb.TimesheetLine.serializeBinaryToWriter
    );
  }
  f = message.getPerdiemReq();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      perdiem_pb.PerDiem.serializeBinaryToWriter
    );
  }
  f = message.getTaskReq();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      task_pb.Task.serializeBinaryToWriter
    );
  }
  f = message.getTripReq();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      perdiem_pb.Trip.serializeBinaryToWriter
    );
  }
  f = message.getTransactionReq();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimesheetLine timesheet_req = 1;
 * @return {?proto.TimesheetLine}
 */
proto.CostReportReq.prototype.getTimesheetReq = function() {
  return /** @type{?proto.TimesheetLine} */ (
    jspb.Message.getWrapperField(this, timesheet_line_pb.TimesheetLine, 1));
};


/**
 * @param {?proto.TimesheetLine|undefined} value
 * @return {!proto.CostReportReq} returns this
*/
proto.CostReportReq.prototype.setTimesheetReq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportReq} returns this
 */
proto.CostReportReq.prototype.clearTimesheetReq = function() {
  return this.setTimesheetReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportReq.prototype.hasTimesheetReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PerDiem perDiem_req = 2;
 * @return {?proto.PerDiem}
 */
proto.CostReportReq.prototype.getPerdiemReq = function() {
  return /** @type{?proto.PerDiem} */ (
    jspb.Message.getWrapperField(this, perdiem_pb.PerDiem, 2));
};


/**
 * @param {?proto.PerDiem|undefined} value
 * @return {!proto.CostReportReq} returns this
*/
proto.CostReportReq.prototype.setPerdiemReq = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportReq} returns this
 */
proto.CostReportReq.prototype.clearPerdiemReq = function() {
  return this.setPerdiemReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportReq.prototype.hasPerdiemReq = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Task task_req = 3;
 * @return {?proto.Task}
 */
proto.CostReportReq.prototype.getTaskReq = function() {
  return /** @type{?proto.Task} */ (
    jspb.Message.getWrapperField(this, task_pb.Task, 3));
};


/**
 * @param {?proto.Task|undefined} value
 * @return {!proto.CostReportReq} returns this
*/
proto.CostReportReq.prototype.setTaskReq = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportReq} returns this
 */
proto.CostReportReq.prototype.clearTaskReq = function() {
  return this.setTaskReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportReq.prototype.hasTaskReq = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Trip trip_req = 4;
 * @return {?proto.Trip}
 */
proto.CostReportReq.prototype.getTripReq = function() {
  return /** @type{?proto.Trip} */ (
    jspb.Message.getWrapperField(this, perdiem_pb.Trip, 4));
};


/**
 * @param {?proto.Trip|undefined} value
 * @return {!proto.CostReportReq} returns this
*/
proto.CostReportReq.prototype.setTripReq = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportReq} returns this
 */
proto.CostReportReq.prototype.clearTripReq = function() {
  return this.setTripReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportReq.prototype.hasTripReq = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Transaction transaction_req = 5;
 * @return {?proto.Transaction}
 */
proto.CostReportReq.prototype.getTransactionReq = function() {
  return /** @type{?proto.Transaction} */ (
    jspb.Message.getWrapperField(this, transaction_pb.Transaction, 5));
};


/**
 * @param {?proto.Transaction|undefined} value
 * @return {!proto.CostReportReq} returns this
*/
proto.CostReportReq.prototype.setTransactionReq = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportReq} returns this
 */
proto.CostReportReq.prototype.clearTransactionReq = function() {
  return this.setTransactionReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportReq.prototype.hasTransactionReq = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CostReportInfo.repeatedFields_ = [44,47,48];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostReportInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.CostReportInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostReportInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txnId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    perDiemId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    timeStarted: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timeFinished: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transactionDescription: jspb.Message.getFieldWithDefault(msg, 7, ""),
    perDiemMealsOnly: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    transactionNotes: jspb.Message.getFieldWithDefault(msg, 10, ""),
    departmentId: jspb.Message.getFieldWithDefault(msg, 11, 0),
    ownerId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    vendor: jspb.Message.getFieldWithDefault(msg, 13, ""),
    departmentName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    ownerName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    dateStarted: jspb.Message.getFieldWithDefault(msg, 16, ""),
    dateSubmitted: jspb.Message.getFieldWithDefault(msg, 17, ""),
    dateApproved: jspb.Message.getFieldWithDefault(msg, 18, ""),
    perDiemApprovedById: jspb.Message.getFieldWithDefault(msg, 19, ""),
    perDiemDepartmentId: jspb.Message.getFieldWithDefault(msg, 20, 0),
    perDiemDepartmentName: jspb.Message.getFieldWithDefault(msg, 21, ""),
    perDiemOwnerId: jspb.Message.getFieldWithDefault(msg, 22, ""),
    perDiemOwnerName: jspb.Message.getFieldWithDefault(msg, 23, ""),
    department: (f = msg.getDepartment()) && transaction_pb.TxnDepartment.toObject(includeInstance, f),
    departmentString: jspb.Message.getFieldWithDefault(msg, 25, ""),
    costCenterId: jspb.Message.getFieldWithDefault(msg, 26, 0),
    costCenterString: jspb.Message.getFieldWithDefault(msg, 27, ""),
    costCenter: (f = msg.getCostCenter()) && transaction_account_pb.TransactionAccount.toObject(includeInstance, f),
    perDiemDepartment: (f = msg.getPerDiemDepartment()) && timesheet_department_pb.TimesheetDepartment.toObject(includeInstance, f),
    perDiemDepartmentString: jspb.Message.getFieldWithDefault(msg, 30, ""),
    perDiemApprovedByName: jspb.Message.getFieldWithDefault(msg, 31, ""),
    perDiemRowDateString: jspb.Message.getFieldWithDefault(msg, 32, ""),
    perDiemRowZipCode: jspb.Message.getFieldWithDefault(msg, 33, ""),
    perDiemRowNotes: jspb.Message.getFieldWithDefault(msg, 34, ""),
    perDiemRowId: jspb.Message.getFieldWithDefault(msg, 35, 0),
    perDiemRowServiceCallId: jspb.Message.getFieldWithDefault(msg, 36, 0),
    timesheetNotes: jspb.Message.getFieldWithDefault(msg, 37, ""),
    timesheetAdminApprovalId: jspb.Message.getFieldWithDefault(msg, 38, 0),
    timesheetBriefDescription: jspb.Message.getFieldWithDefault(msg, 39, ""),
    timesheetDepartmentId: jspb.Message.getFieldWithDefault(msg, 40, 0),
    timesheetDepartmentName: jspb.Message.getFieldWithDefault(msg, 41, ""),
    timesheetAdminApprovalName: jspb.Message.getFieldWithDefault(msg, 42, ""),
    perDiem: (f = msg.getPerDiem()) && perdiem_pb.PerDiem.toObject(includeInstance, f),
    timesheetsList: jspb.Message.toObjectList(msg.getTimesheetsList(),
    timesheet_line_pb.TimesheetLine.toObject, includeInstance),
    hoursWorked: jspb.Message.getFloatingPointFieldWithDefault(msg, 45, 0.0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 46, ""),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    transaction_pb.Transaction.toObject, includeInstance),
    perDiemsList: jspb.Message.toObjectList(msg.getPerDiemsList(),
    perdiem_pb.PerDiem.toObject, includeInstance),
    perDiemRow: (f = msg.getPerDiemRow()) && perdiem_pb.PerDiemRow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostReportInfo}
 */
proto.CostReportInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostReportInfo;
  return proto.CostReportInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostReportInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostReportInfo}
 */
proto.CostReportInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTxnId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerDiemId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeStarted(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeFinished(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionDescription(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPerDiemMealsOnly(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionNotes(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOwnerId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendor(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateStarted(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateSubmitted(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateApproved(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemApprovedById(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerDiemDepartmentId(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemDepartmentName(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemOwnerId(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemOwnerName(value);
      break;
    case 24:
      var value = new transaction_pb.TxnDepartment;
      reader.readMessage(value,transaction_pb.TxnDepartment.deserializeBinaryFromReader);
      msg.setDepartment(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentString(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCostCenterId(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostCenterString(value);
      break;
    case 28:
      var value = new transaction_account_pb.TransactionAccount;
      reader.readMessage(value,transaction_account_pb.TransactionAccount.deserializeBinaryFromReader);
      msg.setCostCenter(value);
      break;
    case 29:
      var value = new timesheet_department_pb.TimesheetDepartment;
      reader.readMessage(value,timesheet_department_pb.TimesheetDepartment.deserializeBinaryFromReader);
      msg.setPerDiemDepartment(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemDepartmentString(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemApprovedByName(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemRowDateString(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemRowZipCode(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerDiemRowNotes(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerDiemRowId(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerDiemRowServiceCallId(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimesheetNotes(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimesheetAdminApprovalId(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimesheetBriefDescription(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimesheetDepartmentId(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimesheetDepartmentName(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimesheetAdminApprovalName(value);
      break;
    case 43:
      var value = new perdiem_pb.PerDiem;
      reader.readMessage(value,perdiem_pb.PerDiem.deserializeBinaryFromReader);
      msg.setPerDiem(value);
      break;
    case 44:
      var value = new timesheet_line_pb.TimesheetLine;
      reader.readMessage(value,timesheet_line_pb.TimesheetLine.deserializeBinaryFromReader);
      msg.addTimesheets(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHoursWorked(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 47:
      var value = new transaction_pb.Transaction;
      reader.readMessage(value,transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    case 48:
      var value = new perdiem_pb.PerDiem;
      reader.readMessage(value,perdiem_pb.PerDiem.deserializeBinaryFromReader);
      msg.addPerDiems(value);
      break;
    case 49:
      var value = new perdiem_pb.PerDiemRow;
      reader.readMessage(value,perdiem_pb.PerDiemRow.deserializeBinaryFromReader);
      msg.setPerDiemRow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostReportInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostReportInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostReportInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTxnId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPerDiemId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTimeStarted();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimeFinished();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransactionDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPerDiemMealsOnly();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getTransactionNotes();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getOwnerId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getVendor();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDepartmentName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getOwnerName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getDateStarted();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getDateSubmitted();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDateApproved();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getPerDiemApprovedById();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPerDiemDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getPerDiemDepartmentName();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getPerDiemOwnerId();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getPerDiemOwnerName();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getDepartment();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      transaction_pb.TxnDepartment.serializeBinaryToWriter
    );
  }
  f = message.getDepartmentString();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getCostCenterId();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getCostCenterString();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCostCenter();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      transaction_account_pb.TransactionAccount.serializeBinaryToWriter
    );
  }
  f = message.getPerDiemDepartment();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      timesheet_department_pb.TimesheetDepartment.serializeBinaryToWriter
    );
  }
  f = message.getPerDiemDepartmentString();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getPerDiemApprovedByName();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getPerDiemRowDateString();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getPerDiemRowZipCode();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getPerDiemRowNotes();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getPerDiemRowId();
  if (f !== 0) {
    writer.writeInt32(
      35,
      f
    );
  }
  f = message.getPerDiemRowServiceCallId();
  if (f !== 0) {
    writer.writeInt32(
      36,
      f
    );
  }
  f = message.getTimesheetNotes();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getTimesheetAdminApprovalId();
  if (f !== 0) {
    writer.writeInt32(
      38,
      f
    );
  }
  f = message.getTimesheetBriefDescription();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getTimesheetDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      40,
      f
    );
  }
  f = message.getTimesheetDepartmentName();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getTimesheetAdminApprovalName();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getPerDiem();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      perdiem_pb.PerDiem.serializeBinaryToWriter
    );
  }
  f = message.getTimesheetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      44,
      f,
      timesheet_line_pb.TimesheetLine.serializeBinaryToWriter
    );
  }
  f = message.getHoursWorked();
  if (f !== 0.0) {
    writer.writeDouble(
      45,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      47,
      f,
      transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getPerDiemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      48,
      f,
      perdiem_pb.PerDiem.serializeBinaryToWriter
    );
  }
  f = message.getPerDiemRow();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      perdiem_pb.PerDiemRow.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 job_id = 1;
 * @return {number}
 */
proto.CostReportInfo.prototype.getJobId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setJobId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 txn_id = 2;
 * @return {number}
 */
proto.CostReportInfo.prototype.getTxnId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTxnId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 per_diem_id = 3;
 * @return {number}
 */
proto.CostReportInfo.prototype.getPerDiemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string time_started = 5;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimeStarted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimeStarted = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string time_finished = 6;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimeFinished = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimeFinished = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string transaction_description = 7;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTransactionDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTransactionDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool per_diem_meals_only = 8;
 * @return {boolean}
 */
proto.CostReportInfo.prototype.getPerDiemMealsOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemMealsOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional double amount = 9;
 * @return {number}
 */
proto.CostReportInfo.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string transaction_notes = 10;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTransactionNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTransactionNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 department_id = 11;
 * @return {number}
 */
proto.CostReportInfo.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 owner_id = 12;
 * @return {number}
 */
proto.CostReportInfo.prototype.getOwnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string vendor = 13;
 * @return {string}
 */
proto.CostReportInfo.prototype.getVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setVendor = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string department_name = 14;
 * @return {string}
 */
proto.CostReportInfo.prototype.getDepartmentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setDepartmentName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string owner_name = 15;
 * @return {string}
 */
proto.CostReportInfo.prototype.getOwnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setOwnerName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string date_started = 16;
 * @return {string}
 */
proto.CostReportInfo.prototype.getDateStarted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setDateStarted = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string date_submitted = 17;
 * @return {string}
 */
proto.CostReportInfo.prototype.getDateSubmitted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setDateSubmitted = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string date_approved = 18;
 * @return {string}
 */
proto.CostReportInfo.prototype.getDateApproved = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setDateApproved = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string per_diem_approved_by_id = 19;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemApprovedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemApprovedById = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional int32 per_diem_department_id = 20;
 * @return {number}
 */
proto.CostReportInfo.prototype.getPerDiemDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string per_diem_department_name = 21;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemDepartmentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemDepartmentName = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string per_diem_owner_id = 22;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string per_diem_owner_name = 23;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemOwnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemOwnerName = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional TxnDepartment department = 24;
 * @return {?proto.TxnDepartment}
 */
proto.CostReportInfo.prototype.getDepartment = function() {
  return /** @type{?proto.TxnDepartment} */ (
    jspb.Message.getWrapperField(this, transaction_pb.TxnDepartment, 24));
};


/**
 * @param {?proto.TxnDepartment|undefined} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setDepartment = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearDepartment = function() {
  return this.setDepartment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportInfo.prototype.hasDepartment = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string department_string = 25;
 * @return {string}
 */
proto.CostReportInfo.prototype.getDepartmentString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setDepartmentString = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int32 cost_center_id = 26;
 * @return {number}
 */
proto.CostReportInfo.prototype.getCostCenterId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setCostCenterId = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string cost_center_string = 27;
 * @return {string}
 */
proto.CostReportInfo.prototype.getCostCenterString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setCostCenterString = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional TransactionAccount cost_center = 28;
 * @return {?proto.TransactionAccount}
 */
proto.CostReportInfo.prototype.getCostCenter = function() {
  return /** @type{?proto.TransactionAccount} */ (
    jspb.Message.getWrapperField(this, transaction_account_pb.TransactionAccount, 28));
};


/**
 * @param {?proto.TransactionAccount|undefined} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setCostCenter = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearCostCenter = function() {
  return this.setCostCenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportInfo.prototype.hasCostCenter = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional TimesheetDepartment per_diem_department = 29;
 * @return {?proto.TimesheetDepartment}
 */
proto.CostReportInfo.prototype.getPerDiemDepartment = function() {
  return /** @type{?proto.TimesheetDepartment} */ (
    jspb.Message.getWrapperField(this, timesheet_department_pb.TimesheetDepartment, 29));
};


/**
 * @param {?proto.TimesheetDepartment|undefined} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setPerDiemDepartment = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearPerDiemDepartment = function() {
  return this.setPerDiemDepartment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportInfo.prototype.hasPerDiemDepartment = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional string per_diem_department_string = 30;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemDepartmentString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemDepartmentString = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string per_diem_approved_by_name = 31;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemApprovedByName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemApprovedByName = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string per_diem_row_date_string = 32;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemRowDateString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemRowDateString = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string per_diem_row_zip_code = 33;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemRowZipCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemRowZipCode = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string per_diem_row_notes = 34;
 * @return {string}
 */
proto.CostReportInfo.prototype.getPerDiemRowNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemRowNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional int32 per_diem_row_id = 35;
 * @return {number}
 */
proto.CostReportInfo.prototype.getPerDiemRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemRowId = function(value) {
  return jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional int32 per_diem_row_service_call_id = 36;
 * @return {number}
 */
proto.CostReportInfo.prototype.getPerDiemRowServiceCallId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setPerDiemRowServiceCallId = function(value) {
  return jspb.Message.setProto3IntField(this, 36, value);
};


/**
 * optional string timesheet_notes = 37;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimesheetNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimesheetNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional int32 timesheet_admin_approval_id = 38;
 * @return {number}
 */
proto.CostReportInfo.prototype.getTimesheetAdminApprovalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimesheetAdminApprovalId = function(value) {
  return jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * optional string timesheet_brief_description = 39;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimesheetBriefDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimesheetBriefDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional int32 timesheet_department_id = 40;
 * @return {number}
 */
proto.CostReportInfo.prototype.getTimesheetDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimesheetDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 40, value);
};


/**
 * optional string timesheet_department_name = 41;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimesheetDepartmentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimesheetDepartmentName = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string timesheet_admin_approval_name = 42;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimesheetAdminApprovalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimesheetAdminApprovalName = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional PerDiem per_diem = 43;
 * @return {?proto.PerDiem}
 */
proto.CostReportInfo.prototype.getPerDiem = function() {
  return /** @type{?proto.PerDiem} */ (
    jspb.Message.getWrapperField(this, perdiem_pb.PerDiem, 43));
};


/**
 * @param {?proto.PerDiem|undefined} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setPerDiem = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearPerDiem = function() {
  return this.setPerDiem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportInfo.prototype.hasPerDiem = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * repeated TimesheetLine timesheets = 44;
 * @return {!Array<!proto.TimesheetLine>}
 */
proto.CostReportInfo.prototype.getTimesheetsList = function() {
  return /** @type{!Array<!proto.TimesheetLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, timesheet_line_pb.TimesheetLine, 44));
};


/**
 * @param {!Array<!proto.TimesheetLine>} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setTimesheetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 44, value);
};


/**
 * @param {!proto.TimesheetLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TimesheetLine}
 */
proto.CostReportInfo.prototype.addTimesheets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 44, opt_value, proto.TimesheetLine, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearTimesheetsList = function() {
  return this.setTimesheetsList([]);
};


/**
 * optional double hours_worked = 45;
 * @return {number}
 */
proto.CostReportInfo.prototype.getHoursWorked = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 45, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setHoursWorked = function(value) {
  return jspb.Message.setProto3FloatField(this, 45, value);
};


/**
 * optional string timestamp = 46;
 * @return {string}
 */
proto.CostReportInfo.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * repeated Transaction transactions = 47;
 * @return {!Array<!proto.Transaction>}
 */
proto.CostReportInfo.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, transaction_pb.Transaction, 47));
};


/**
 * @param {!Array<!proto.Transaction>} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 47, value);
};


/**
 * @param {!proto.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Transaction}
 */
proto.CostReportInfo.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 47, opt_value, proto.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};


/**
 * repeated PerDiem per_diems = 48;
 * @return {!Array<!proto.PerDiem>}
 */
proto.CostReportInfo.prototype.getPerDiemsList = function() {
  return /** @type{!Array<!proto.PerDiem>} */ (
    jspb.Message.getRepeatedWrapperField(this, perdiem_pb.PerDiem, 48));
};


/**
 * @param {!Array<!proto.PerDiem>} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setPerDiemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 48, value);
};


/**
 * @param {!proto.PerDiem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PerDiem}
 */
proto.CostReportInfo.prototype.addPerDiems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 48, opt_value, proto.PerDiem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearPerDiemsList = function() {
  return this.setPerDiemsList([]);
};


/**
 * optional PerDiemRow per_diem_row = 49;
 * @return {?proto.PerDiemRow}
 */
proto.CostReportInfo.prototype.getPerDiemRow = function() {
  return /** @type{?proto.PerDiemRow} */ (
    jspb.Message.getWrapperField(this, perdiem_pb.PerDiemRow, 49));
};


/**
 * @param {?proto.PerDiemRow|undefined} value
 * @return {!proto.CostReportInfo} returns this
*/
proto.CostReportInfo.prototype.setPerDiemRow = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostReportInfo} returns this
 */
proto.CostReportInfo.prototype.clearPerDiemRow = function() {
  return this.setPerDiemRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostReportInfo.prototype.hasPerDiemRow = function() {
  return jspb.Message.getField(this, 49) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CostReportInfoList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostReportInfoList.prototype.toObject = function(opt_includeInstance) {
  return proto.CostReportInfoList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostReportInfoList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportInfoList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.CostReportInfo.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostReportInfoList}
 */
proto.CostReportInfoList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostReportInfoList;
  return proto.CostReportInfoList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostReportInfoList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostReportInfoList}
 */
proto.CostReportInfoList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CostReportInfo;
      reader.readMessage(value,proto.CostReportInfo.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostReportInfoList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostReportInfoList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostReportInfoList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostReportInfoList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CostReportInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated CostReportInfo results = 1;
 * @return {!Array<!proto.CostReportInfo>}
 */
proto.CostReportInfoList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.CostReportInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CostReportInfo, 1));
};


/**
 * @param {!Array<!proto.CostReportInfo>} value
 * @return {!proto.CostReportInfoList} returns this
*/
proto.CostReportInfoList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CostReportInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CostReportInfo}
 */
proto.CostReportInfoList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CostReportInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CostReportInfoList} returns this
 */
proto.CostReportInfoList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.CostReportInfoList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostReportInfoList} returns this
 */
proto.CostReportInfoList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto);
