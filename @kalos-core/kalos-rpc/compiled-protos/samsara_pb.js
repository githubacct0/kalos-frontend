// source: samsara.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.CarrierSettings', null, global);
goog.exportSymbol('proto.ELDSettings', null, global);
goog.exportSymbol('proto.SamsaraAddress', null, global);
goog.exportSymbol('proto.SamsaraAddressResponse', null, global);
goog.exportSymbol('proto.SamsaraAddressResponseSingular', null, global);
goog.exportSymbol('proto.SamsaraAttribute', null, global);
goog.exportSymbol('proto.SamsaraCircularFence', null, global);
goog.exportSymbol('proto.SamsaraContact', null, global);
goog.exportSymbol('proto.SamsaraDriver', null, global);
goog.exportSymbol('proto.SamsaraDriverRuleset', null, global);
goog.exportSymbol('proto.SamsaraDriversResponse', null, global);
goog.exportSymbol('proto.SamsaraGeofence', null, global);
goog.exportSymbol('proto.SamsaraLocationEvent', null, global);
goog.exportSymbol('proto.SamsaraLocationResponse', null, global);
goog.exportSymbol('proto.SamsaraPagination', null, global);
goog.exportSymbol('proto.SamsaraReverseGeo', null, global);
goog.exportSymbol('proto.SamsaraTag', null, global);
goog.exportSymbol('proto.SamsaraVehicle', null, global);
goog.exportSymbol('proto.SamsaraVehicleLocation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraDriversResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SamsaraDriversResponse.repeatedFields_, null);
};
goog.inherits(proto.SamsaraDriversResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraDriversResponse.displayName = 'proto.SamsaraDriversResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraDriver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SamsaraDriver.repeatedFields_, null);
};
goog.inherits(proto.SamsaraDriver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraDriver.displayName = 'proto.SamsaraDriver';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SamsaraLocationResponse.repeatedFields_, null);
};
goog.inherits(proto.SamsaraLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraLocationResponse.displayName = 'proto.SamsaraLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraVehicleLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraVehicleLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraVehicleLocation.displayName = 'proto.SamsaraVehicleLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraLocationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraLocationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraLocationEvent.displayName = 'proto.SamsaraLocationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraReverseGeo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraReverseGeo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraReverseGeo.displayName = 'proto.SamsaraReverseGeo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SamsaraAddressResponse.repeatedFields_, null);
};
goog.inherits(proto.SamsaraAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraAddressResponse.displayName = 'proto.SamsaraAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraAddressResponseSingular = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraAddressResponseSingular, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraAddressResponseSingular.displayName = 'proto.SamsaraAddressResponseSingular';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SamsaraAddress.repeatedFields_, null);
};
goog.inherits(proto.SamsaraAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraAddress.displayName = 'proto.SamsaraAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraGeofence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraGeofence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraGeofence.displayName = 'proto.SamsaraGeofence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraCircularFence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraCircularFence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraCircularFence.displayName = 'proto.SamsaraCircularFence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraContact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraContact.displayName = 'proto.SamsaraContact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraPagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraPagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraPagination.displayName = 'proto.SamsaraPagination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraDriverRuleset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraDriverRuleset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraDriverRuleset.displayName = 'proto.SamsaraDriverRuleset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraTag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraTag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraTag.displayName = 'proto.SamsaraTag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraVehicle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SamsaraVehicle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraVehicle.displayName = 'proto.SamsaraVehicle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SamsaraAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SamsaraAttribute.repeatedFields_, null);
};
goog.inherits(proto.SamsaraAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SamsaraAttribute.displayName = 'proto.SamsaraAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CarrierSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CarrierSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CarrierSettings.displayName = 'proto.CarrierSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ELDSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ELDSettings.repeatedFields_, null);
};
goog.inherits(proto.ELDSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ELDSettings.displayName = 'proto.ELDSettings';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SamsaraDriversResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraDriversResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraDriversResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraDriversResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraDriversResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.SamsaraDriver.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto.SamsaraPagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraDriversResponse}
 */
proto.SamsaraDriversResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraDriversResponse;
  return proto.SamsaraDriversResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraDriversResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraDriversResponse}
 */
proto.SamsaraDriversResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SamsaraDriver;
      reader.readMessage(value,proto.SamsaraDriver.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new proto.SamsaraPagination;
      reader.readMessage(value,proto.SamsaraPagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraDriversResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraDriversResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraDriversResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraDriversResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SamsaraDriver.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.SamsaraPagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SamsaraDriver data = 1;
 * @return {!Array<!proto.SamsaraDriver>}
 */
proto.SamsaraDriversResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.SamsaraDriver>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraDriver, 1));
};


/**
 * @param {!Array<!proto.SamsaraDriver>} value
 * @return {!proto.SamsaraDriversResponse} returns this
*/
proto.SamsaraDriversResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SamsaraDriver=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraDriver}
 */
proto.SamsaraDriversResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SamsaraDriver, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraDriversResponse} returns this
 */
proto.SamsaraDriversResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional SamsaraPagination pagination = 2;
 * @return {?proto.SamsaraPagination}
 */
proto.SamsaraDriversResponse.prototype.getPagination = function() {
  return /** @type{?proto.SamsaraPagination} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraPagination, 2));
};


/**
 * @param {?proto.SamsaraPagination|undefined} value
 * @return {!proto.SamsaraDriversResponse} returns this
*/
proto.SamsaraDriversResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraDriversResponse} returns this
 */
proto.SamsaraDriversResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraDriversResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SamsaraDriver.repeatedFields_ = [1,24,29];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraDriver.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraDriver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraDriver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraDriver.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.SamsaraAttribute.toObject, includeInstance),
    carrierSettings: (f = msg.getCarrierSettings()) && proto.CarrierSettings.toObject(includeInstance, f),
    createdAtTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currentIdCardCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    driverActivationStatus: jspb.Message.getFieldWithDefault(msg, 5, ""),
    eldAdverseWeatherExemptionEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    eldBigDayExemptionEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    eldDayStartHour: jspb.Message.getFieldWithDefault(msg, 8, 0),
    eldExempt: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    eldExemptReason: jspb.Message.getFieldWithDefault(msg, 10, ""),
    eldPcEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    eldSettings: (f = msg.getEldSettings()) && proto.ELDSettings.toObject(includeInstance, f),
    eldYmEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    externalIdsMap: (f = msg.getExternalIdsMap()) ? f.toObject(includeInstance, undefined) : [],
    id: jspb.Message.getFieldWithDefault(msg, 15, ""),
    isDeactivated: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    licenseNumber: jspb.Message.getFieldWithDefault(msg, 17, ""),
    licenseState: jspb.Message.getFieldWithDefault(msg, 18, ""),
    locale: jspb.Message.getFieldWithDefault(msg, 19, ""),
    name: jspb.Message.getFieldWithDefault(msg, 20, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 21, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 22, ""),
    staticAssignedVehicle: (f = msg.getStaticAssignedVehicle()) && proto.SamsaraVehicle.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.SamsaraTag.toObject, includeInstance),
    timezone: jspb.Message.getFieldWithDefault(msg, 25, ""),
    updatedAtTime: jspb.Message.getFieldWithDefault(msg, 26, ""),
    usDriverRulesetOverride: (f = msg.getUsDriverRulesetOverride()) && proto.SamsaraDriverRuleset.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 28, ""),
    vehicleGroupTagList: jspb.Message.toObjectList(msg.getVehicleGroupTagList(),
    proto.SamsaraTag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraDriver}
 */
proto.SamsaraDriver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraDriver;
  return proto.SamsaraDriver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraDriver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraDriver}
 */
proto.SamsaraDriver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SamsaraAttribute;
      reader.readMessage(value,proto.SamsaraAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 2:
      var value = new proto.CarrierSettings;
      reader.readMessage(value,proto.CarrierSettings.deserializeBinaryFromReader);
      msg.setCarrierSettings(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAtTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentIdCardCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverActivationStatus(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEldAdverseWeatherExemptionEnabled(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEldBigDayExemptionEnabled(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEldDayStartHour(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEldExempt(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEldExemptReason(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEldPcEnabled(value);
      break;
    case 12:
      var value = new proto.ELDSettings;
      reader.readMessage(value,proto.ELDSettings.deserializeBinaryFromReader);
      msg.setEldSettings(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEldYmEnabled(value);
      break;
    case 14:
      var value = msg.getExternalIdsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeactivated(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseNumber(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseState(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 23:
      var value = new proto.SamsaraVehicle;
      reader.readMessage(value,proto.SamsaraVehicle.deserializeBinaryFromReader);
      msg.setStaticAssignedVehicle(value);
      break;
    case 24:
      var value = new proto.SamsaraTag;
      reader.readMessage(value,proto.SamsaraTag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAtTime(value);
      break;
    case 27:
      var value = new proto.SamsaraDriverRuleset;
      reader.readMessage(value,proto.SamsaraDriverRuleset.deserializeBinaryFromReader);
      msg.setUsDriverRulesetOverride(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 29:
      var value = new proto.SamsaraTag;
      reader.readMessage(value,proto.SamsaraTag.deserializeBinaryFromReader);
      msg.addVehicleGroupTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraDriver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraDriver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraDriver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraDriver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SamsaraAttribute.serializeBinaryToWriter
    );
  }
  f = message.getCarrierSettings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CarrierSettings.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAtTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrentIdCardCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDriverActivationStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEldAdverseWeatherExemptionEnabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getEldBigDayExemptionEnabled();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getEldDayStartHour();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getEldExempt();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getEldExemptReason();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEldPcEnabled();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getEldSettings();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ELDSettings.serializeBinaryToWriter
    );
  }
  f = message.getEldYmEnabled();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getExternalIdsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getIsDeactivated();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getLicenseNumber();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLicenseState();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getStaticAssignedVehicle();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.SamsaraVehicle.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto.SamsaraTag.serializeBinaryToWriter
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getUpdatedAtTime();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getUsDriverRulesetOverride();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.SamsaraDriverRuleset.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getVehicleGroupTagList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      29,
      f,
      proto.SamsaraTag.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SamsaraAttribute attributes = 1;
 * @return {!Array<!proto.SamsaraAttribute>}
 */
proto.SamsaraDriver.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.SamsaraAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraAttribute, 1));
};


/**
 * @param {!Array<!proto.SamsaraAttribute>} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SamsaraAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAttribute}
 */
proto.SamsaraDriver.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SamsaraAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional CarrierSettings carrier_settings = 2;
 * @return {?proto.CarrierSettings}
 */
proto.SamsaraDriver.prototype.getCarrierSettings = function() {
  return /** @type{?proto.CarrierSettings} */ (
    jspb.Message.getWrapperField(this, proto.CarrierSettings, 2));
};


/**
 * @param {?proto.CarrierSettings|undefined} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setCarrierSettings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearCarrierSettings = function() {
  return this.setCarrierSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.hasCarrierSettings = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string created_at_time = 3;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getCreatedAtTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setCreatedAtTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string current_id_card_code = 4;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getCurrentIdCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setCurrentIdCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string driver_activation_status = 5;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getDriverActivationStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setDriverActivationStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool eld_adverse_weather_exemption_enabled = 6;
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.getEldAdverseWeatherExemptionEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldAdverseWeatherExemptionEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool eld_big_day_exemption_enabled = 7;
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.getEldBigDayExemptionEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldBigDayExemptionEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 eld_day_start_hour = 8;
 * @return {number}
 */
proto.SamsaraDriver.prototype.getEldDayStartHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldDayStartHour = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool eld_exempt = 9;
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.getEldExempt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldExempt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string eld_exempt_reason = 10;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getEldExemptReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldExemptReason = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool eld_pc_enabled = 11;
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.getEldPcEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldPcEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional ELDSettings eld_settings = 12;
 * @return {?proto.ELDSettings}
 */
proto.SamsaraDriver.prototype.getEldSettings = function() {
  return /** @type{?proto.ELDSettings} */ (
    jspb.Message.getWrapperField(this, proto.ELDSettings, 12));
};


/**
 * @param {?proto.ELDSettings|undefined} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setEldSettings = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearEldSettings = function() {
  return this.setEldSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.hasEldSettings = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool eld_ym_enabled = 13;
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.getEldYmEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setEldYmEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * map<string, string> external_ids = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.SamsaraDriver.prototype.getExternalIdsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearExternalIdsMap = function() {
  this.getExternalIdsMap().clear();
  return this;};


/**
 * optional string id = 15;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool is_deactivated = 16;
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.getIsDeactivated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setIsDeactivated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string license_number = 17;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getLicenseNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setLicenseNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string license_state = 18;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getLicenseState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setLicenseState = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string locale = 19;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setLocale = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string name = 20;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string notes = 21;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string phone = 22;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional SamsaraVehicle static_assigned_vehicle = 23;
 * @return {?proto.SamsaraVehicle}
 */
proto.SamsaraDriver.prototype.getStaticAssignedVehicle = function() {
  return /** @type{?proto.SamsaraVehicle} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraVehicle, 23));
};


/**
 * @param {?proto.SamsaraVehicle|undefined} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setStaticAssignedVehicle = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearStaticAssignedVehicle = function() {
  return this.setStaticAssignedVehicle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.hasStaticAssignedVehicle = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * repeated SamsaraTag tags = 24;
 * @return {!Array<!proto.SamsaraTag>}
 */
proto.SamsaraDriver.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.SamsaraTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraTag, 24));
};


/**
 * @param {!Array<!proto.SamsaraTag>} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.SamsaraTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraTag}
 */
proto.SamsaraDriver.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.SamsaraTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string timezone = 25;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string updated_at_time = 26;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getUpdatedAtTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setUpdatedAtTime = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional SamsaraDriverRuleset us_driver_ruleset_override = 27;
 * @return {?proto.SamsaraDriverRuleset}
 */
proto.SamsaraDriver.prototype.getUsDriverRulesetOverride = function() {
  return /** @type{?proto.SamsaraDriverRuleset} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraDriverRuleset, 27));
};


/**
 * @param {?proto.SamsaraDriverRuleset|undefined} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setUsDriverRulesetOverride = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearUsDriverRulesetOverride = function() {
  return this.setUsDriverRulesetOverride(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraDriver.prototype.hasUsDriverRulesetOverride = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string username = 28;
 * @return {string}
 */
proto.SamsaraDriver.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * repeated SamsaraTag vehicle_group_tag = 29;
 * @return {!Array<!proto.SamsaraTag>}
 */
proto.SamsaraDriver.prototype.getVehicleGroupTagList = function() {
  return /** @type{!Array<!proto.SamsaraTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraTag, 29));
};


/**
 * @param {!Array<!proto.SamsaraTag>} value
 * @return {!proto.SamsaraDriver} returns this
*/
proto.SamsaraDriver.prototype.setVehicleGroupTagList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 29, value);
};


/**
 * @param {!proto.SamsaraTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraTag}
 */
proto.SamsaraDriver.prototype.addVehicleGroupTag = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 29, opt_value, proto.SamsaraTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraDriver} returns this
 */
proto.SamsaraDriver.prototype.clearVehicleGroupTagList = function() {
  return this.setVehicleGroupTagList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SamsaraLocationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.SamsaraVehicleLocation.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto.SamsaraPagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraLocationResponse}
 */
proto.SamsaraLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraLocationResponse;
  return proto.SamsaraLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraLocationResponse}
 */
proto.SamsaraLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SamsaraVehicleLocation;
      reader.readMessage(value,proto.SamsaraVehicleLocation.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new proto.SamsaraPagination;
      reader.readMessage(value,proto.SamsaraPagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SamsaraVehicleLocation.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.SamsaraPagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SamsaraVehicleLocation data = 1;
 * @return {!Array<!proto.SamsaraVehicleLocation>}
 */
proto.SamsaraLocationResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.SamsaraVehicleLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraVehicleLocation, 1));
};


/**
 * @param {!Array<!proto.SamsaraVehicleLocation>} value
 * @return {!proto.SamsaraLocationResponse} returns this
*/
proto.SamsaraLocationResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SamsaraVehicleLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraVehicleLocation}
 */
proto.SamsaraLocationResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SamsaraVehicleLocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraLocationResponse} returns this
 */
proto.SamsaraLocationResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional SamsaraPagination pagination = 2;
 * @return {?proto.SamsaraPagination}
 */
proto.SamsaraLocationResponse.prototype.getPagination = function() {
  return /** @type{?proto.SamsaraPagination} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraPagination, 2));
};


/**
 * @param {?proto.SamsaraPagination|undefined} value
 * @return {!proto.SamsaraLocationResponse} returns this
*/
proto.SamsaraLocationResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraLocationResponse} returns this
 */
proto.SamsaraLocationResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraLocationResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraVehicleLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraVehicleLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraVehicleLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraVehicleLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    location: (f = msg.getLocation()) && proto.SamsaraLocationEvent.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraVehicleLocation}
 */
proto.SamsaraVehicleLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraVehicleLocation;
  return proto.SamsaraVehicleLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraVehicleLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraVehicleLocation}
 */
proto.SamsaraVehicleLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.SamsaraLocationEvent;
      reader.readMessage(value,proto.SamsaraLocationEvent.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraVehicleLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraVehicleLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraVehicleLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraVehicleLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.SamsaraLocationEvent.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.SamsaraVehicleLocation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraVehicleLocation} returns this
 */
proto.SamsaraVehicleLocation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SamsaraLocationEvent location = 2;
 * @return {?proto.SamsaraLocationEvent}
 */
proto.SamsaraVehicleLocation.prototype.getLocation = function() {
  return /** @type{?proto.SamsaraLocationEvent} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraLocationEvent, 2));
};


/**
 * @param {?proto.SamsaraLocationEvent|undefined} value
 * @return {!proto.SamsaraVehicleLocation} returns this
*/
proto.SamsaraVehicleLocation.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraVehicleLocation} returns this
 */
proto.SamsaraVehicleLocation.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraVehicleLocation.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.SamsaraVehicleLocation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraVehicleLocation} returns this
 */
proto.SamsaraVehicleLocation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraLocationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraLocationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraLocationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraLocationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    heading: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    reverseGeo: (f = msg.getReverseGeo()) && proto.SamsaraReverseGeo.toObject(includeInstance, f),
    speed: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    time: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraLocationEvent}
 */
proto.SamsaraLocationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraLocationEvent;
  return proto.SamsaraLocationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraLocationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraLocationEvent}
 */
proto.SamsaraLocationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeading(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 4:
      var value = new proto.SamsaraReverseGeo;
      reader.readMessage(value,proto.SamsaraReverseGeo.deserializeBinaryFromReader);
      msg.setReverseGeo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraLocationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraLocationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraLocationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraLocationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeading();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getReverseGeo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.SamsaraReverseGeo.serializeBinaryToWriter
    );
  }
  f = message.getSpeed();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional double heading = 1;
 * @return {number}
 */
proto.SamsaraLocationEvent.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraLocationEvent} returns this
 */
proto.SamsaraLocationEvent.prototype.setHeading = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double latitude = 2;
 * @return {number}
 */
proto.SamsaraLocationEvent.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraLocationEvent} returns this
 */
proto.SamsaraLocationEvent.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double longitude = 3;
 * @return {number}
 */
proto.SamsaraLocationEvent.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraLocationEvent} returns this
 */
proto.SamsaraLocationEvent.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional SamsaraReverseGeo reverse_geo = 4;
 * @return {?proto.SamsaraReverseGeo}
 */
proto.SamsaraLocationEvent.prototype.getReverseGeo = function() {
  return /** @type{?proto.SamsaraReverseGeo} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraReverseGeo, 4));
};


/**
 * @param {?proto.SamsaraReverseGeo|undefined} value
 * @return {!proto.SamsaraLocationEvent} returns this
*/
proto.SamsaraLocationEvent.prototype.setReverseGeo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraLocationEvent} returns this
 */
proto.SamsaraLocationEvent.prototype.clearReverseGeo = function() {
  return this.setReverseGeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraLocationEvent.prototype.hasReverseGeo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double speed = 5;
 * @return {number}
 */
proto.SamsaraLocationEvent.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraLocationEvent} returns this
 */
proto.SamsaraLocationEvent.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string time = 6;
 * @return {string}
 */
proto.SamsaraLocationEvent.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraLocationEvent} returns this
 */
proto.SamsaraLocationEvent.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraReverseGeo.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraReverseGeo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraReverseGeo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraReverseGeo.toObject = function(includeInstance, msg) {
  var f, obj = {
    formattedLocation: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraReverseGeo}
 */
proto.SamsaraReverseGeo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraReverseGeo;
  return proto.SamsaraReverseGeo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraReverseGeo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraReverseGeo}
 */
proto.SamsaraReverseGeo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormattedLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraReverseGeo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraReverseGeo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraReverseGeo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraReverseGeo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormattedLocation();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string formatted_location = 1;
 * @return {string}
 */
proto.SamsaraReverseGeo.prototype.getFormattedLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraReverseGeo} returns this
 */
proto.SamsaraReverseGeo.prototype.setFormattedLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SamsaraAddressResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.SamsaraAddress.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto.SamsaraPagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraAddressResponse}
 */
proto.SamsaraAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraAddressResponse;
  return proto.SamsaraAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraAddressResponse}
 */
proto.SamsaraAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SamsaraAddress;
      reader.readMessage(value,proto.SamsaraAddress.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new proto.SamsaraPagination;
      reader.readMessage(value,proto.SamsaraPagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SamsaraAddress.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.SamsaraPagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SamsaraAddress data = 1;
 * @return {!Array<!proto.SamsaraAddress>}
 */
proto.SamsaraAddressResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.SamsaraAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraAddress, 1));
};


/**
 * @param {!Array<!proto.SamsaraAddress>} value
 * @return {!proto.SamsaraAddressResponse} returns this
*/
proto.SamsaraAddressResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SamsaraAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAddress}
 */
proto.SamsaraAddressResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SamsaraAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAddressResponse} returns this
 */
proto.SamsaraAddressResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional SamsaraPagination pagination = 2;
 * @return {?proto.SamsaraPagination}
 */
proto.SamsaraAddressResponse.prototype.getPagination = function() {
  return /** @type{?proto.SamsaraPagination} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraPagination, 2));
};


/**
 * @param {?proto.SamsaraPagination|undefined} value
 * @return {!proto.SamsaraAddressResponse} returns this
*/
proto.SamsaraAddressResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraAddressResponse} returns this
 */
proto.SamsaraAddressResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraAddressResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraAddressResponseSingular.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraAddressResponseSingular.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraAddressResponseSingular} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAddressResponseSingular.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.SamsaraAddress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraAddressResponseSingular}
 */
proto.SamsaraAddressResponseSingular.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraAddressResponseSingular;
  return proto.SamsaraAddressResponseSingular.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraAddressResponseSingular} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraAddressResponseSingular}
 */
proto.SamsaraAddressResponseSingular.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SamsaraAddress;
      reader.readMessage(value,proto.SamsaraAddress.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraAddressResponseSingular.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraAddressResponseSingular.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraAddressResponseSingular} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAddressResponseSingular.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.SamsaraAddress.serializeBinaryToWriter
    );
  }
};


/**
 * optional SamsaraAddress data = 1;
 * @return {?proto.SamsaraAddress}
 */
proto.SamsaraAddressResponseSingular.prototype.getData = function() {
  return /** @type{?proto.SamsaraAddress} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraAddress, 1));
};


/**
 * @param {?proto.SamsaraAddress|undefined} value
 * @return {!proto.SamsaraAddressResponseSingular} returns this
*/
proto.SamsaraAddressResponseSingular.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraAddressResponseSingular} returns this
 */
proto.SamsaraAddressResponseSingular.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraAddressResponseSingular.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SamsaraAddress.repeatedFields_ = [1,2,3,10,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    contactsList: jspb.Message.toObjectList(msg.getContactsList(),
    proto.SamsaraContact.toObject, includeInstance),
    contactIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    createdAtTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    formattedAddress: jspb.Message.getFieldWithDefault(msg, 5, ""),
    externalIdsMap: (f = msg.getExternalIdsMap()) ? f.toObject(includeInstance, undefined) : [],
    geofence: (f = msg.getGeofence()) && proto.SamsaraGeofence.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 8, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 9, ""),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.SamsaraTag.toObject, includeInstance),
    tagIdsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    name: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraAddress}
 */
proto.SamsaraAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraAddress;
  return proto.SamsaraAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraAddress}
 */
proto.SamsaraAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddressTypes(value);
      break;
    case 2:
      var value = new proto.SamsaraContact;
      reader.readMessage(value,proto.SamsaraContact.deserializeBinaryFromReader);
      msg.addContacts(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addContactIds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAtTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormattedAddress(value);
      break;
    case 6:
      var value = msg.getExternalIdsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = new proto.SamsaraGeofence;
      reader.readMessage(value,proto.SamsaraGeofence.deserializeBinaryFromReader);
      msg.setGeofence(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 10:
      var value = new proto.SamsaraTag;
      reader.readMessage(value,proto.SamsaraTag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addTagIds(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getContactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.SamsaraContact.serializeBinaryToWriter
    );
  }
  f = message.getContactIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCreatedAtTime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFormattedAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExternalIdsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getGeofence();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.SamsaraGeofence.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.SamsaraTag.serializeBinaryToWriter
    );
  }
  f = message.getTagIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * repeated string address_types = 1;
 * @return {!Array<string>}
 */
proto.SamsaraAddress.prototype.getAddressTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setAddressTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.addAddressTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearAddressTypesList = function() {
  return this.setAddressTypesList([]);
};


/**
 * repeated SamsaraContact contacts = 2;
 * @return {!Array<!proto.SamsaraContact>}
 */
proto.SamsaraAddress.prototype.getContactsList = function() {
  return /** @type{!Array<!proto.SamsaraContact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraContact, 2));
};


/**
 * @param {!Array<!proto.SamsaraContact>} value
 * @return {!proto.SamsaraAddress} returns this
*/
proto.SamsaraAddress.prototype.setContactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.SamsaraContact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraContact}
 */
proto.SamsaraAddress.prototype.addContacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.SamsaraContact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearContactsList = function() {
  return this.setContactsList([]);
};


/**
 * repeated string contact_ids = 3;
 * @return {!Array<string>}
 */
proto.SamsaraAddress.prototype.getContactIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setContactIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.addContactIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearContactIdsList = function() {
  return this.setContactIdsList([]);
};


/**
 * optional string created_at_time = 4;
 * @return {string}
 */
proto.SamsaraAddress.prototype.getCreatedAtTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setCreatedAtTime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string formatted_address = 5;
 * @return {string}
 */
proto.SamsaraAddress.prototype.getFormattedAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setFormattedAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * map<string, string> external_ids = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.SamsaraAddress.prototype.getExternalIdsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearExternalIdsMap = function() {
  this.getExternalIdsMap().clear();
  return this;};


/**
 * optional SamsaraGeofence geofence = 7;
 * @return {?proto.SamsaraGeofence}
 */
proto.SamsaraAddress.prototype.getGeofence = function() {
  return /** @type{?proto.SamsaraGeofence} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraGeofence, 7));
};


/**
 * @param {?proto.SamsaraGeofence|undefined} value
 * @return {!proto.SamsaraAddress} returns this
*/
proto.SamsaraAddress.prototype.setGeofence = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearGeofence = function() {
  return this.setGeofence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraAddress.prototype.hasGeofence = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.SamsaraAddress.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string notes = 9;
 * @return {string}
 */
proto.SamsaraAddress.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated SamsaraTag tags = 10;
 * @return {!Array<!proto.SamsaraTag>}
 */
proto.SamsaraAddress.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.SamsaraTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SamsaraTag, 10));
};


/**
 * @param {!Array<!proto.SamsaraTag>} value
 * @return {!proto.SamsaraAddress} returns this
*/
proto.SamsaraAddress.prototype.setTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.SamsaraTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SamsaraTag}
 */
proto.SamsaraAddress.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.SamsaraTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated string tag_ids = 14;
 * @return {!Array<string>}
 */
proto.SamsaraAddress.prototype.getTagIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setTagIdsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.addTagIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.clearTagIdsList = function() {
  return this.setTagIdsList([]);
};


/**
 * optional double latitude = 11;
 * @return {number}
 */
proto.SamsaraAddress.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double longitude = 12;
 * @return {number}
 */
proto.SamsaraAddress.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string name = 13;
 * @return {string}
 */
proto.SamsaraAddress.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAddress} returns this
 */
proto.SamsaraAddress.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraGeofence.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraGeofence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraGeofence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraGeofence.toObject = function(includeInstance, msg) {
  var f, obj = {
    circle: (f = msg.getCircle()) && proto.SamsaraCircularFence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraGeofence}
 */
proto.SamsaraGeofence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraGeofence;
  return proto.SamsaraGeofence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraGeofence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraGeofence}
 */
proto.SamsaraGeofence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SamsaraCircularFence;
      reader.readMessage(value,proto.SamsaraCircularFence.deserializeBinaryFromReader);
      msg.setCircle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraGeofence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraGeofence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraGeofence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraGeofence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCircle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.SamsaraCircularFence.serializeBinaryToWriter
    );
  }
};


/**
 * optional SamsaraCircularFence circle = 1;
 * @return {?proto.SamsaraCircularFence}
 */
proto.SamsaraGeofence.prototype.getCircle = function() {
  return /** @type{?proto.SamsaraCircularFence} */ (
    jspb.Message.getWrapperField(this, proto.SamsaraCircularFence, 1));
};


/**
 * @param {?proto.SamsaraCircularFence|undefined} value
 * @return {!proto.SamsaraGeofence} returns this
*/
proto.SamsaraGeofence.prototype.setCircle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SamsaraGeofence} returns this
 */
proto.SamsaraGeofence.prototype.clearCircle = function() {
  return this.setCircle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SamsaraGeofence.prototype.hasCircle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraCircularFence.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraCircularFence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraCircularFence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraCircularFence.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    radiusMeters: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraCircularFence}
 */
proto.SamsaraCircularFence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraCircularFence;
  return proto.SamsaraCircularFence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraCircularFence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraCircularFence}
 */
proto.SamsaraCircularFence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRadiusMeters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraCircularFence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraCircularFence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraCircularFence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraCircularFence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRadiusMeters();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.SamsaraCircularFence.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraCircularFence} returns this
 */
proto.SamsaraCircularFence.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.SamsaraCircularFence.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraCircularFence} returns this
 */
proto.SamsaraCircularFence.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int64 radius_meters = 3;
 * @return {number}
 */
proto.SamsaraCircularFence.prototype.getRadiusMeters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SamsaraCircularFence} returns this
 */
proto.SamsaraCircularFence.prototype.setRadiusMeters = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraContact.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraContact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraContact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraContact.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraContact}
 */
proto.SamsaraContact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraContact;
  return proto.SamsaraContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraContact}
 */
proto.SamsaraContact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraContact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraContact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.SamsaraContact.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraContact} returns this
 */
proto.SamsaraContact.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.SamsaraContact.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraContact} returns this
 */
proto.SamsaraContact.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.SamsaraContact.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraContact} returns this
 */
proto.SamsaraContact.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraPagination.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraPagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraPagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraPagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    endCursor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hasNextPage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraPagination}
 */
proto.SamsaraPagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraPagination;
  return proto.SamsaraPagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraPagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraPagination}
 */
proto.SamsaraPagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndCursor(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNextPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraPagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraPagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraPagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraPagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndCursor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHasNextPage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string end_cursor = 1;
 * @return {string}
 */
proto.SamsaraPagination.prototype.getEndCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraPagination} returns this
 */
proto.SamsaraPagination.prototype.setEndCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool has_next_page = 2;
 * @return {boolean}
 */
proto.SamsaraPagination.prototype.getHasNextPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SamsaraPagination} returns this
 */
proto.SamsaraPagination.prototype.setHasNextPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraDriverRuleset.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraDriverRuleset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraDriverRuleset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraDriverRuleset.toObject = function(includeInstance, msg) {
  var f, obj = {
    cycle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    restart: jspb.Message.getFieldWithDefault(msg, 2, ""),
    restbreak: jspb.Message.getFieldWithDefault(msg, 3, ""),
    usStateToOverride: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraDriverRuleset}
 */
proto.SamsaraDriverRuleset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraDriverRuleset;
  return proto.SamsaraDriverRuleset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraDriverRuleset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraDriverRuleset}
 */
proto.SamsaraDriverRuleset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCycle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestart(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestbreak(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsStateToOverride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraDriverRuleset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraDriverRuleset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraDriverRuleset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraDriverRuleset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCycle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRestart();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRestbreak();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsStateToOverride();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string cycle = 1;
 * @return {string}
 */
proto.SamsaraDriverRuleset.prototype.getCycle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriverRuleset} returns this
 */
proto.SamsaraDriverRuleset.prototype.setCycle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string restart = 2;
 * @return {string}
 */
proto.SamsaraDriverRuleset.prototype.getRestart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriverRuleset} returns this
 */
proto.SamsaraDriverRuleset.prototype.setRestart = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string restbreak = 3;
 * @return {string}
 */
proto.SamsaraDriverRuleset.prototype.getRestbreak = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriverRuleset} returns this
 */
proto.SamsaraDriverRuleset.prototype.setRestbreak = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string us_state_to_override = 4;
 * @return {string}
 */
proto.SamsaraDriverRuleset.prototype.getUsStateToOverride = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraDriverRuleset} returns this
 */
proto.SamsaraDriverRuleset.prototype.setUsStateToOverride = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraTag.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraTag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraTag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraTag.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentTagId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraTag}
 */
proto.SamsaraTag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraTag;
  return proto.SamsaraTag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraTag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraTag}
 */
proto.SamsaraTag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentTagId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraTag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraTag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraTag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraTag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentTagId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.SamsaraTag.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraTag} returns this
 */
proto.SamsaraTag.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SamsaraTag.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraTag} returns this
 */
proto.SamsaraTag.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string parent_tag_id = 3;
 * @return {string}
 */
proto.SamsaraTag.prototype.getParentTagId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraTag} returns this
 */
proto.SamsaraTag.prototype.setParentTagId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraVehicle.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraVehicle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraVehicle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraVehicle.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraVehicle}
 */
proto.SamsaraVehicle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraVehicle;
  return proto.SamsaraVehicle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraVehicle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraVehicle}
 */
proto.SamsaraVehicle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraVehicle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraVehicle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraVehicle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraVehicle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.SamsaraVehicle.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraVehicle} returns this
 */
proto.SamsaraVehicle.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SamsaraVehicle.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraVehicle} returns this
 */
proto.SamsaraVehicle.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SamsaraAttribute.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SamsaraAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.SamsaraAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SamsaraAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    numberValuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    stringValuesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SamsaraAttribute}
 */
proto.SamsaraAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SamsaraAttribute;
  return proto.SamsaraAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SamsaraAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SamsaraAttribute}
 */
proto.SamsaraAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNumberValues(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addStringValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SamsaraAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SamsaraAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SamsaraAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SamsaraAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNumberValuesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getStringValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.SamsaraAttribute.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SamsaraAttribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated int32 number_values = 3;
 * @return {!Array<number>}
 */
proto.SamsaraAttribute.prototype.getNumberValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.setNumberValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.addNumberValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.clearNumberValuesList = function() {
  return this.setNumberValuesList([]);
};


/**
 * repeated string string_values = 4;
 * @return {!Array<string>}
 */
proto.SamsaraAttribute.prototype.getStringValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.setStringValuesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.addStringValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SamsaraAttribute} returns this
 */
proto.SamsaraAttribute.prototype.clearStringValuesList = function() {
  return this.setStringValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CarrierSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.CarrierSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CarrierSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CarrierSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    carrierName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dotNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    homeTerminalAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    homeTerminalName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mainOfficeAddress: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CarrierSettings}
 */
proto.CarrierSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CarrierSettings;
  return proto.CarrierSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CarrierSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CarrierSettings}
 */
proto.CarrierSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarrierName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDotNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeTerminalAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeTerminalName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainOfficeAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CarrierSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CarrierSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CarrierSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CarrierSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarrierName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDotNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHomeTerminalAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHomeTerminalName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMainOfficeAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string carrier_name = 1;
 * @return {string}
 */
proto.CarrierSettings.prototype.getCarrierName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CarrierSettings} returns this
 */
proto.CarrierSettings.prototype.setCarrierName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 dot_number = 2;
 * @return {number}
 */
proto.CarrierSettings.prototype.getDotNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CarrierSettings} returns this
 */
proto.CarrierSettings.prototype.setDotNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string home_terminal_address = 3;
 * @return {string}
 */
proto.CarrierSettings.prototype.getHomeTerminalAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.CarrierSettings} returns this
 */
proto.CarrierSettings.prototype.setHomeTerminalAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string home_terminal_name = 4;
 * @return {string}
 */
proto.CarrierSettings.prototype.getHomeTerminalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.CarrierSettings} returns this
 */
proto.CarrierSettings.prototype.setHomeTerminalName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string main_office_address = 5;
 * @return {string}
 */
proto.CarrierSettings.prototype.getMainOfficeAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.CarrierSettings} returns this
 */
proto.CarrierSettings.prototype.setMainOfficeAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ELDSettings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ELDSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.ELDSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ELDSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ELDSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    rulesetsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ELDSettings}
 */
proto.ELDSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ELDSettings;
  return proto.ELDSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ELDSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ELDSettings}
 */
proto.ELDSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRulesets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ELDSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ELDSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ELDSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ELDSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string rulesets = 1;
 * @return {!Array<string>}
 */
proto.ELDSettings.prototype.getRulesetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ELDSettings} returns this
 */
proto.ELDSettings.prototype.setRulesetsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ELDSettings} returns this
 */
proto.ELDSettings.prototype.addRulesets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ELDSettings} returns this
 */
proto.ELDSettings.prototype.clearRulesetsList = function() {
  return this.setRulesetsList([]);
};


goog.object.extend(exports, proto);
