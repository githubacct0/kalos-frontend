// source: perdiem.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var timesheet_department_pb = require('./timesheet_department_pb.js');
goog.object.extend(proto, timesheet_department_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.PerDiem', null, global);
goog.exportSymbol('proto.PerDiemList', null, global);
goog.exportSymbol('proto.PerDiemReportRequest', null, global);
goog.exportSymbol('proto.PerDiemRow', null, global);
goog.exportSymbol('proto.PerDiemRowList', null, global);
goog.exportSymbol('proto.SQLRequest', null, global);
goog.exportSymbol('proto.Trip', null, global);
goog.exportSymbol('proto.TripList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SQLRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SQLRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SQLRequest.displayName = 'proto.SQLRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PerDiemReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PerDiemReportRequest.repeatedFields_, null);
};
goog.inherits(proto.PerDiemReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PerDiemReportRequest.displayName = 'proto.PerDiemReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PerDiem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PerDiem.repeatedFields_, null);
};
goog.inherits(proto.PerDiem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PerDiem.displayName = 'proto.PerDiem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PerDiemList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PerDiemList.repeatedFields_, null);
};
goog.inherits(proto.PerDiemList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PerDiemList.displayName = 'proto.PerDiemList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PerDiemRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PerDiemRow.repeatedFields_, null);
};
goog.inherits(proto.PerDiemRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PerDiemRow.displayName = 'proto.PerDiemRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Trip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Trip.repeatedFields_, null);
};
goog.inherits(proto.Trip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Trip.displayName = 'proto.Trip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TripList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TripList.repeatedFields_, null);
};
goog.inherits(proto.TripList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TripList.displayName = 'proto.TripList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PerDiemRowList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PerDiemRowList.repeatedFields_, null);
};
goog.inherits(proto.PerDiemRowList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PerDiemRowList.displayName = 'proto.PerDiemRowList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SQLRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.SQLRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SQLRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SQLRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.PerDiem.toObject(includeInstance, f),
    requestType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SQLRequest}
 */
proto.SQLRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SQLRequest;
  return proto.SQLRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SQLRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SQLRequest}
 */
proto.SQLRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PerDiem;
      reader.readMessage(value,proto.PerDiem.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SQLRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SQLRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SQLRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SQLRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PerDiem.serializeBinaryToWriter
    );
  }
  f = message.getRequestType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PerDiem data = 1;
 * @return {?proto.PerDiem}
 */
proto.SQLRequest.prototype.getData = function() {
  return /** @type{?proto.PerDiem} */ (
    jspb.Message.getWrapperField(this, proto.PerDiem, 1));
};


/**
 * @param {?proto.PerDiem|undefined} value
 * @return {!proto.SQLRequest} returns this
*/
proto.SQLRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SQLRequest} returns this
 */
proto.SQLRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SQLRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string request_type = 2;
 * @return {string}
 */
proto.SQLRequest.prototype.getRequestType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SQLRequest} returns this
 */
proto.SQLRequest.prototype.setRequestType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PerDiemReportRequest.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PerDiemReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.PerDiemReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PerDiemReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    weekList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    userIdList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    departmentIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PerDiemReportRequest}
 */
proto.PerDiemReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PerDiemReportRequest;
  return proto.PerDiemReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PerDiemReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PerDiemReportRequest}
 */
proto.PerDiemReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addWeek(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUserId(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDepartmentId(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PerDiemReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PerDiemReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PerDiemReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeekList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getUserIdList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getDepartmentIdList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * repeated string week = 1;
 * @return {!Array<string>}
 */
proto.PerDiemReportRequest.prototype.getWeekList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.setWeekList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.addWeek = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.clearWeekList = function() {
  return this.setWeekList([]);
};


/**
 * repeated int32 user_id = 2;
 * @return {!Array<number>}
 */
proto.PerDiemReportRequest.prototype.getUserIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.setUserIdList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.addUserId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.clearUserIdList = function() {
  return this.setUserIdList([]);
};


/**
 * repeated int32 department_id = 3;
 * @return {!Array<number>}
 */
proto.PerDiemReportRequest.prototype.getDepartmentIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.setDepartmentIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.addDepartmentId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiemReportRequest} returns this
 */
proto.PerDiemReportRequest.prototype.clearDepartmentIdList = function() {
  return this.setDepartmentIdList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PerDiem.repeatedFields_ = [10,11,20,22,23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PerDiem.prototype.toObject = function(opt_includeInstance) {
  return proto.PerDiem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PerDiem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dateStarted: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    departmentId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    notes: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ownerName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    department: (f = msg.getDepartment()) && timesheet_department_pb.TimesheetDepartment.toObject(includeInstance, f),
    withRows: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.PerDiemRow.toObject, includeInstance),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dateSubmitted: jspb.Message.getFieldWithDefault(msg, 13, ""),
    dateApproved: jspb.Message.getFieldWithDefault(msg, 14, ""),
    approvedById: jspb.Message.getFieldWithDefault(msg, 15, 0),
    approvedByName: jspb.Message.getFieldWithDefault(msg, 16, ""),
    needsAuditing: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    withoutLimit: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    payrollProcessed: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    notEqualsList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
    referenceRow: (f = msg.getReferenceRow()) && proto.PerDiemRow.toObject(includeInstance, f),
    dateRangeList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
    dateTargetList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
    dateProcessed: jspb.Message.getFieldWithDefault(msg, 24, ""),
    amountProcessedLodging: jspb.Message.getFieldWithDefault(msg, 25, 0),
    amountProcessedMeals: jspb.Message.getFieldWithDefault(msg, 26, 0),
    orderBy: jspb.Message.getFieldWithDefault(msg, 27, ""),
    orderDir: jspb.Message.getFieldWithDefault(msg, 28, ""),
    groupBy: jspb.Message.getFieldWithDefault(msg, 29, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PerDiem}
 */
proto.PerDiem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PerDiem;
  return proto.PerDiem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PerDiem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PerDiem}
 */
proto.PerDiem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateStarted(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerName(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 8:
      var value = new timesheet_department_pb.TimesheetDepartment;
      reader.readMessage(value,timesheet_department_pb.TimesheetDepartment.deserializeBinaryFromReader);
      msg.setDepartment(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithRows(value);
      break;
    case 10:
      var value = new proto.PerDiemRow;
      reader.readMessage(value,proto.PerDiemRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateSubmitted(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateApproved(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApprovedById(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setApprovedByName(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNeedsAuditing(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithoutLimit(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPayrollProcessed(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotEquals(value);
      break;
    case 21:
      var value = new proto.PerDiemRow;
      reader.readMessage(value,proto.PerDiemRow.deserializeBinaryFromReader);
      msg.setReferenceRow(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addDateRange(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.addDateTarget(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateProcessed(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountProcessedLodging(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountProcessedMeals(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderDir(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PerDiem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PerDiem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PerDiem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDateStarted();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOwnerName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDepartment();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      timesheet_department_pb.TimesheetDepartment.serializeBinaryToWriter
    );
  }
  f = message.getWithRows();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.PerDiemRow.serializeBinaryToWriter
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDateSubmitted();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDateApproved();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getApprovedById();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getApprovedByName();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNeedsAuditing();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getWithoutLimit();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPayrollProcessed();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getNotEqualsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
  f = message.getReferenceRow();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.PerDiemRow.serializeBinaryToWriter
    );
  }
  f = message.getDateRangeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = message.getDateTargetList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      23,
      f
    );
  }
  f = message.getDateProcessed();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getAmountProcessedLodging();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getAmountProcessedMeals();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getOrderDir();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getGroupBy();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.PerDiem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string date_started = 2;
 * @return {string}
 */
proto.PerDiem.prototype.getDateStarted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDateStarted = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.PerDiem.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 department_id = 4;
 * @return {number}
 */
proto.PerDiem.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string notes = 5;
 * @return {string}
 */
proto.PerDiem.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string owner_name = 6;
 * @return {string}
 */
proto.PerDiem.prototype.getOwnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setOwnerName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.PerDiem.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional TimesheetDepartment department = 8;
 * @return {?proto.TimesheetDepartment}
 */
proto.PerDiem.prototype.getDepartment = function() {
  return /** @type{?proto.TimesheetDepartment} */ (
    jspb.Message.getWrapperField(this, timesheet_department_pb.TimesheetDepartment, 8));
};


/**
 * @param {?proto.TimesheetDepartment|undefined} value
 * @return {!proto.PerDiem} returns this
*/
proto.PerDiem.prototype.setDepartment = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearDepartment = function() {
  return this.setDepartment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PerDiem.prototype.hasDepartment = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool with_rows = 9;
 * @return {boolean}
 */
proto.PerDiem.prototype.getWithRows = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setWithRows = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated PerDiemRow rows = 10;
 * @return {!Array<!proto.PerDiemRow>}
 */
proto.PerDiem.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.PerDiemRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PerDiemRow, 10));
};


/**
 * @param {!Array<!proto.PerDiemRow>} value
 * @return {!proto.PerDiem} returns this
*/
proto.PerDiem.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.PerDiemRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PerDiemRow}
 */
proto.PerDiem.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.PerDiemRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * repeated string field_mask = 11;
 * @return {!Array<string>}
 */
proto.PerDiem.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 page_number = 12;
 * @return {number}
 */
proto.PerDiem.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string date_submitted = 13;
 * @return {string}
 */
proto.PerDiem.prototype.getDateSubmitted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDateSubmitted = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string date_approved = 14;
 * @return {string}
 */
proto.PerDiem.prototype.getDateApproved = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDateApproved = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 approved_by_id = 15;
 * @return {number}
 */
proto.PerDiem.prototype.getApprovedById = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setApprovedById = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string approved_by_name = 16;
 * @return {string}
 */
proto.PerDiem.prototype.getApprovedByName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setApprovedByName = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool needs_auditing = 17;
 * @return {boolean}
 */
proto.PerDiem.prototype.getNeedsAuditing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setNeedsAuditing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool without_limit = 18;
 * @return {boolean}
 */
proto.PerDiem.prototype.getWithoutLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setWithoutLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool payroll_processed = 19;
 * @return {boolean}
 */
proto.PerDiem.prototype.getPayrollProcessed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setPayrollProcessed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * repeated string not_equals = 20;
 * @return {!Array<string>}
 */
proto.PerDiem.prototype.getNotEqualsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setNotEqualsList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.addNotEquals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearNotEqualsList = function() {
  return this.setNotEqualsList([]);
};


/**
 * optional PerDiemRow reference_row = 21;
 * @return {?proto.PerDiemRow}
 */
proto.PerDiem.prototype.getReferenceRow = function() {
  return /** @type{?proto.PerDiemRow} */ (
    jspb.Message.getWrapperField(this, proto.PerDiemRow, 21));
};


/**
 * @param {?proto.PerDiemRow|undefined} value
 * @return {!proto.PerDiem} returns this
*/
proto.PerDiem.prototype.setReferenceRow = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearReferenceRow = function() {
  return this.setReferenceRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PerDiem.prototype.hasReferenceRow = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated string date_range = 22;
 * @return {!Array<string>}
 */
proto.PerDiem.prototype.getDateRangeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDateRangeList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.addDateRange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearDateRangeList = function() {
  return this.setDateRangeList([]);
};


/**
 * repeated string date_target = 23;
 * @return {!Array<string>}
 */
proto.PerDiem.prototype.getDateTargetList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 23));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDateTargetList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.addDateTarget = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.clearDateTargetList = function() {
  return this.setDateTargetList([]);
};


/**
 * optional string date_processed = 24;
 * @return {string}
 */
proto.PerDiem.prototype.getDateProcessed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setDateProcessed = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional int32 amount_processed_lodging = 25;
 * @return {number}
 */
proto.PerDiem.prototype.getAmountProcessedLodging = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setAmountProcessedLodging = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 amount_processed_meals = 26;
 * @return {number}
 */
proto.PerDiem.prototype.getAmountProcessedMeals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setAmountProcessedMeals = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string order_by = 27;
 * @return {string}
 */
proto.PerDiem.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string order_dir = 28;
 * @return {string}
 */
proto.PerDiem.prototype.getOrderDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setOrderDir = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string group_by = 29;
 * @return {string}
 */
proto.PerDiem.prototype.getGroupBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiem} returns this
 */
proto.PerDiem.prototype.setGroupBy = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PerDiemList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PerDiemList.prototype.toObject = function(opt_includeInstance) {
  return proto.PerDiemList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PerDiemList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.PerDiem.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PerDiemList}
 */
proto.PerDiemList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PerDiemList;
  return proto.PerDiemList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PerDiemList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PerDiemList}
 */
proto.PerDiemList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PerDiem;
      reader.readMessage(value,proto.PerDiem.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PerDiemList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PerDiemList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PerDiemList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PerDiem.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated PerDiem results = 1;
 * @return {!Array<!proto.PerDiem>}
 */
proto.PerDiemList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.PerDiem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PerDiem, 1));
};


/**
 * @param {!Array<!proto.PerDiem>} value
 * @return {!proto.PerDiemList} returns this
*/
proto.PerDiemList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PerDiem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PerDiem}
 */
proto.PerDiemList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PerDiem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiemList} returns this
 */
proto.PerDiemList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.PerDiemList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiemList} returns this
 */
proto.PerDiemList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PerDiemRow.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PerDiemRow.prototype.toObject = function(opt_includeInstance) {
  return proto.PerDiemRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PerDiemRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    perDiemId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    zipCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    serviceCallId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    notes: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dateString: jspb.Message.getFieldWithDefault(msg, 6, ""),
    mealsOnly: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PerDiemRow}
 */
proto.PerDiemRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PerDiemRow;
  return proto.PerDiemRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PerDiemRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PerDiemRow}
 */
proto.PerDiemRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerDiemId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServiceCallId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateString(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMealsOnly(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PerDiemRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PerDiemRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PerDiemRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPerDiemId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getZipCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServiceCallId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDateString();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMealsOnly();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.PerDiemRow.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 per_diem_id = 2;
 * @return {number}
 */
proto.PerDiemRow.prototype.getPerDiemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setPerDiemId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string zip_code = 3;
 * @return {string}
 */
proto.PerDiemRow.prototype.getZipCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setZipCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 service_call_id = 4;
 * @return {number}
 */
proto.PerDiemRow.prototype.getServiceCallId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setServiceCallId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string notes = 5;
 * @return {string}
 */
proto.PerDiemRow.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string date_string = 6;
 * @return {string}
 */
proto.PerDiemRow.prototype.getDateString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setDateString = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool meals_only = 7;
 * @return {boolean}
 */
proto.PerDiemRow.prototype.getMealsOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setMealsOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated string field_mask = 8;
 * @return {!Array<string>}
 */
proto.PerDiemRow.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiemRow} returns this
 */
proto.PerDiemRow.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Trip.repeatedFields_ = [6,16,22,23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Trip.prototype.toObject = function(opt_includeInstance) {
  return proto.Trip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Trip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Trip.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    distanceInMiles: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    originAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    destinationAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    perDiemRowId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    userId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    notes: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payrollProcessed: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    page: jspb.Message.getFieldWithDefault(msg, 10, 0),
    approved: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    departmentId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    date: jspb.Message.getFieldWithDefault(msg, 13, ""),
    jobNumber: jspb.Message.getFieldWithDefault(msg, 14, 0),
    calculatedDurationInSeconds: jspb.Message.getFieldWithDefault(msg, 15, 0),
    notEqualsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    userName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    departmentName: jspb.Message.getFieldWithDefault(msg, 18, ""),
    adminActionDate: jspb.Message.getFieldWithDefault(msg, 19, ""),
    homeTravel: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    dateProcessed: jspb.Message.getFieldWithDefault(msg, 21, ""),
    dateRangeList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
    dateTargetList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    orderBy: jspb.Message.getFieldWithDefault(msg, 25, ""),
    orderDir: jspb.Message.getFieldWithDefault(msg, 26, ""),
    groupBy: jspb.Message.getFieldWithDefault(msg, 27, ""),
    withoutLimit: jspb.Message.getBooleanFieldWithDefault(msg, 28, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Trip}
 */
proto.Trip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Trip;
  return proto.Trip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Trip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Trip}
 */
proto.Trip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceInMiles(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerDiemRowId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPayrollProcessed(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApproved(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepartmentId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobNumber(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCalculatedDurationInSeconds(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotEquals(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartmentName(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminActionDate(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHomeTravel(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateProcessed(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addDateRange(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.addDateTarget(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderDir(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupBy(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithoutLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Trip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Trip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Trip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Trip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDistanceInMiles();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getOriginAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDestinationAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPerDiemRowId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPayrollProcessed();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getApproved();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getJobNumber();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getCalculatedDurationInSeconds();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getNotEqualsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDepartmentName();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getAdminActionDate();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getHomeTravel();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getDateProcessed();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getDateRangeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = message.getDateTargetList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      23,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getOrderDir();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getGroupBy();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getWithoutLimit();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Trip.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double distance_in_miles = 2;
 * @return {number}
 */
proto.Trip.prototype.getDistanceInMiles = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDistanceInMiles = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string origin_address = 3;
 * @return {string}
 */
proto.Trip.prototype.getOriginAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setOriginAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string destination_address = 4;
 * @return {string}
 */
proto.Trip.prototype.getDestinationAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDestinationAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 per_diem_row_id = 5;
 * @return {number}
 */
proto.Trip.prototype.getPerDiemRowId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setPerDiemRowId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated string field_mask = 6;
 * @return {!Array<string>}
 */
proto.Trip.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 user_id = 7;
 * @return {number}
 */
proto.Trip.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string notes = 8;
 * @return {string}
 */
proto.Trip.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool payroll_processed = 9;
 * @return {boolean}
 */
proto.Trip.prototype.getPayrollProcessed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setPayrollProcessed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 page = 10;
 * @return {number}
 */
proto.Trip.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool approved = 11;
 * @return {boolean}
 */
proto.Trip.prototype.getApproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setApproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int32 department_id = 12;
 * @return {number}
 */
proto.Trip.prototype.getDepartmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDepartmentId = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string date = 13;
 * @return {string}
 */
proto.Trip.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 job_number = 14;
 * @return {number}
 */
proto.Trip.prototype.getJobNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setJobNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 calculated_duration_in_seconds = 15;
 * @return {number}
 */
proto.Trip.prototype.getCalculatedDurationInSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setCalculatedDurationInSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * repeated string not_equals = 16;
 * @return {!Array<string>}
 */
proto.Trip.prototype.getNotEqualsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setNotEqualsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.addNotEquals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.clearNotEqualsList = function() {
  return this.setNotEqualsList([]);
};


/**
 * optional string user_name = 17;
 * @return {string}
 */
proto.Trip.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string department_name = 18;
 * @return {string}
 */
proto.Trip.prototype.getDepartmentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDepartmentName = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string admin_action_date = 19;
 * @return {string}
 */
proto.Trip.prototype.getAdminActionDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setAdminActionDate = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bool home_travel = 20;
 * @return {boolean}
 */
proto.Trip.prototype.getHomeTravel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setHomeTravel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional string date_processed = 21;
 * @return {string}
 */
proto.Trip.prototype.getDateProcessed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDateProcessed = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * repeated string date_range = 22;
 * @return {!Array<string>}
 */
proto.Trip.prototype.getDateRangeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDateRangeList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.addDateRange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.clearDateRangeList = function() {
  return this.setDateRangeList([]);
};


/**
 * repeated string date_target = 23;
 * @return {!Array<string>}
 */
proto.Trip.prototype.getDateTargetList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 23));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setDateTargetList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.addDateTarget = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.clearDateTargetList = function() {
  return this.setDateTargetList([]);
};


/**
 * optional bool is_active = 24;
 * @return {boolean}
 */
proto.Trip.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional string order_by = 25;
 * @return {string}
 */
proto.Trip.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string order_dir = 26;
 * @return {string}
 */
proto.Trip.prototype.getOrderDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setOrderDir = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string group_by = 27;
 * @return {string}
 */
proto.Trip.prototype.getGroupBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setGroupBy = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional bool without_limit = 28;
 * @return {boolean}
 */
proto.Trip.prototype.getWithoutLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Trip} returns this
 */
proto.Trip.prototype.setWithoutLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TripList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TripList.prototype.toObject = function(opt_includeInstance) {
  return proto.TripList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TripList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TripList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Trip.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TripList}
 */
proto.TripList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TripList;
  return proto.TripList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TripList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TripList}
 */
proto.TripList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Trip;
      reader.readMessage(value,proto.Trip.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TripList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TripList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TripList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TripList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Trip.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated Trip results = 1;
 * @return {!Array<!proto.Trip>}
 */
proto.TripList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Trip>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Trip, 1));
};


/**
 * @param {!Array<!proto.Trip>} value
 * @return {!proto.TripList} returns this
*/
proto.TripList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Trip=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Trip}
 */
proto.TripList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Trip, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.TripList} returns this
 */
proto.TripList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.TripList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.TripList} returns this
 */
proto.TripList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PerDiemRowList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PerDiemRowList.prototype.toObject = function(opt_includeInstance) {
  return proto.PerDiemRowList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PerDiemRowList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemRowList.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.PerDiemRow.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PerDiemRowList}
 */
proto.PerDiemRowList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PerDiemRowList;
  return proto.PerDiemRowList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PerDiemRowList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PerDiemRowList}
 */
proto.PerDiemRowList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PerDiemRow;
      reader.readMessage(value,proto.PerDiemRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PerDiemRowList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PerDiemRowList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PerDiemRowList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PerDiemRowList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PerDiemRow.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated PerDiemRow rows = 1;
 * @return {!Array<!proto.PerDiemRow>}
 */
proto.PerDiemRowList.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.PerDiemRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PerDiemRow, 1));
};


/**
 * @param {!Array<!proto.PerDiemRow>} value
 * @return {!proto.PerDiemRowList} returns this
*/
proto.PerDiemRowList.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PerDiemRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PerDiemRow}
 */
proto.PerDiemRowList.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PerDiemRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PerDiemRowList} returns this
 */
proto.PerDiemRowList.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.PerDiemRowList.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PerDiemRowList} returns this
 */
proto.PerDiemRowList.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto);
