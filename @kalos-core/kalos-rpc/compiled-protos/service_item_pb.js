// source: service_item.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ServiceItem', null, global);
goog.exportSymbol('proto.ServiceItemList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ServiceItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ServiceItem.repeatedFields_, null);
};
goog.inherits(proto.ServiceItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ServiceItem.displayName = 'proto.ServiceItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ServiceItemList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ServiceItemList.repeatedFields_, null);
};
goog.inherits(proto.ServiceItemList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ServiceItemList.displayName = 'proto.ServiceItemList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ServiceItem.repeatedFields_ = [31];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ServiceItem.prototype.toObject = function(opt_includeInstance) {
  return proto.ServiceItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ServiceItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServiceItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    propertyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    item: jspb.Message.getFieldWithDefault(msg, 4, ""),
    brand: jspb.Message.getFieldWithDefault(msg, 5, ""),
    startDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    model: jspb.Message.getFieldWithDefault(msg, 7, ""),
    serial: jspb.Message.getFieldWithDefault(msg, 8, ""),
    item2: jspb.Message.getFieldWithDefault(msg, 9, ""),
    brand2: jspb.Message.getFieldWithDefault(msg, 10, ""),
    model2: jspb.Message.getFieldWithDefault(msg, 11, ""),
    serial2: jspb.Message.getFieldWithDefault(msg, 12, ""),
    item3: jspb.Message.getFieldWithDefault(msg, 13, ""),
    brand3: jspb.Message.getFieldWithDefault(msg, 14, ""),
    model3: jspb.Message.getFieldWithDefault(msg, 15, ""),
    serial3: jspb.Message.getFieldWithDefault(msg, 16, ""),
    filterSize: jspb.Message.getFieldWithDefault(msg, 17, ""),
    location: jspb.Message.getFieldWithDefault(msg, 18, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 19, ""),
    beltSize: jspb.Message.getFieldWithDefault(msg, 20, ""),
    filterWidth: jspb.Message.getFieldWithDefault(msg, 21, ""),
    filterLength: jspb.Message.getFieldWithDefault(msg, 22, ""),
    filterThickness: jspb.Message.getFieldWithDefault(msg, 23, ""),
    filterQty: jspb.Message.getFieldWithDefault(msg, 24, ""),
    filterPartNumber: jspb.Message.getFieldWithDefault(msg, 25, ""),
    filterVendor: jspb.Message.getFieldWithDefault(msg, 26, ""),
    sortOrder: jspb.Message.getFieldWithDefault(msg, 27, 0),
    systemReadingsTypeId: jspb.Message.getFieldWithDefault(msg, 28, 0),
    isActive: jspb.Message.getFieldWithDefault(msg, 29, 0),
    refrigerantType: jspb.Message.getFieldWithDefault(msg, 30, 0),
    fieldMaskList: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
    pageNumber: jspb.Message.getFieldWithDefault(msg, 32, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ServiceItem}
 */
proto.ServiceItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ServiceItem;
  return proto.ServiceItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ServiceItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ServiceItem}
 */
proto.ServiceItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropertyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setItem(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerial(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setItem2(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand2(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel2(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerial2(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setItem3(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand3(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel3(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerial3(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterSize(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeltSize(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterWidth(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterLength(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterThickness(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterQty(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterPartNumber(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterVendor(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSystemReadingsTypeId(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsActive(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefrigerantType(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldMask(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ServiceItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ServiceItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ServiceItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServiceItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPropertyId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getItem();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSerial();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getItem2();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBrand2();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getModel2();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSerial2();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getItem3();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBrand3();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getModel3();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSerial3();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getFilterSize();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getBeltSize();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getFilterWidth();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getFilterLength();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getFilterThickness();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getFilterQty();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFilterPartNumber();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getFilterVendor();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getSystemReadingsTypeId();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getIsActive();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getRefrigerantType();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getFieldMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      31,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.ServiceItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 property_id = 2;
 * @return {number}
 */
proto.ServiceItem.prototype.getPropertyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setPropertyId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.ServiceItem.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string item = 4;
 * @return {string}
 */
proto.ServiceItem.prototype.getItem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setItem = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string brand = 5;
 * @return {string}
 */
proto.ServiceItem.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string start_date = 6;
 * @return {string}
 */
proto.ServiceItem.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string model = 7;
 * @return {string}
 */
proto.ServiceItem.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string serial = 8;
 * @return {string}
 */
proto.ServiceItem.prototype.getSerial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setSerial = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string item2 = 9;
 * @return {string}
 */
proto.ServiceItem.prototype.getItem2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setItem2 = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string brand2 = 10;
 * @return {string}
 */
proto.ServiceItem.prototype.getBrand2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setBrand2 = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string model2 = 11;
 * @return {string}
 */
proto.ServiceItem.prototype.getModel2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setModel2 = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string serial2 = 12;
 * @return {string}
 */
proto.ServiceItem.prototype.getSerial2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setSerial2 = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string item3 = 13;
 * @return {string}
 */
proto.ServiceItem.prototype.getItem3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setItem3 = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string brand3 = 14;
 * @return {string}
 */
proto.ServiceItem.prototype.getBrand3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setBrand3 = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string model3 = 15;
 * @return {string}
 */
proto.ServiceItem.prototype.getModel3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setModel3 = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string serial3 = 16;
 * @return {string}
 */
proto.ServiceItem.prototype.getSerial3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setSerial3 = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string filter_size = 17;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterSize = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string location = 18;
 * @return {string}
 */
proto.ServiceItem.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string notes = 19;
 * @return {string}
 */
proto.ServiceItem.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string belt_size = 20;
 * @return {string}
 */
proto.ServiceItem.prototype.getBeltSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setBeltSize = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string filter_width = 21;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterWidth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterWidth = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string filter_length = 22;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterLength = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterLength = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string filter_thickness = 23;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterThickness = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterThickness = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string filter_qty = 24;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterQty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterQty = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string filter_part_number = 25;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterPartNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterPartNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string filter_vendor = 26;
 * @return {string}
 */
proto.ServiceItem.prototype.getFilterVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFilterVendor = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional int32 sort_order = 27;
 * @return {number}
 */
proto.ServiceItem.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int32 system_readings_type_id = 28;
 * @return {number}
 */
proto.ServiceItem.prototype.getSystemReadingsTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setSystemReadingsTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int32 is_active = 29;
 * @return {number}
 */
proto.ServiceItem.prototype.getIsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional int32 refrigerant_type = 30;
 * @return {number}
 */
proto.ServiceItem.prototype.getRefrigerantType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setRefrigerantType = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * repeated string field_mask = 31;
 * @return {!Array<string>}
 */
proto.ServiceItem.prototype.getFieldMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setFieldMaskList = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.addFieldMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.clearFieldMaskList = function() {
  return this.setFieldMaskList([]);
};


/**
 * optional int32 page_number = 32;
 * @return {number}
 */
proto.ServiceItem.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItem} returns this
 */
proto.ServiceItem.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ServiceItemList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ServiceItemList.prototype.toObject = function(opt_includeInstance) {
  return proto.ServiceItemList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ServiceItemList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServiceItemList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.ServiceItem.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ServiceItemList}
 */
proto.ServiceItemList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ServiceItemList;
  return proto.ServiceItemList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ServiceItemList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ServiceItemList}
 */
proto.ServiceItemList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ServiceItem;
      reader.readMessage(value,proto.ServiceItem.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ServiceItemList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ServiceItemList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ServiceItemList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServiceItemList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ServiceItem.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated ServiceItem results = 1;
 * @return {!Array<!proto.ServiceItem>}
 */
proto.ServiceItemList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.ServiceItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ServiceItem, 1));
};


/**
 * @param {!Array<!proto.ServiceItem>} value
 * @return {!proto.ServiceItemList} returns this
*/
proto.ServiceItemList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ServiceItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ServiceItem}
 */
proto.ServiceItemList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ServiceItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ServiceItemList} returns this
 */
proto.ServiceItemList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.ServiceItemList.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ServiceItemList} returns this
 */
proto.ServiceItemList.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto);
